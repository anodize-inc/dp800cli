Programming Guide

DP800 Series Programmable Linear
DC Power Supply

Jun. 2021
RIGOL TECHNOLOGIES CO., LTD.

RIGOL

Guaranty and Declaration
Copyright

© 2021 RIGOL TECHNOLOGIES CO., LTD. All Rights Reserved.

Trademark Information

RIGOL® is the trademark of RIGOL TECHNOLOGIES CO., LTD.

Publication Number
PGH03109-1110

Software Version

00.01.17
Software upgrade might change or add product features. Please acquire the latest version of the manual
from RIGOL website or contact RIGOL to upgrade the software.

Notices








RIGOL products are covered by P.R.C. and foreign patents, issued and pending.
RIGOL reserves the right to modify or change parts of or all the specifications and pricing policies at
the company’s sole decision.
Information in this publication replaces all previously released materials.
Information in this publication is subject to change without notice.
RIGOL shall not be liable for either incidental or consequential losses in connection with the furnishing,
use, or performance of this manual, as well as any information contained.
Any part of this document is forbidden to be copied, photocopied, or rearranged without prior written
approval of RIGOL.

Product Certification

RIGOL guarantees that this product conforms to the national and industrial standards in China as well as
the ISO9001:2015 standard and the ISO14001:2015 standard. Other international standard conformance
certifications are in progress.

Contact Us

If you have any problem or requirement when using our products or this manual, please contact RIGOL.
E-mail: service@rigol.com
Website: www.rigol.com

DP800 Programming Guide

I

RIGOL

Document Overview
This manual introduces how to program the power supply over remote interfaces in details.

Main Topics in this Manual:
Chapter 1 Programming Overview
This chapter introduces how to build the remote communication between the power supply and PC and how
to control the power supply remotely. Besides, it also provides a brief introduction of the syntax, symbols,
parameter types and abbreviation rules of the SCPI commands as well as the SCPI status system.
Chapter 2 Command System
This chapter introduces the syntax, function, parameters and using instruction of each DP800 command in
A-Z order.
Chapter 3 Application Examples
This chapter provides the application examples of the main functions of the power supply. In the application
example, a series of commands are combined to realize the corresponding basic function of the power
supply.
Chapter 4 Programming Demos
This chapter introduces how to program and control DP800 using various development tools, such as Visual
C++, Visual Basic and LabVIEW.
Chapter 5 Appendix
This chapter provides various information, such as the command list and factory setting list.
Tip
For the newest version of this manual, please download it from RIGOL official website (www.rigol.com).

Format Conventions in this Manual:
1

Key
The function key on the front panel is denoted by the format of "Key Name (Bold) + Text Box" in the
manual. For example, Utility denotes the "Utility" key.

2

Menu
The menu item is denoted by the format of "Menu Word (Bold) + Character Shading" in the manual.
For example, SysInfo denotes the "SysInfo" item under Utility.

3

Operation Step
The next step of the operation is denoted by an arrow "" in the manual. For example, Utility 
System denotes that first press Utility on the front panel and then press System.

II

DP800 Programming Guide

RIGOL

Content Conventions in this Manual:
DP800 series programmable linear DC power supply includes the following models. Unless otherwise noted,
in this manual, DP831A is taken as an example to illustrate the using method of each DP800 series
command.
Model

Number of Channels

Output Voltage/Current

DP832A/DP832

3

30V/3A, 30V/3A, 5V/3A

DP831A/DP831

3

8V/5A, 30V/2A, -30V/2A

DP822A/DP822

2

20V/5A, 5V/16A

DP821A/DP821

2

60V/1A, 8V/10A

DP813A/DP813

1

8V/20A (Range 1), 20V/10A (Range 2)

DP811A/DP811

1

20V/10A (Range 1), 40V/5A (Range 2)

DP800 Programming Guide

III

RIGOL

Contents

Contents
Guaranty and Declaration ....................................................................................................... I
Document Overview .............................................................................................................. II
Chapter 1 Programming Overview ...................................................................................1-1
To Build Remote Communication ................................................................................................1-2
Remote Control Methods ...........................................................................................................1-3
SCPI Command Overview ..........................................................................................................1-3
Syntax ...............................................................................................................................1-3
Symbol Description .............................................................................................................1-4
Parameter Type ..................................................................................................................1-4
Command Abbreviation .......................................................................................................1-5
SCPI Status Registers ................................................................................................................1-5
Questionable Status Register ...............................................................................................1-9
Standard Event Register.................................................................................................... 1-12
Status Byte Register ......................................................................................................... 1-13
Chapter 2 Command System ............................................................................................2-1
:ANALyzer Commands ...............................................................................................................2-2
:ANALyzer:ANALyze ............................................................................................................2-2
:ANALyzer:CURRTime .........................................................................................................2-3
:ANALyzer:ENDTime ...........................................................................................................2-4
:ANALyzer:FILE? .................................................................................................................2-4
:ANALyzer:MEMory .............................................................................................................2-5
:ANALyzer:MMEMory...........................................................................................................2-5
:ANALyzer:OBJect ...............................................................................................................2-6
:ANALyzer:RESult? ..............................................................................................................2-6
:ANALyzer:STARTTime ........................................................................................................2-7
:ANALyzer:VALue? ..............................................................................................................2-7
:APPLy Command ......................................................................................................................2-8
:APPLy ...............................................................................................................................2-9
:DELAY Commands.................................................................................................................. 2-11
:DELAY:CYCLEs ................................................................................................................ 2-12
:DELAY:ENDState ............................................................................................................. 2-13
:DELAY:GROUPs ............................................................................................................... 2-14
:DELAY:PARAmeter ........................................................................................................... 2-15
:DELAY[:STATe] ................................................................................................................ 2-16
:DELAY:STATe:GEN ........................................................................................................... 2-16
:DELAY:STOP.................................................................................................................... 2-17
:DELAY:TIME:GEN ............................................................................................................ 2-18
:DISPlay Commands ................................................................................................................ 2-19
:DISPlay:MODE ................................................................................................................ 2-19
:DISPlay[:WINDow][:STATe] ............................................................................................. 2-20
:DISPlay[:WINDow]:TEXT:CLEar ....................................................................................... 2-20
:DISPlay[:WINDow]:TEXT[:DATA] ..................................................................................... 2-21
IEEE488.2 Common Commands ............................................................................................... 2-22
*CLS ................................................................................................................................ 2-22
*ESE................................................................................................................................ 2-23
*ESR? .............................................................................................................................. 2-24
*IDN? .............................................................................................................................. 2-24
*OPC ............................................................................................................................... 2-25
*OPT? ............................................................................................................................. 2-25
*PSC ............................................................................................................................... 2-26
*RCL ............................................................................................................................... 2-26
*RST ............................................................................................................................... 2-27
*SAV ............................................................................................................................... 2-27
IV

DP800 Programming Guide

Contents

RIGOL

*SRE ............................................................................................................................... 2-28
*STB? ............................................................................................................................. 2-28
*TRG............................................................................................................................... 2-29
*TST? ............................................................................................................................. 2-29
*WAI............................................................................................................................... 2-29
:INITiate Command ................................................................................................................ 2-30
:INITiate ......................................................................................................................... 2-30
:INSTrument Commands ......................................................................................................... 2-31
:INSTrument:COUPle[:TRIGger] ........................................................................................ 2-31
:INSTrument:NSELect ....................................................................................................... 2-32
:INSTrument[:SELEct] ...................................................................................................... 2-32
:INSTrument[:SELect] ...................................................................................................... 2-32
:LIC Command ....................................................................................................................... 2-33
:LIC:SET.......................................................................................................................... 2-33
:MEASure Commands.............................................................................................................. 2-34
:MEASure:ALL[:DC]? ........................................................................................................ 2-34
:MEASure:CURRent[:DC]?................................................................................................. 2-35
:MEASure:POWEr[:DC]? ................................................................................................... 2-35
:MEASure[:VOLTage][:DC]? .............................................................................................. 2-36
:MEMory Commands ............................................................................................................... 2-37
:MEMory[:STATe]:DELete.................................................................................................. 2-37
:MEMory[:STATe]:LOAD .................................................................................................... 2-38
:MEMory[:STATe]:LOCK .................................................................................................... 2-38
:MEMory[:STATe]:STORe .................................................................................................. 2-39
:MEMory[:STATe]:VALid? .................................................................................................. 2-39
:MMEMory Commands ............................................................................................................ 2-40
:MMEMory:CATalog? ......................................................................................................... 2-40
:MMEMory:CDIRectory ..................................................................................................... 2-41
:MMEMory:DELete............................................................................................................ 2-42
:MMEMory:DISK? ............................................................................................................. 2-42
:MMEMory:LOAD .............................................................................................................. 2-43
:MMEMory:MDIRectory ..................................................................................................... 2-43
:MMEMory:STORe ............................................................................................................ 2-44
:MONItor Commands .............................................................................................................. 2-45
:MONItor:CURRent:CONDition .......................................................................................... 2-46
:MONItor:CURRent[:VALue] .............................................................................................. 2-47
:MONItor:POWER:CONDition ............................................................................................ 2-47
:MONItor:POWER[:VALue] ................................................................................................ 2-48
:MONItor[:STATe] ............................................................................................................ 2-48
:MONItor:STOPway .......................................................................................................... 2-49
:MONItor:VOLTage:CONDition ........................................................................................... 2-50
:MONItor:VOLTage[:VALue] .............................................................................................. 2-51
:OUTPut Commands ............................................................................................................... 2-52
:OUTPut:CVCC? ............................................................................................................... 2-53
:OUTPut:MODE? .............................................................................................................. 2-53
:OUTPut:OCP:ALAR? ........................................................................................................ 2-54
:OUTPut:OCP:QUES? ........................................................................................................ 2-54
:OUTPut:OCP:CLEAR ........................................................................................................ 2-55
:OUTPut:OCP[:STATe] ...................................................................................................... 2-56
:OUTPut:OCP:VALue ........................................................................................................ 2-57
:OUTPut:OVP:ALAR? ........................................................................................................ 2-58
:OUTPut:OVP:QUES? ........................................................................................................ 2-58
:OUTPut:OVP:CLEAR ........................................................................................................ 2-59
:OUTPut:OVP[:STATe] ...................................................................................................... 2-60
:OUTPut:OVP:VALue ........................................................................................................ 2-61
:OUTPut:RANGe ............................................................................................................... 2-62
:OUTPut:SENSe ............................................................................................................... 2-63
:OUTPut[:STATe].............................................................................................................. 2-63
DP800 Programming Guide

V

RIGOL

Contents

:OUTPut:TIMEr................................................................................................................. 2-64
:OUTPut:TIMEr:STATe....................................................................................................... 2-65
:OUTPut:TRACk................................................................................................................ 2-66
:PRESet Commands................................................................................................................. 2-67
:PRESet[:APPLy] ............................................................................................................... 2-68
:PRESet:KEY .................................................................................................................... 2-69
:PRESet:USER[<n>]:SET:CURRent .................................................................................... 2-70
:PRESet:USER[<n>]:SET:DEFault ...................................................................................... 2-71
:PRESet:USER[<n>]:SET:OCP ........................................................................................... 2-72
:PRESet:USER[<n>]:SET:OTP ........................................................................................... 2-73
:PRESet:USER[<n>]:SET:OVP ........................................................................................... 2-74
:PRESet:USER[<n>]:SET:SURE ......................................................................................... 2-75
:PRESet:USER[<n>]:SET:TRACk ....................................................................................... 2-75
:PRESet:USER[<n>]:SET:VOLTage..................................................................................... 2-76
:RECAll Commands .................................................................................................................. 2-77
:RECAll:LOCal ................................................................................................................... 2-77
:RECAll:EXTErnal .............................................................................................................. 2-77
:RECorder Commands ............................................................................................................. 2-78
:RECorder:DESTination? ................................................................................................... 2-78
:RECorder:MEMory ........................................................................................................... 2-79
:RECorder:MMEMory......................................................................................................... 2-80
:RECorder:PERIod ............................................................................................................ 2-80
:RECorder[:STATe]............................................................................................................ 2-81
:SOURce Commands ............................................................................................................... 2-82
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude] .............................................. 2-83
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate]:STEP[:INCRement] .................................... 2-84
[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude] ................................................ 2-85
[:SOURce[<n>]]:CURRent:PROTection:CLEar ..................................................................... 2-86
[:SOURce[<n>]]:CURRent:PROTection[:LEVel] ................................................................... 2-87
[:SOURce[<n>]]:CURRent:PROTection:STATe .................................................................... 2-88
[:SOURce[<n>]]:CURRent:PROTection:TRIPped? ............................................................... 2-89
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]............................................... 2-90
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate]:STEP[:INCRement]..................................... 2-91
[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude]................................................. 2-92
[:SOURce[<n>]]:VOLTage:PROTection:CLEar ..................................................................... 2-93
[:SOURce[<n>]]:VOLTage:PROTection[:LEVel] ................................................................... 2-94
[:SOURce[<n>]]:VOLTage:PROTection:STATe ..................................................................... 2-95
[:SOURce[<n>]]:VOLTage:PROTection:TRIPped? ............................................................... 2-96
[:SOURce[<n>]]:VOLTage:RANGe ..................................................................................... 2-97
:STATus Commands ................................................................................................................. 2-98
:STATus:QUEStionable:CONDition? .................................................................................... 2-98
:STATus:QUEStionable:ENABle........................................................................................... 2-99
:STATus:QUEStionable[:EVENt]? ...................................................................................... 2-100
:STATus:QUEStionable:INSTrument:ENABle ...................................................................... 2-101
:STATus:QUEStionable:INSTrument[:EVENt]? ................................................................... 2-102
:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:COND? ............................................ 2-102
:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:ENABle ............................................ 2-103
:STATus:QUEStionable:INSTrument:ISUMmary[<n>][:EVENt]? ......................................... 2-104
:STORe Commands ............................................................................................................... 2-105
:STORe:LOCal ................................................................................................................ 2-105
:STORe:EXTErnal ............................................................................................................ 2-106
:SYSTem Commands ............................................................................................................. 2-107
:SYSTem:BEEPer:IMMediate ............................................................................................ 2-108
:SYSTem:BEEPer[:STATe] ................................................................................................ 2-108
:SYSTem:BRIGhtness ...................................................................................................... 2-108
:SYSTem:COMMunicate:GPIB:ADDRess ............................................................................ 2-109
:SYSTem:COMMunicate:LAN:APPLy .................................................................................. 2-109
:SYSTem:COMMunicate:LAN:AUTOip[:STATe] ................................................................... 2-110
VI

DP800 Programming Guide

Contents

RIGOL

:SYSTem:COMMunicate:LAN:DHCP[:STATe] ..................................................................... 2-111
:SYSTem:COMMunicate:LAN:DNS .................................................................................... 2-112
:SYSTem:COMMunicate:LAN:GATEway ............................................................................ 2-113
:SYSTem:COMMunicate:LAN:IPADdress ........................................................................... 2-114
:SYSTem:COMMunicate:LAN:MAC? .................................................................................. 2-114
:SYSTem:COMMunicate:LAN:MANualip[:STATe] ................................................................ 2-115
:SYSTem:COMMunicate:LAN:SMASK ................................................................................ 2-116
:SYSTem:COMMunicate:RS232:BAUD .............................................................................. 2-116
:SYSTem:COMMunicate:RS232:DATABit ........................................................................... 2-117
:SYSTem:COMMunicate:RS232:FLOWCrl .......................................................................... 2-117
:SYSTem:COMMunicate:RS232:PARItybit ......................................................................... 2-117
:SYSTem:COMMunicate:RS232:STOPBit ........................................................................... 2-118
:SYSTem:CONTrast ......................................................................................................... 2-118
:SYSTem:ERRor? ............................................................................................................ 2-118
:SYSTem:KLOCk ............................................................................................................. 2-119
:SYSTem:KLOCk:STATe ................................................................................................... 2-120
:SYSTem:LANGuage:TYPE............................................................................................... 2-120
:SYSTem:LOCal .............................................................................................................. 2-121
:SYSTem:LOCK .............................................................................................................. 2-121
:SYSTem:ONOFFSync ..................................................................................................... 2-122
:SYSTem:OTP ................................................................................................................ 2-122
:SYSTem:POWEron......................................................................................................... 2-123
:SYSTem:REMote ........................................................................................................... 2-123
:SYSTem:RGBBrightness ................................................................................................. 2-124
:SYSTem:RWLock ........................................................................................................... 2-124
:SYSTem:SAVer .............................................................................................................. 2-125
:SYSTem:SELF:TEST:BOARD? ......................................................................................... 2-125
:SYSTem:SELF:TEST:FAN? .............................................................................................. 2-126
:SYSTem:SELF:TEST:TEMP? ............................................................................................ 2-126
:SYSTem:TRACKMode .................................................................................................... 2-126
:SYSTem:VERSion?......................................................................................................... 2-127
:TIMEr Commands ................................................................................................................ 2-128
:TIMEr:CYCLEs .............................................................................................................. 2-129
:TIMEr:ENDState ........................................................................................................... 2-130
:TIMEr:GROUPs ............................................................................................................. 2-131
:TIMEr:PARAmeter ......................................................................................................... 2-132
:TIMEr[:STATe] .............................................................................................................. 2-133
:TIMEr:TEMPlet:CONSTruct............................................................................................. 2-133
:TIMEr:TEMPlet:FALLRate ............................................................................................... 2-134
:TIMEr:TEMPlet:INTErval ................................................................................................ 2-134
:TIMEr:TEMPlet:INVErt ................................................................................................... 2-135
:TIMEr:TEMPlet:MAXValue .............................................................................................. 2-136
:TIMEr:TEMPlet:MINValue .............................................................................................. 2-137
:TIMEr:TEMPlet:OBJect .................................................................................................. 2-138
:TIMEr:TEMPlet:PERIod .................................................................................................. 2-139
:TIMEr:TEMPlet:POINTs.................................................................................................. 2-139
:TIMEr:TEMPlet:RISERate ............................................................................................... 2-140
:TIMEr:TEMPlet:SELect................................................................................................... 2-140
:TIMEr:TEMPlet:SYMMetry .............................................................................................. 2-141
:TIMEr:TEMPlet:WIDTh .................................................................................................. 2-141
:TRIGger Commands ............................................................................................................ 2-142
:TRIGger:IN:CHTYpe ...................................................................................................... 2-143
:TRIGger:IN:CURRent .................................................................................................... 2-144
:TRIGger:IN[:ENABle] .................................................................................................... 2-145
:TRIGger:IN:IMMEdiate .................................................................................................. 2-146
:TRIGger:IN:RESPonse ................................................................................................... 2-147
:TRIGger:IN:SENSitivity .................................................................................................. 2-148
:TRIGger:IN:SOURce...................................................................................................... 2-148
DP800 Programming Guide

VII

RIGOL

Contents

:TRIGger:IN:TYPE .......................................................................................................... 2-149
:TRIGger:IN:VOLTage ..................................................................................................... 2-150
:TRIGger:OUT:CONDition ................................................................................................ 2-151
:TRIGger:OUT:DUTY ....................................................................................................... 2-152
:TRIGger:OUT[:ENABle].................................................................................................. 2-153
:TRIGger:OUT:PERIod .................................................................................................... 2-154
:TRIGger:OUT:POLArity................................................................................................... 2-155
:TRIGger:OUT:SIGNal ..................................................................................................... 2-156
:TRIGger:OUT:SOURce ................................................................................................... 2-156
:TRIGger[:SEQuence]:DELay........................................................................................... 2-157
:TRIGger[:SEQuence]:SOURce ........................................................................................ 2-158
Chapter 3 Application Examples .......................................................................................3-1
CV Output ................................................................................................................................3-2
Track Function ..........................................................................................................................3-2
Timing Output...........................................................................................................................3-3
Delay Output ............................................................................................................................3-3
To Trigger the Power Supply ......................................................................................................3-4
To Use the Recorder ..................................................................................................................3-4
To Use the Analyzer...................................................................................................................3-5
To Use the Monitor ....................................................................................................................3-5
To Use the Trigger .....................................................................................................................3-6
Trigger Input ......................................................................................................................3-6
Trigger Output....................................................................................................................3-6
Chapter 4 Programming Demos .......................................................................................4-1
Programming Preparations .........................................................................................................4-2
Excel Programming Demo ..........................................................................................................4-3
MATLAB Programming Demo .....................................................................................................4-6
LabVIEW Programming Demo ....................................................................................................4-7
Visual Basic Programming Demo .............................................................................................. 4-11
Visual C++ Programming Demo ............................................................................................... 4-13
Chapter 5 Appendix ..........................................................................................................5-1
Appendix A: Command List ........................................................................................................5-1
Appendix B: Factory Setting .......................................................................................................5-7
Appendix C: Warranty.............................................................................................................. 5-12

VIII

DP800 Programming Guide

Chapter 1 Programming Overview

RIGOL

Chapter 1 Programming Overview
This chapter introduces how to build the remote communication between the PC and instrument and
control the power supply remotely. It also provides an overview of the syntax, symbols, parameter types
and abbreviation rules of the SCPI commands and the SCPI status system.
Main topics of this chapter:


To Build Remote Communication



Remote Control Methods



SCPI Command Overview



SCPI Status Registers

DP800 Programming Guide

1-1

RIGOL

Chapter 1 Programming Overview

To Build Remote Communication
You can build the remote communication between DP800 and PC over USB, LAN, RS232 or GPIB (option,
can be extended via the USB-GPIB interface converter) interface.
Note: The end mark of the command sent through RS232 interface is "\r\n".
Operation Steps:
1 Install the Ultra Sigma common PC software
You can download Ultra Sigma from RIGOL official website (www.rigol.com) and then install it
according to the instructions.
2

Connect the instrument and PC and configure the interface parameters of the instrument
DP800 supports USB, LAN, RS232 and GPIB (extended via the USB HOST interface of the instrument)
communication interfaces, as shown in the figure below.
LAN USB DEVICE
USB HOST

RS232

Figure 1-1 DP800 Communication Interfaces
Note: For DP832A/DP831A/DP822A/DP821A/DP813A/DP811A, the instrument is installed with the
LAN and RS232 options when it leaves factory; users can build the remote communication
between the instrument and PC via the LAN or RS232 interface directly. For
DP832/DP831/DP822/DP821/DP813/DP811, the LAN interface communication and RS232
interface communication are optional functions; to use the functions, please order the
corresponding option and install the option correctly (:LIC:SET).
(1) Use the USB interface: connect the USB DEVICE interface on the rear panel of DP800 and the USB
HOST interface of the PC using USB cable.
(2) Use the LAN interface:
 Make sure that your PC is connected to the local network.
 Check whether your local network supports DHCP or auto IP mode. If not, you need to
acquire the network interface parameters available, including the IP address, subnet mask,
gateway and DNS.
 Connect DP800 to the local network using network cable.
 Press Utility  I/O Config  LAN to configure the IP address, subnet mask, gateway and
DNS of the instrument.
1-2

DP800 Programming Guide

Chapter 1 Programming Overview

RIGOL

(3) Use the RS232 interface:
 Connect the RS232 interface with the PC or data terminal equipment (DTE) using RS232
cable.
 Press Utility  I/O Config  RS232 to set interface parameters (such as the baud rate
and parity) that match the PC or terminal equipment.
(4) Use the GPIB interface:
 Use the USB-GPIB interface converter to extend a GPIB interface via the USB HOST interface
on the rear panel of DP800.
 Connect the instrument with your PC using a GPIB cable.
 Press Utility  I/O Config  GPIB to set the GPIB address of the instrument.
3

Check whether the connection is successful
Run the Ultra Sigma, search for resource, right-click the resource name and select "SCPI Panel
Control" in the pop-up menu. Enter the correct command in the pop-up SCPI control panel and click
"Send Command" and then "Read Response" or click "Send & Read" directly to check whether the
connection is successful.

Remote Control Methods
1

User-defined Programming
You can program and control the instrument using the SCPI (Standard Commands for Programmable
Instruments) commands listed in chapter 2 "Command System" in various development
environments (such as Visual C++, Visual Basic and LabVIEW). For details, refer to the introductions in
chapter 4 "Programming Demos".

2

Send SCPI Commands via the PC Software
It is recommended that you control the power supply remotely by sending SCPI commands via the PC
software Ultra Sigma provided by RIGOL.

SCPI Command Overview
SCPI (Standard Commands for Programmable Instruments) is a standardized instrument programming
language that is built upon the standard IEEE 488.1 and IEEE 488.2 and conforms to various standards
(such as the floating point operation rules in IEEE754 standard, ISO646 7-bit coded character for
information interchange (equivalent to ASCII programming)). This section introduces the syntax, symbols,
parameters and abbreviation rules of the SCPI commands.

Syntax
SCPI commands present a hierarchical tree structure and contain multiple subsystems, each subsystem
consists of a root keyword and one or more sub-keywords. The command string usually starts with ":"; the
keywords are separated by ":" and are followed by the parameter settings available. The command
keywords and the first parameter are separated by a space. "?" is added at the end of the command string
to indicate query.
For example,
:SYSTem:COMMunicate:LAN:IPADdress <ip>
:SYSTem:COMMunicate:LAN:IPADdress?
SYSTem is the root keyword of the command. COMMunicate, LAN and IPADdress are the second-level,
third-level and forth-level keywords respectively. The command string starts with ":" which is also used to
separate the multiple-level keywords. <ip> represents the parameters available for setting. The command
DP800 Programming Guide

1-3

RIGOL

Chapter 1 Programming Overview

keywords :SYSTem:COMMunicate:LAN:IPADdress and parameter <ip> are separated by a space. "?"
represents query.
"," is generally used for separating multiple parameters contained in the same command, for example,
:DELAY:PARAmeter <secnum>,{ON|OFF},<time>

Symbol Description
The following four symbols are not the content of SCPI commands and will not be sent with the commands.
They are usually used to describe the parameters in the commands.
1

Braces { }
Usually, multiple optional parameters are enclosed in the braces and one of the parameters must be
selected when sending the command. For example, :DISPlay:MODE {NORMal|WAVE|DIAL}.

2

Vertical Bar |
The vertical bar is used to separate multiple parameters and one of the parameters must be selected
when sending the command. For example, :DISPlay:MODE {NORMal|WAVE|DIAL}.

3

Square Brackets [ ]
The content (command keyword) enclosed in the square brackets can be omitted. When the
parameter is omitted, the instrument will set the parameter to its default. For example, for
the :MEASure[:VOLTage][:DC]? command, sending any of the four commands below can achieve the
same effect.
:MEASure?
:MEASure:DC?
:MEASure:VOLTage?
:MEASure:VOLTage:DC?

4

Triangle Brackets < >
The parameter enclosed in the triangle brackets must be replaced by an effective value. For example,
send the :ANALyzer:CURRTime <value> command in :ANALyzer:CURRTime 5 form.

Parameter Type
The parameters of the commands introduced in this manual contains 5 types: bool, integer, real number,
discrete and ASCII string.
1

Bool
The parameter could be "ON" (1) or "OFF" (0). For example, :RECorder[:STATe] {ON|OFF}.

2

Integer
Unless otherwise noted, the parameter can be any integer within the effective value range. Note that
do not set the parameter to a decimal; otherwise, errors will occur. For example, in
the :SYSTem:BRIGhtness <brightness> command, <brightness> can be any integer from 0 to 100.

3

Real Number
Unless otherwise noted, the parameter can be any real number within the effective value range.
For example, for CH1 of DP831A, the ranges of <volt> and <curr> in the :APPLy CH1,<volt>,<curr>
command are 0.000V to 8.400V and 0.0000A to 5.3000A respectively.

4

Discrete
The parameter could only be one of the specified values or characters. For example, in
the :ANALyzer:OBJect {V|C|P} command, the parameter can be V, C or P.
ASCII String

5
1-4

DP800 Programming Guide

Chapter 1 Programming Overview

RIGOL

The parameter should be the combinations of ASCII characters. For example, in the :MMEMory:STORe
<file_name> command, <file_name> is the filename of the file to be saved and can include Chinese
characters, English characters and numbers.
Besides, many commands contain the MINimum and MAXimum parameters which are used to set the
parameter to its minimum or maximum value. For example, MINimum and MAXimum in
the :SYSTem:BRIGhtness {<brightness>|MINimum|MAXimum} command are used to set the brightness to
the minimum or maximum.

Command Abbreviation
All the commands are case-insensitive and you can use any of them. If abbreviation is used, all the capital
letters in the command must be written completely. For example, the :ANALyzer:ANALyze command can be
abbreviated to :ANAL:ANAL.

SCPI Status Registers
All the SCPI instruments execute the status register operations in the same way. The status system records
the various instrument states into three register sets: status byte register, standard event register and
questionable status register sets. The status byte register records the advanced summary information
reported by other register sets. The SCPI status systems of the DP800 series multi-channel models (take
DP831A as an example) and single-channel model (take DP811A as an example) are as shown in Figure 1-2
and Figure 1-3 respectively.

Event Register
The event register is read-only and is used to report some states of the power supply defined internally. All
the bits in the event register are latched and once an event bit is set, the later state (state of the event
represented by this bit) changes will all be ignored. The event register bits will be cleared automatically
when you send command to query the event register (such as the *ESR? or :STATus:QUEStionable[:EVENt]?
command) or send the *CLS command to clear the register, but the reset command (*RST) will not clear
the bits in the event register. When querying the event register, the query returns a decimal value
corresponding to the sum of the binary weights of all the bits in the register.

Enable Register
The enable register is both readable and writable. It is used to define which status information will be
reported to the next-level. The bits in the enable register will not be cleared when you send command to
query the enable register or send the *CLS command to clear the register state (but the *CLS command
can clear the bits in the event register). To enable the bits in the enable register, you need to write into the
register a decimal value corresponding to the sum of the binary weights of the bits to be enabled in the
register.

Multi-logic Output
This part is only applicable to multi-channel models. Take DP831A as an example. The 3-logic output of the
power supply includes a channel questionable status register and three independent channel questionable
status SUMMARY registers (corresponding to the logic outputs of the three channels respectively). The
channel questionable status SUMMARY registers report the status of each channel to the channel
questionable status register which then reports the channel status to the bit13 (ISUM bit) of the
questionable status register.
DP800 Programming Guide

1-5

RIGOL

Chapter 1 Programming Overview

CH1 Questionable Status SUMMARY Register
STATus:QUEStionable:INSTrument:ISUMmary1
Event Register

Enable Register

VOLTage

0

CURRent

1

Overvoltage Protection

OVP

2

Overcurrent Protection

OCP

3

Not used

4

Not used

5

Not used

6

Not used

7

Not used

8

Not used

9

Not used

10

Not used

11

Not used

12

Not used

13

Not used

14

Not used

15

“OR”

CH2 Questionable Status SUMMARY Register
STATus:QUEStionable:INSTrument:ISUMmary2
Event Register

Enable Register

VOLTage

0

CURRent

1

Overvoltage Protection

OVP

2

Overcurrent Protection

OCP

3

Not used

4

Not used

5

Not used

6

Not used

7

Not used

8

Not used

9

Not used

10

Not used

11

Not used

12

Not used

13

Not used

14

Not used

15

Channel Questionable Status Register
STATus:QUEStionable:INSTrument
Event Register
Not used

“OR”

INST1 event summary 1
INST2 event summary 2
INST3 event summary 3

CH3 Questionable Status SUMMARY Register
STATus:QUEStionable:INSTrument:ISUMmary3
Event Register

Enable Register

0

Enable Register

VOLTage

0

CURRent

1

Overvoltage Protection

OVP

2

Overcurrent Protection

OCP

3

Not used

4

Not used

5

Not used

6

Not used

7

Not used

8

Not used

9

Not used

10

Not used

11

Not used

12

Not used

13

Not used

14

Not used

15

Not Used

4

Not used

5

Not used

6

Not used

7

Not used

8

Not used

9

Not used

10

Not used

11

Not used

12

Not used

13

Not used

14

Not used

15

“OR”

To STATus:QUEStionable，bit13

“OR”

(a)

1-6

DP800 Programming Guide

RIGOL

Chapter 1 Programming Overview

Questionable Status
Event Register

Enable Register

Not used

0

Not used

1

Not used

2

Not used

3

TEMPerature

4

Not used

5

Not used

6

Not used

7

Not used

8

Not used

9

Not Used

10

FAN

11

Not used

12

Output Buffer

“OR”

Status Byte
Summary Register

INSTrument summary 13
Not used

14

Not used

15

STAT:QUES?

STAT:QUES:ENAB <value>
STAT:QUES:ENAB?

Standard Event
Event Register
Operation Complete

0

Not used

1

Query Error

QYE

2

Device Dependent Error

DDE

3

Execution Error

EXE

4

Command Error

CME

5

Not used

6

PON

7

Power On

*ESR?

0

Not used

1

Not used

2

QUES

3

MAV

4

ESB

5

RQS

6

Not used

7

*STB?

Enable Register

OPC

“OR”

*ESE <value>
*ESE?

Enable Register

Not used

“OR”

*SRE <value>
*SRE?

20=1
Binary Weight 21=2
22=4
23=8
24=16
25=32
26=64
27=128
28=256
29=512
210=1024
211=2048
212=4096
213=8192
214=16384
215=32768

(b)
Figure 1-2 The SCPI Status System of DP800 Series Multi-channel Models (Take DP831A as an Example)

DP800 Programming Guide

1-7

RIGOL

Chapter 1 Programming Overview
Event Register

Enable Register

VOLTage

0

CURRent

1

Not used

2

Not used

3

TEMPerature

4

Not used

5

Not used

6

Not used

7

Not used

8

Overvoltage Protection

OVP

9

Overcurrent Protection

OCP

10

FAN

11

Not used

12

Not used

13

Not used

14

Not used

15

STAT:QUES?

Output Buffer

“OR”

Status Byte
Summary Register

STAT:QUES:ENAB <value>
STAT:QUES:ENAB?

Standard Event
Event Register
Operation Complete

OPC

0

Not used

1

Query Error

QYE

2

Device Dependent Error

DDE

3

Execution Error

EXE

4

Command Error

CME

5

Not used

6

PON

7

Power On

*ESR?

“OR”

*ESE <value>
*ESE?

0

Not used

1

Not used

2

QUES

3

MAV

4

ESB

5

RQS

6

Not used

7

*STB?

Enable Register

Enable Register

Not used

“OR”

*SRE <value>
*SRE?

20=1
Binary Weight 21=2
22=4
23=8
24=16
25=32
26=64
27=128
28=256
29=512
210=1024
211=2048
212=4096
213=8192
214=16384
215=32768

Figure 1-3 The SCPI Status System of DP800 Series Single-channel Model (Take DP811A as an Example)

1-8

DP800 Programming Guide

RIGOL

Chapter 1 Programming Overview

Questionable Status Register
Questionable Status Register of Multi-channel Models
The SCPI status system of the multi-channel models is as shown in Figure 1-2. Wherein, the channel
questionable status register indicates in which channel questionable event occurs. While for each specific
logic output, the channel questionable status SUMMARY register is a pseudo-questionable status register.
The questionable status register provides information about the questionable status of the power supply.
Bit4 (TEMPerature) reports the over-temperature state; bit11 (FAN) reports the fan failure state and bit13
(INSTrument summary) summaries the questionable output state of any of the three output channels.
You can send the :STATus:QUEStionable[:EVENt]? command to read the register. To use bit13, you must
first enable the register the information of which you want to summarize using bit13. Send
the :STATus:QUEStionable:INSTrument:ENABle command to enable the channel questionable status
register; then send the :STATus:QUEStionable:INSTrument:ISUMmary[<n>]:ENABle command to enable
the corresponding channel questionable status SUMMARY register. The definitions of the bits in the
questionable status register of the multi-channel models and the decimal values corresponding to their
binary weights are as shown in Table 1-1.
Table 1-1 Definitions of the bits in the questionable status register of the multi-channel models and the
decimal values corresponding to their binary weights
Bit

Decimal Value

Definition

0-3

Not used

0

Always be 0.

4

TEMPerature

16

Over-temperature.

5-10

Not used

0

Always be 0.

11

FAN

2048

Fan failure.

12

Not used

0

Always be 0.

13

INSTrument summary

8192

Summary information of the channel
questionable status register and channel
questionable status SUMMARY register set.

14-15

Not used

0

Always be 0.

Channel Questionable Status Register
The channel questionable status register provides the questionable status information of all the three
channels. Bit1 (INST1 event summary), bit2 (INST2 event summary) and bit3 (INST3 event summary)
report the information about the questionable states of CH1, CH2 and CH3 respectively. You can send
the :STATus:QUEStionable:INSTrument[:EVENt]? command to read the register. To use the channel
questionable status register, you must enable the channel questionable status SUMMARY register.
You can send the :STATus:QUEStionable:INSTrument:ISUMmary[<n>]:ENABle command to enable the
corresponding channel questionable status SUMMARY register. The definitions of the bits in the channel
questionable status register and the decimal values corresponding to their binary weights are as shown in
Table 1-2.

DP800 Programming Guide

1-9

RIGOL

Chapter 1 Programming Overview

Table 1-2 Definitions of the bits in the channel questionable status register of the multi-channel model and
the decimal values corresponding to their binary weights
Bit

Decimal Value

Definition

0

Not used

0

Always be 0.

1

INST1 event summary

2

Summary information of CH1 events.

2

INST2 event summary

4

Summary information of CH2 events.

3

INST3 event summary

8

Summary information of CH3 events.

4-15

Not used

0

Always be 0.

Channel Questionable Status SUMMARY Register
DP831A provides 3 channel questionable status SUMMARY registers corresponding to the three channels
respectively. The channel questionable status SUMMARY register provides the channel voltage control,
current control, overvoltage and overcurrent information. When the voltage becomes unregulated, bit0
(VOLTage) is set; when the current becomes unregulated, bit1 (CURRent) is set. You can send
the :STATus:QUEStionable:INSTrument:ISUMmary[<n>][:EVENt]? command to read the channel
questionable status SUMMARY register of the corresponding channel. The definitions of the bits in the
channel questionable status SUMMARY register and the decimal values of their binary weights are as shown
in Table 1-3.
Table 1-3 Definitions of the bits in the channel questionable status SUMMARY register of the multi-channel
model and the decimal values corresponding to their binary weights
Bit

Decimal Value

Definition
The power supply is working in constant
current mode and the voltage becomes
unregulated.
The power supply is working in constant
voltage mode and the current becomes
unregulated.

0

VOLTage

1

1

CURRent

2

2

OVP

4

Overvoltage.

3

OCP

8

Overcurrent.

4-15

Not used

0

Always be 0.

You can send the :STATus:QUEStionable:INSTrument:ISUMmary[<n>]:COND? command to query the
current working mode (CV or CC mode) of the corresponding channel. When bit0 is true, the corresponding
channel is working in CC mode; when bit1 is true, the corresponding channel is working in CV mode; when
bit0 and bit1 are both true, both the output voltage and current of the corresponding channel becomes
unregulated; when bit0 and bit1 are both false, the power supply output is turned off.

1-10

DP800 Programming Guide

RIGOL

Chapter 1 Programming Overview

Questionable Status Register of Single-channel Model
The SCPI status system of the single-channel model is as shown in Figure 1-3. Wherein, the questionable
status register provides voltage control, current control, over-temperature, overvoltage, overcurrent and
fan failure information. You can send the :STATus:QUEStionable[:EVENt]? command to read the register.
The definitions of the bits in the questionable status register of the single-channel model and the decimal
values corresponding to their binary weights are as shown in Table 1-4.
Table 1-4 Definitions of the bits in the questionable status register of the single-channel model and the
decimal values corresponding to their binary weights
Bit

Decimal Value

Definition
The power supply is working in constant current
mode and the voltage becomes unregulated.
The power supply is working in constant voltage
mode and the current becomes unregulated.

0

VOLTage

1

1

CURRent

2

2-3

Not used

0

Always be 0.

4

TEMPerature

16

Over-temperature.

5-8

Not used

0

Always be 0.

9

OVP

512

Overvoltage.

10

OCP

1024

Overcurrent.

11

FAN

2048

Fan failure.

12-15

Not used

0

Always be 0.

DP800 Programming Guide

1-11

RIGOL

Chapter 1 Programming Overview

Standard Event Register
The standard event register reports the following instrument events: power-on detection command syntax
error, command execution error, self-test or calibration error, query error or operation complete. All these
events or anyone of these events can be reported by the enable register to the bit5 (ESB, Event Summary
Bit) of the status byte register. To set the enable register mask, you need to use the *ESE command to write
a decimal value into the register. The definitions of the bits in the standard event register and the
corresponding decimal values of their binary weights are as shown in Table 1-5.
Note: An error status (bit2, 3, 4 or 5 in the standard event register) records one or more errors in the
power supply error queue and you can send the :SYSTem:ERRor? command to read the error queue.
Table 1-5 Definitions of the bits in the standard event register and the corresponding decimal values of their
binary weights
Bit

Decimal Value

Definition

0

OPC

1

Operation complete. All the previous commands
including the *OPC command are executed.

1

Not used

0

Always be 0.

2

QYE

4

Query error. The power supply tries to read the output
buffer but it is empty; or the system receives a new
command before the previous query command is read;
or both the input and output buffers are full.

3

DDE

8

Device error. Self-test or calibration error occurs.

4

EXE

16

Execution error (include trigger ignore, initialization
ignore, setting conflict, data overrange, data too long
and invalid parameter value).

5

CME

32

Command error. Command syntax error occurs.

6

Not used

0

Always be 0.

7

PON

128

Power-on inspection. Turn off the power supply after
the event register is read or cleared and then turn on
the power supply.

1-12

DP800 Programming Guide

RIGOL

Chapter 1 Programming Overview

Status Byte Register
The status byte register reports the status information of the other status registers. The bit4 (MAV, Message
Available Bit) in the status byte register will report immediately when querying the data waiting to be
queried in the output buffer of the power supply. The bits in the SUMMARY register of the status byte
register are not latched. The corresponding bit in the SUMMARY register of the status byte register will be
cleared when the event register is cleared. The bit4 (MAV, Message Available Bit) will be cleared when
reading all the information including any pending queries in the output buffer. The definitions of the bits in
the status byte register and the corresponding decimal values of their binary weights are as shown in Table
1-6.
Table 1-6 Definitions of the bits in the status byte register and the corresponding decimal values of their
binary weights
Bit

Decimal Value

Definition
Always be 0.

0-2

Not used

0

3

QUES

8

4

MAV

16

5

ESB

32

6

RQS

64

The power supply is requesting for service.

7

Not used

0

Always be 0.

DP800 Programming Guide

One or more bits in the questionable status register are
set (the bits in the enable register must be enabled)
The data in the output buffer of the power supply is
available.
One or more bits in the standard event register are set
(the bits in the enable register must be enabled)

1-13

RIGOL

Chapter 2 Command System

Chapter 2 Command System
This chapter introduces the syntax, function, parameter and using instruction of each DP800 command in
A-Z order.
Main topics of this chapter:


:ANALyzer Commands



:APPLy Command



:DELAY Commands



:DISPlay Commands



IEEE488.2 Common Commands



:INITiate Command



:INSTrument Commands



:LIC Command



:MEASure Commands



:MEMory Commands



:MMEMory Commands



:MONItor Commands



:OUTPut Commands



:PRESet Commands



:RECAll Commands



:RECorder Commands



:SOURce Commands



:STATus Commands



:STORe Commands



:SYSTem Commands



:TIMEr Commands



:TRIGger Commands

Explanation: In this command system, setting commands relating to the time, voltage, current and power
parameters can be sent with units. Unless otherwise noted, the units available and the default unit of each
parameter are as shown in the table below.
Parameter Type
Time
Voltage
Current
Power

Units Available
s[1]
V, mV
A, mA
W, mW

Default Unit
s
V
A
W

Note[1]: For the :TRIGger:OUT:PERIod [D0|D1|D2|D3,]<value> command (setting the period of the square waveform
of trigger output), <value> is a time parameter and the units available are s, ms and us. The default unit is s.

DP800 Programming Guide

2-1

RIGOL

Chapter 2 Command System

:ANALyzer Commands
The :ANALyzer commands are used to set the analyzer parameters, execute analysis and query the analysis
results.
For DP832A/DP831A/DP822A/DP821A/DP813A/DP811A, the instrument is installed with the analyzer
option when it leaves factory and users can directly use the analyzer function. For
DP832/DP831/DP822/DP821/DP813/DP811, the analyzer is an optional function; to use this function,
please order the corresponding option and install the option correctly (:LIC:SET).
Command List[1]:


:ANALyzer:ANALyze



:ANALyzer:CURRTime



:ANALyzer:ENDTime



:ANALyzer:FILE?



:ANALyzer:MEMory



:ANALyzer:MMEMory



:ANALyzer:OBJect



:ANALyzer:RESult?



:ANALyzer:STARTTime



:ANALyzer:VALue?

:ANALyzer:ANALyze
Syntax

:ANALyzer:ANALyze

Description

When receiving this command, the instrument executes the analysis operation
according to the current setting.

Explanation



The analysis operation can only be executed when valid record file is opened
(:ANALyzer:FILE?).



You can send the :ANALyzer:RESult? command to view the analysis results.

Related
Commands

:ANALyzer:FILE?
:ANALyzer:RESult?

Note[1]: In the "Command List" in this manual, the parameters in the setting commands and the query commands are
not included and you can view the complete introductions of the commands in the text according to the keywords.

2-2

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:ANALyzer:CURRTime
Syntax

:ANALyzer:CURRTime <value>
:ANALyzer:CURRTime?

Description

Set the current time of the analyzer.
Query the current time of the analyzer.

Parameter

Explanation
Return Format
Example

Related
Commands

Name

Type

Range

Default

<value>

Integer

Start time to end time of
the record file opened

Start time

You can only set the current time when valid record file is opened (:ANALyzer:FILE?).
The query returns an integer, for example, 12.
:ANAL:CURRT 12

/*Set the current time of the analyzer to 12s*/

:ANAL:CURRT?

/*Query the current time of the analyzer and the query returns
12*/

:ANALyzer:FILE?
:ANALyzer:STARTTime
:ANALyzer:ENDTime

DP800 Programming Guide

2-3

RIGOL

Chapter 2 Command System

:ANALyzer:ENDTime
Syntax

:ANALyzer:ENDTime {<value>|MINimum|MAXimum}
:ANALyzer:ENDTime? [MINimum|MAXimum]

Description

Set the end time of the analyzer.
Query the end time of the analyzer.

Parameter
Explanation

Return Format
Example
Related
Commands

Name

Type

<value>

Integer

Range

Default

Refer to the "Explanation"



You can only set the end time when valid record file is opened (refer to
the :ANALyzer:FILE? command).



When the groups of the record file opened is less than or equal to 2048, the
range of the end time is from the start time to the maximum record time
(groups times record period) of the record file opened and the default is the
maximum record time of the record file opened.



When the groups of the record file opened is greater than 2048, the range of
the end time is from the start time to the product of the record period of the
record file opened times 2048 and the default is the product of the record
period of the record file opened times 2048.



When receiving the :ANALyzer:ANALyze command, the analyzer will analyze
the recorded data between the start time and end time.

The query returns an integer, for example, 125.
:ANAL:ENDT 125

/*Set the end time of the analyzer to 125s*/

:ANAL:ENDT?

/*Query the current end time and the query returns 125*/

:ANALyzer:ANALyze
:ANALyzer:FILE?
:ANALyzer:STARTTime

:ANALyzer:FILE?
Syntax
Description
Return Format

2-4

:ANALyzer:FILE?
Query the record file currently opened.
When valid record file is currently opened, the query returns the directory of the file
currently opened, for example, C:\REC 10:test.ROF; when no valid record file is
currently opened, the query returns NULL.

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:ANALyzer:MEMory
Syntax
Description

:ANALyzer:MEMory {1|2|3|4|5|6|7|8|9|10}
Open the specified record file in the internal memory (C disk).

Parameter

Explanation

Name

Type

Range

Default

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None



This command is only available when valid record file is stored in the specified
location.



Parameters 1 to 10 represent the record files stored in the corresponding
locations of the internal memory respectively.



You can only set the start time, end time, current time and analysis object as
well as execute the analysis operation when valid record file is currently
opened (:ANALyzer:FILE?).

Example

:ANAL:MEMory 10

Related

:ANALyzer:FILE?

Commands

/*Open the record file currently stored in record file storage
location 10 in C disk*/

:ANALyzer:STARTTime
:ANALyzer:ENDTime
:ANALyzer:CURRTime
:ANALyzer:ANALyze

:ANALyzer:MMEMory
Syntax
Description

:ANALyzer:MMEMory <dest>
Open the record file in the specified directory in the external memory (D disk).

Parameter

Explanation

Name

Type

Range

Default

<dest>

ASCII string

Valid directory under D
disk

None



This command is only available when external memory is detected and valid
record file is stored in the specified directory of the external memory.



You can only set the start time, end time, current time and analysis object as
well as execute the analysis operation when valid record file is currently
opened (:ANALyzer:FILE?).

Example

:ANAL:MMEMory D:\RECORD.ROF

Related

:ANALyzer:FILE?

Commands

/*Open the RECORD.ROF file under D disk*/

:ANALyzer:STARTTime
:ANALyzer:ENDTime
:ANALyzer:CURRTime
:ANALyzer:ANALyze

DP800 Programming Guide

2-5

RIGOL

Chapter 2 Command System

:ANALyzer:OBJect
Syntax

:ANALyzer:OBJect {V|C|P}
:ANALyzer:OBJect?

Description

Set the analysis object of the analyzer to voltage, current or power.
Query the analysis object of the analyzer.

Parameter
Explanation
Return Format
Example

Related
Command

Name

Type

Range

Default

{V|C|P}

Discrete

V|C|P

V

You can only set the analysis object when valid record file is opened (refer to
the :ANALyzer:FILE? command).
The query returns V, C or P.
:ANAL:OBJ V

/*Set the analysis object of the analyzer to voltage*/

:ANAL:OBJ?

/*Query the analysis object of the analyzer and the query
returns V*/

:ANALyzer:FILE?

:ANALyzer:RESult?
Syntax

:ANALyzer:RESult?

Description

Query the analysis results, including the number of groups, median, mode, average,
variance, range, minimum, maximum and mean deviation.

Return Format

The query returns the analysis results with the data separated by commas, for
example,
Group:85,Median:41.9994V,Mode:0.0000V,Average:34.0924V,Variance:269.5170V,
Range:42.0002V,Min:0.0000V,Max:42.0002V,Mean:12.8347V.

Example

Related
Command

2-6

:ANAL:RES?

/*Query the analysis results and the query returns
Group:85,Median:41.9994V,Mode:0.0000V,Average:34.0924V,Va
riance:269.5170V,Range:42.0002V,Min:0.0000V,Max:42.0002V,M
ean:12.8347V*/

:ANALyzer:ANALyze

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:ANALyzer:STARTTime
Syntax

:ANALyzer:STARTTime {<value>|MINimum|MAXimum}
:ANALyzer:STARTTime? [MINimum|MAXimum]

Description

Set the start time of the analyzer.
Query the start time of the analyzer.

Parameter

Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

<value>

Integer

Record period of the record
file opened to end time

Record period of the
record file opened



You can only set the start time when valid record file is opened (refer to
the :ANALyzer:FILE? command).



Send the :ANALyzer:ANALyze command and the analyzer analyzes the
recorded data between the start time and end time.

The query returns an integer, for example, 1.
:ANAL:STARTT 1

/*Set the start time to 1s*/

:ANAL:STARTT?

/*Query the current start time and the query returns 1*/

:ANALyzer:ANALyze
:ANALyzer:FILE?
:ANALyzer:ENDTime

:ANALyzer:VALue?
Syntax
Description

:ANALyzer:VALue? <time>
Query the voltage, current and power at the specified time in the record file
opened.

Parameter

Explanation
Return Format
Example

Related
Commands

Name

Type

Range

Default

<time>

Integer

Start time of the record file
opened to end time

None

This command is only valid when valid record file is opened (refer to
the :ANALyzer:FILE? command).
The query returns the voltage, current and power separated by commas, for
example, Volt:1.2817V,Curr:0.0485A,Power:0.0622W.
:ANAL:VAL? 5 /*Query the voltage, current and power at 5s of the record file
opened and the query returns
Volt:1.2817V,Curr:0.0485A,Power:0.0622W*/
:ANALyzer:ENDTime
:ANALyzer:FILE?
:ANALyzer:STARTTime

DP800 Programming Guide

2-7

RIGOL

Chapter 2 Command System

:APPLy Command
The :APPLy command provides the most straightforward method to program the power supply over the
remote interface. For the multi-channel models, you can select the specified channel and set the voltage
and current in a single command; for the single-channel model, you can set the voltage and current in a
single command. When the setting values are within the parameter ranges of the corresponding channel
(multi-channel models) or range (single-channel model) of the specified model, the output voltage and
current will change to the setting values immediately after executing this command. The voltage/current
ranges and default values of each channel (multi-channel models) or range (single-channel model) of
different models are as shown in the table below.
Table 2-1 Voltage/current ranges and default values of each channel (range) of different models of DP800
series
Voltage/Current
Voltage/Current
Channel (Range)
Settable Range
Default Value
DP832A

CH1 (30V/3A)
CH2 (30V/3A)
CH3 (5V/3A)

0V to 32V/0A to 3.2A
0V to 32V/0A to 3.2A
0V to -5.3V/0A to 3.2A

00.000V/3.000A
00.000V/3.000A
0.000V/3.000A

DP831A

CH1 (8V/5A)
CH2 (30V/2A)
CH3 (-30V/2A)

0V to 8.4V/0A to 5.3A
0V to 32V/0A to 2.1A
0V to -32V/0A to 2.1A

0.000V/5.0000A
00.000V/2.0000A
00.000V/2.0000A

DP822A

CH1 (20V/5A)
CH2 (5V/16A)

0V to 21V/0A to 5.3A
0V to 5.3V/0A to 16.4A

00.000V/5.000A
0.000V/16.000A

DP821A

CH1 (60V/1A)
CH2 (8V/10A)

0V to 63V/0A to 1.05A
0V to 8.4V/0A to 10.5A

00.000V/1.0000A
0.000V/10.000A

DP813A

Range1 (8V/20A)
Range2 (20V/10A)

0V to 8.4V/0A to 21A
0V to 21V/0A to 10.5A

0.000V/20.000A

DP811A

Range1 (20V/10A)
Range2 (40V/5A)

0V to 21V/0A to 10.5A
0V to 42V/0A to 5.3A

00.000V/05.0000A

DP832[1]

CH1 (30V/3A)
CH2 (30V/3A)
CH3 (5V/3A)

0V to 32V/0A to 3.2A
0V to 32V/0A to 3.2A
0V to -5.3V/0A to 3.2A

00.00V/3.000A
00.00V/3.000A
0.00V/3.000A

DP831[1]

CH1 (8V/5A)
CH2 (30V/2A)
CH3 (-30V/2A)

0V to 8.4V/0A to 5.3A
0V to 32V/0A to 2.1A
0V to -32V/0A to 2.1A

0.000V/5.000A
00.00V/2.000A
00.00V/2.000A

DP822[1]

CH1 (20V/5A)
CH2 (5V/16A)

0V to 21V/0A to 5.3A
0V to 5.3V/0A to 16.4A

00.00V/5.00A
0.00V/16.00A

DP821[1]

CH1 (60V/1A)
CH2 (8V/10A)

0V to 63V/0A to 1.05A
0V to 8.4V/0A to 10.5A

00.00V/1.000A
0.00V/10.00A

DP813[1]

Range1 (8V/20A)
Range2 (20V/10A)

0V to 8.4V/0A to 21A
0V to 21V/0A to 10.5A

00.00V/20.00A

DP811[1]

Range1 (20V/10A)
Range2 (40V/5A)

0V to 21V/0A to 10.5A
0V to 42V/0A to 5.3A

00.00V/05.00A

Note[1]: When DP832 (DP831, DP822, DP821, DP813, or DP811) is installed with the high resolution option, its
voltage/current settable range and default value of each channel are the same with those of DP832A (DP831A , DP822A,
DP821A, DP813A, or DP811A).

2-8

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:APPLy
Syntax

:APPLy {CH1|CH2|CH3}
[,<volt>|MINimum|MAXimum|DEF[,<curr>|MINimum|MAXimum|DEF]]
:APPLy [<volt>|MINimum|MAXimum|DEF[,<curr>|MINimum|MAXimum|DEF]]
:APPLy? [CH1|CH2|CH3[,CURRent|VOLTage]]

Description

Select the specified channel as the current channel and set the voltage/current of
this channel.
Set the voltage/current of the current channel.
Query the voltage/current of the specified channel.

Parameter

Explanation

Return Format

Name

Type

Range

Default

{CH1|CH2|CH3}[1]

Discrete

CH1|CH2|CH3

None

<volt>

Real

Refer to Table 2-1

<curr>

Real

Refer to Table 2-1

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None

[CURRent|VOLTage]

Discrete

CURRent|VOLTage

None



For the multi-channel models, this command is used to select the specified
channel and set the voltage and current; for the single-channel model, this
command is used to set the voltage and current of the channel. This command
combines the channel select command
(:INSTrument:NSELect, :INSTrument[:SELEct] or :INSTrument[:SELect], only
applicable to the multi-channel models), voltage setting command
([:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]) and current
setting command
([:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude]) functions.



In the query command, the parameter [CH1|CH2|CH3] is used to select the
channel to be query. If it is ignored, the current channel will be query.



<volt> and <curr> are used to set the voltage and current of the specified
channel respectively. If only one parameter is specified, the value is the voltage
setting value by default; if both of them are omitted, the command will select
the desired channel. The voltage/current ranges of each channel (range) of
different models are as shown in Table 2-1.



You can use MINimum, MAXimum or DEF which denote setting the voltage or
current of the specified channel (range) to the minimum, maximum or default
instead of the specified voltage (<volt>) or current value (<curr>). The
voltage/current ranges of each channel (range) of different models are as
shown in Table 2-1.



[CURRent|VOLTage] is used to select to query the voltage or current of the
specified channel. If they are both omitted, the system will query both the
voltage and current of the specified channel.



In the query command, you can omit both of the parameters or only omit
[CURRent|VOLTage]; but you cannot only omit [CH1|CH2|CH3].

The query returns a string.


The query returns the voltage or current setting value of the specified channel
when [CH1|CH2|CH3] and [CURRent|VOLTage] are specified, for example,
5.000.



The query returns the channel (range) name, rated voltage/current value,
voltage setting value and current setting value of the specified channel

DP800 Programming Guide

2-9

RIGOL

Chapter 2 Command System

(multi-channel models) or current range (single-channel model) when only
[CH1|CH2|CH3] is specified, for example, CH1:8V/5A,5.000,1.0000.


Example

Related
Commands

The query returns the voltage setting value and current setting value of the
current channel (multi-channel models) or current range (single-channel
model) when all the parameters are omitted, for example, 5.000,1.0000.

:APPL CH1,5,1

/*Set the voltage and current of CH1 to 5V and 1A respectively*/

:APPL? CH1

/*Query the voltage and current setting values of CH1 and the
query returns CH1:8V/5A,5.000,1.0000*/

:INSTrument:NSELect
:INSTrument[:SELEct]
:INSTrument[:SELect]
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude]

Note[1]: In this command system, commands that can use channel names (such as CH1 and CH2) as parameters can

also use channel ranges (such as P8V and P30V) as parameters unless otherwise noted. The corresponding relations of
the channel name parameters and channel range parameters supported by DP800 series are as follows.
DP831A/DP831: CH1---P8V; CH2---P30V; CH3---N30V
DP832A/DP832: CH1---P30V; CH2---P30V2; CH3---P5V
DP822A/DP822: CH1---P20V; CH2---P5V
DP821A/DP821: CH1---P60V; CH2---P8V

2-10

DP800 Programming Guide

Chapter 2 Command System

RIGOL

:DELAY Commands
The :DELAY commands are used to set the delayer parameters (such as the number of groups, number of
cycles and end state) as well as enable or disable the delayer.
Command List:


:DELAY:CYCLEs



:DELAY:ENDState



:DELAY:GROUPs



:DELAY:PARAmeter



:DELAY[:STATe]



:DELAY:STATe:GEN



:DELAY:STOP



:DELAY:TIME:GEN

DP800 Programming Guide

2-11

RIGOL

Chapter 2 Command System

:DELAY:CYCLEs
Syntax

:DELAY:CYCLEs {N|I}[,<value>]
:DELAY:CYCLEs?

Description

Set the number of cycles of the delayer.
Query the number of cycles of the delayer.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

{N|I}

Discrete

N|I

N

<value>

Integer

1 to 99999

1



The number of cycles refers to the number of times that the instrument
performs delay output according to the preset state. Wherein, I represents
infinite number of cycles; N represents finite number of cycles. The number of
cycles is specified by <value> and when this parameter is omitted, the number
of cycles is set to 1 by default.



The total number of groups of the delay output = the number of groups × the
number of cycles; wherein, the number of groups is set by the :DELAY:GROUPs
command.



The power supply will terminate the delayer function when the total number of
groups of delays is finished or when the state that meets the "stop condition"
(the :DELAY:STOP command) is detected. At this point, the state of the power
supply depends on the setting of the :DELAY:ENDState command.

The query returns I or N,<value>, for example, N,100.
:DELAY:CYCLE I

/*Set the number of cycles to "Infinite" */

:DELAY:CYCLE N

/*Set the number of cycles to 1*/

:DELAY:CYCLE N,100

/*Set the number of cycles to 100*/

:DELAY:CYCLE?

/*Query the current number of cycles and the query returns
N,100*/

:DELAY:GROUPs
:DELAY:STOP
:DELAY:ENDState

2-12

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:DELAY:ENDState
Syntax

:DELAY:ENDState {ON|OFF|LAST}
:DELAY:ENDState?

Description

Set the end state of the delayer.
Query the end state of the delayer.

Parameter
Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

{ON|OFF|LAST}

Discrete

ON|OFF|LAST

OFF



The end state refers to the state of the instrument when the delayer stops. The
power supply will terminate the delayer function when the total number of
groups of delays is finished or when the state that meets the "stop condition"
(the :DELAY:STOP command) is detected.



ON: output on, the instrument turns on the output automatically; OFF: output
off, the instrument turns off the output automatically; LAST: last state, the
instrument stops at the output state of the last group.



The total number of groups of the delay output = the number of groups × the
number of cycles. Wherein, the number of groups is set by the :DELAY:GROUPs
command and the number of cycles is set by the :DELAY:CYCLEs command.

The query returns ON, OFF or LAST.
:DELAY:ENDS LAST

/*Set the end state of the delayer to Last*/

:DELAY:ENDS?

/*Query the current end state of the delayer and the query
returns LAST*/

:DELAY:STOP
:DELAY:GROUPs
:DELAY:CYCLEs

DP800 Programming Guide

2-13

RIGOL

Chapter 2 Command System

:DELAY:GROUPs
Syntax

:DELAY:GROUPs <value>
:DELAY:GROUPs?

Description

Set the number of output groups of the delayer.
Query the number of output groups of the delayer.

Parameter
Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

<value>

Integer

1 to 2048

1



The number of output groups refers to the number of times that the
instrument turns on or off the output according to the preset state.



The total number of groups of the delay output = the number of groups × the
number of cycles. Wherein, the number of cycles is set by the :DELAY:CYCLEs
command.



The power supply will terminate the delayer function when the total number of
groups of delays is finished or when the state that meets the "stop condition"
(the :DELAY:STOP command) is detected. At this point, the state of the power
supply depends on the setting of the :DELAY:ENDState command.

The query returns an integer from 1 to 2048.
:DELAY:GROUP 125

/*Set the number of groups to 125*/

:DELAY:GROUP?

/*Query the current number of groups and the query
returns 125*/

:DELAY:CYCLEs
:DELAY:STOP
:DELAY:ENDState

2-14

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:DELAY:PARAmeter
Syntax

:DELAY:PARAmeter <secnum>,{ON|OFF},<time>
:DELAY:PARAmeter? <firnum>[,<timercount>]

Description

Set the delayer parameters of the specified group.
Query the delayer parameters of the specified groups.

Parameter

Explanation

Return Format

Example

Name

Type

Range

Default

<secnum>

Integer

0 to 2047

None

{ON|OFF}

Bool

ON|OFF

OFF (even group);
ON (odd group)

<time>

Integer

1s to 99999s

1s

<firnum>

Integer

0 to 2047

None

<timercount>

Integer

1 to 2048

1



<secnum> is the group number of the delayer parameters to be set;
{ON|OFF} is the output state; <time> is the delay time.



<firnum> is the group number of the first group of delayer parameters to be
queried; <timercount> is the total number of groups of delayer parameters to
be queried. When <timercount> is omitted, the command queries a single
group of delayer parameters by default.

The query returns a string starting with #. For example,
#90000000152,OFF,3;3,ON,1;; wherein, #9000000015 is the data block
header; 2,OFF,3;3,ON,1; are the actual delayer parameters.


The data block header is used to describe the data stream length information
and starts with #. For example, the number "9" in #9000000015 denotes
that the 9-bit data (000000015) following it is used to denote the data stream
length (15 bytes).



The format of each group of delayer parameters is "number,output state,delay
time"; multiple groups of parameters are separated by";". For example,
2,OFF,3;3,ON,1; denotes there are two groups of delayer parameters; the
number of the first group of delayer parameters is 2, the output state is OFF
and the delay time is 3s; the number of the second group of delayer
parameters is 3, the output state is ON and the delay time is 1s.

:DELAY:PARA 1,ON,2

/*Set the delayer parameters of the first group. Set the
state of the first group to ON and the delay time to 2s*/

:DELAY:PARA? 3,2

/*Query two groups of delayer parameters starting from
the third group. The query returns
#90000000153,ON,1;4,OFF,1;*/

DP800 Programming Guide

2-15

RIGOL

Chapter 2 Command System

:DELAY[:STATe]
Syntax

:DELAY[:STATe] {ON|OFF}
:DELAY[:STATe]?

Description

Enable or disable the delay output function of the current channel.
Query the state of the delay output function of the current channel.

Parameter
Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF



Enabling the delayer will change the output state of the channel. Make sure
that the devices connected to the power supply will not be affected by the
change of the output status before enabling the delayer.



The delayer parameters cannot be modified when the delayer is enabled.



For the multi-channel models, you can send
the :INSTrument:NSELect, :INSTrument[:SELEct] or :INSTrument[:SELect]
command to switch the current channel, set the delayer parameters of the
current channel and enable or disable the delayer.



The timer (:TIMEr[:STATe]) and delayer cannot be enabled at the same time.

The query returns ON or OFF.
:DELAY ON

/*Enable the delay output*/

:DELAY?

/*Query the status of the delay output and the query returns ON*/

:INSTrument:NSELect
:INSTrument[:SELEct]
:INSTrument[:SELect]
:TIMEr[:STATe]

:DELAY:STATe:GEN
Syntax

:DELAY:STATe:GEN {01P|10P}
:DELAY:STATe:GEN?

Description

Select the pattern used when generating state automatically.
Query the pattern used when generating state automatically.

Parameter
Explanation
Return Format
Example

2-16

Name

Type

Range

Default

{01P|10P}

Discrete

01P|10P

01P



01P: 0 1 pattern. The state is set to "Off" and "On" alternately.



10P: 1 0 pattern. The state is set to "On" and "Off" alternately.

The query returns 01P or 10P.
:DELAY:STAT:GEN 10P

/*Select 1 0 pattern*/

:DELAY:STAT:GEN?

/*Query the pattern used when generating state
automatically and the query returns 10P*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:DELAY:STOP
Syntax

:DELAY:STOP {NONE|<V|>V|<C|>C|<P|>P}[,<value>|MINimum|MAXimum]
:DELAY:STOP? [MINimum|MAXimum]

Description

Set the stop condition of the delayer.
Query the stop condition of the delayer.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

{NONE|<V|>V|
<C|>C|<P|>P}

Discrete

NONE|<V|>V|<C|>C|<P|>P

NONE

<value>

Real

0 to the maximum
voltage/current/power of the
current channel

0V/0A/0W



The power supply monitors the output voltage, current and power during delay
output. Use this command to set a stop condition and the delay output stops
when state that fulfills this condition is detected.



"NONE", "<V", ">V" "<C", ">C", "<P" and ">P" can set the stop condition to
"None", "<Volt", ">Volt", "<Curr", ">Curr", "<Power" or ">Power"
respectively.



<value> is used to set the voltage, current or power of the stop condition and
when it is omitted, this command is used to select the stop condition.

The query returns NONE or "stop condition,value", for example, >V,8.000.
:DELAY:STOP >V,8

/*Set the stop condition of the delayer to ">8V"*/

:DELAY:STOP?

/*Query the current stop condition of the delayer and the
query returns >V,8.000*/

DP800 Programming Guide

2-17

RIGOL

Chapter 2 Command System

:DELAY:TIME:GEN
Syntax

:DELAY:TIME:GEN {FIX|INC|DEC}[,<value0>[,<value1>]]
:DELAY:TIME:GEN?

Description

Set the method used to generate time automatically and the corresponding
parameters.
Query the method used to generate time automatically as well as the corresponding
parameters.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

{FIX|INC|DEC}

Discrete

FIX|INC|DEC

FIX

<value0>

Integer

Refer to the "Explanation"

1s

<value1>

Integer

Refer to the "Explanation"

1s



When FIX (fixed time) is selected, you can set the on delay (<value0>, namely
the duration when the state is "On") and off delay (<value1>, namely the
duration when the state is "Off"). Both the ranges of <value0>and <value1>
are from 1s to 99999s. When only one of the parameters is specified, the on
delay time will be set by default.



When INC (monotonic increase) or DEC (monotonic decline) is selected, the
duration is generated following the monotonic increase or monotonic decline
rule, namely the time is generated by increasing or declining at the step from
the time base value. You can set the time base value (<value0>) and step
(<value1>). The two fulfills the relation: time base value + number of output
groups*step value≤99999s. The actual range of <value0> is from 1s to
(99999s- number of output groups*step value); the actual range of <value1>
is from 1s to int{(99999s-time base value)/number of output groups}.When
only one of the parameters is specified, the time base value will be set by
default.



When <value0> and <value1> are both omitted, this command is used to
select the method used to generate time automatically.

The query returns a string in "the method used to generate time
automatically,<value0>,<value1>" form, for example, INC,2,5.
:DELAY:TIME:GEN INC,2,5 /*Set the method used to generate time automatically
to monotonic increase, the time base value to 2s and
the step to 5s*/
:DELAY:TIME:GEN?

Related
Command

2-18

/*Query the method used to generate time
automatically and the parameters; the query returns
INC,2,5*/

:DELAY:GROUPs

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:DISPlay Commands
The :DISPlay commands are used to set the display mode, turn on or off the screen display, display and
clear the string on the screen.
Command List:


:DISPlay:MODE



:DISPlay[:WINDow][:STATe]



:DISPlay[:WINDow]:TEXT:CLEar



:DISPlay[:WINDow]:TEXT[:DATA]

:DISPlay:MODE
Syntax

:DISPlay:MODE {NORMal|WAVE|DIAL|CLAS}
:DISPlay:MODE?

Description

Set the display mode.
Query the current display mode.

Parameter
Explanation

Name

Type

Range

Default

{NORMal|WAVE|DIAL|CLAS}

Discrete

NORMal|WAVE|DIAL|CLAS

NORMal



DP831A/DP832A provide four display modes: number, waveform, dial and
classic.
DP831/DP832/DP822A/DP822/DP821A/DP821/DP813A/DP813/DP811A/DP81
1 provide three display modes: number, waveform and dial.

Return Format
Example



NORMal: number mode. The parameters (such as the voltage and current) of
all the channels are displayed in number format.



WAVE: waveform mode. The parameters (such as the voltage and current) of
the channel currently selected are displayed in both waveform and number
formats.



DIAL: dial mode. The parameters (such as the voltage and current) of the
channel currently selected are displayed in both dial and number formats.



CLAS: classic mode. The parameters (such as the voltage and current) of all
the channels are displayed in number (classic) format.

The query returns NORMAL, WAVE, DIAL or CLASSIC.
:DISP:MODE WAVE

/*Select the waveform display mode*/

:DISP:MODE?

/*Query the current display mode and the query returns
WAVE*/

DP800 Programming Guide

2-19

RIGOL

Chapter 2 Command System

:DISPlay[:WINDow][:STATe]
Syntax

:DISPlay[:WINDow][:STATe] {OFF|ON}
:DISPlay[:WINDow][:STATe]?

Description

Turn off or on the screen display.
Query the current screen display state.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{OFF|ON}

Bool

OFF|ON

ON



OFF: turn off the screen display; ON: turn on the screen display.



Turning off the screen display is only valid in remote mode. When the
instrument returns to the local mode, the screen display is turned on
automatically. Pressing Back can return the instrument from remote mode to
local mode.

The query returns OFF or ON.
:DISP OFF

/*Turn off the screen display*/

:DISP?

/*Query the current screen display state and the query returns
OFF*/

:DISPlay[:WINDow]:TEXT:CLEar
Syntax
Description
Example
Related
Command

2-20

:DISPlay[:WINDow]:TEXT:CLEar
Clear the characters displayed on the screen.
:DISP:TEXT:CLE

/*Clear the characters displayed on the screen*/

:DISPlay[:WINDow]:TEXT[:DATA]

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:DISPlay[:WINDow]:TEXT[:DATA]
Syntax

:DISPlay[:WINDow]:TEXT[:DATA]
<quoted string>[,<coordinate X value>[,<coordinate Y value>]]
:DISPlay[:WINDow]:TEXT[:DATA]?

Description

Display the specified string from the specified coordinate on the screen.
Query the string currently displayed on the screen.

Parameter

Explanation

Return Format

Example

Related
Command

Name

Type

Range

Default

<quoted string>

ASCII string

Refer to the "Explanation"

None

<coordinate X value>

ASCII string

Refer to the "Explanation"

<coordinate Y value>

ASCII string

Refer to the "Explanation"



<quoted string> is a string enclosed in double quotation marks, for example,
"RIGOL" (note that the content displayed on the instrument screen does not
contain the double quotation marks in the string). The string cannot exceeds
45 characters (comma, semicolon and period are treated as an independent
character). If the string contains more than 45 characters, the command is
invalid. The specified string will be truncated if it can not be displayed within a
line (only the previous section will be displayed normally, and the rest section
that needs to be displayed in a new line will not be displayed).



<coordinate X value> and <coordinate Y value> denotes the X axis (horizontal
axis) and Y axis (vertical axis) coordinate values respectively (the coordinate
values set are the coordinate values of the upper-left corner of the string on
the screen). When only one parameter is specified, the horizontal axis value
(<coordinate X value>) is set by default; when the two parameters are both
omitted, the string is displayed at the default coordinate (5,110).



The ranges of <coordinate X value> and <coordinate Y value> are 0 to 320
and 0 to 240 respectively and the default coordinate is (5,110). If the specified
X axis coordinate value is less than 2, the X axis coordinate value will be
treated as 2; if it is greater than 315, it will be treated as 315. If the specified Y
axis coordinate value is greater than 230, the Y axis coordinate value will be
treated as 230.

The query returns a string enclosed in double-quotation marks. The content
enclosed in the double quotation marks are the content actually displayed on the
screen (the double quotation marks are not part of the content currently displayed
on the screen), for example, "RIGOL".
:DISP:TEXT "RIGOL",25,35

/*Display the string RIGOL from (25,35)*/

:DISP:TEXT?

/*Query the string currently display on the screen
and the query returns "RIGOL"*/

:DISPlay[:WINDow]:TEXT:CLEar

DP800 Programming Guide

2-21

RIGOL

Chapter 2 Command System

IEEE488.2 Common Commands
Command List:


*CLS



*ESE



*ESR?



*IDN?



*OPC



*OPT?



*PSC



*RCL



*RST



*SAV



*SRE



*STB?



*TRG



*TST?



*WAI

*CLS
Syntax
Description

Clear all the event registers.

Explanation



You can also send command (:STATus:QUEStionable[:EVENt]? or *ESR?) to
query the event register to clear the corresponding event register.



The reset command (*RST) or device clear command cannot clear the event
registers.

Related
Commands

2-22

*CLS

:STATus:QUEStionable[:EVENt]?
*ESR?

DP800 Programming Guide

RIGOL

Chapter 2 Command System

*ESE
Syntax

*ESE <enable value>
*ESE?

Description

Enable the bits in the enable register of the standard event register.
Query the bits currently enabled in the enable register of the standard event
register.

Parameter
Explanation

Return Format

Example

Related
Command

Name

Type

Range

Default

<enable value>

Character

Refer to the "Explanation"

None



<enable value> is a decimal value corresponding to the sum of the binary
weights of the bits to be enabled in the enable register of the standard event
register. For the definitions of the bits in the standard event register and their
corresponding decimal values, refer to Table 1-5.
For example, to enable bit2 (query error) and bit4 (execution error) in the
enable register of the standard event register, set <enable value> to 20
(according to 22+24=20).



After the bits in the enable register of the standard event register are enabled,
the system reports the state of the corresponding bit to the status byte
register.



When <enable value> is set to 0, executing this command will clear the enable
register of the standard event register.



You can also send the *PSC (*PSC 1) command to clear the enable register of
the standard event register at the next power-on.

The query returns a decimal value corresponding to the sum of the binary weights
of the bits to be enabled in the enable register of the standard event register, for
example, 20.
*ESE 20

/*Enable bit2 (query error) and bit4 (execution error) in the enable
register of the standard event register*/

*ESE?

/*Query the bits currently enabled in the enable register of the standard
event register and the query returns 20*/

*PSC

DP800 Programming Guide

2-23

RIGOL

Chapter 2 Command System

*ESR?
Syntax

*ESR?

Description

Query the event register of the standard event register.

Explanation



This command returns a decimal value (corresponding to the sum of the binary
weights of all the bits in the register) and clears the status of this register. For
the definitions of the bits in the standard event register and their
corresponding decimal values, refer to Table 1-5.
For example, if query error and execution error currently occur in the
instrument, the bit2 (query error bit) and bit4 (execution error bit) in the event
register of the standard event register are set and this command returns 20
(according to 22+24=20).



The bits in the event register of the standard event register are latched and
reading the register will clear it. You can also use the *CLS command to clear
this register.

Return Format

The query returns a decimal value corresponding to the sum of the binary weights
of all the bits in the register, for example, 20.

Example

*ESR?

Related
Command

*CLS

/*Query the event register of the standard event register and the query
returns 20*/

*IDN?
Syntax
Description
Return Format

2-24

*IDN?
Query the ID string of the instrument.
The query returns the ID string of the instrument which consists of 4 parts (the
manufacturer name, the instrument model, the instrument serial number and the
digital board version number in sequence) separated by commas ",".

DP800 Programming Guide

RIGOL

Chapter 2 Command System

*OPC
Syntax

*OPC
*OPC?

Description

After executing this command, the bit0 (OPC, "operation complete" bit) in the event
register of the standard event register is set.
Query whether the *OPC command is executed. The query returns "1" to the output
buffer when the command is executed.

Explanation

Return Format
Example



Operation complete refers to that all the previous commands including the
*OPC command are executed.



Sending the *OPC? command and viewing the result can ensure
synchronization.



When setting the instrument configuration via programming (by executing the
command string), using this command as the last command can determine
when the command queue is executed (when the command queue is executed
the, bit0 (OPC, "operation complete" bit) in the event register of the standard
event register will be set).



Send the *OPC command after sending command to load the information in
the output buffer (query data) of the power supply and you can determine
when the information is available via the "OPC" bit.

The query returns 1 when the current operation is completed.
*OPC

/*Set the bit0 (OPC, "operation complete" bit) in the event register of the
standard event register after completing the current operation*/

*OPC?

/*Query whether the current operation is completed and the query
returns 1*/

*OPT?
Syntax

*OPT?

Description

Query the installation status of the options.

Explanation



The options include high resolution, analyzer, monitor, LAN, RS232 and trigger.



For DP832A/DP831A/DP822A/DP821A/DP813A/DP811A, the instrument is
installed with the six options mentioned above when it leaves factory. For
DP832/DP831/DP822/DP821/DP813/DP811, to use the optional functions,
please order the corresponding options and install the options correctly
(:LIC:SET).

Return Format

Example

The query returns the installation status of the options and different options are
separated by commas ",". The query returns the option name if the option is
installed; otherwise, the query returns 0.
High resolution option: DP8-ACCURACY
Analyzer option: DP8-ANALYZER
Monitor option: DP8-MONITOR
LAN option: DP8-LAN
RS232 option: DP8-RS232
Trigger option: DP8-TRIGGER
For example, the query returns DP8-ACCURACY,DP8-ANALYZER,DP8-MONITOR,
DP8-LAN,DP8-RS232,DP8-TRIGGER, indicating that the six options mentioned
above are all installed.
*OPT?

DP800 Programming Guide

/*Query the installation status of the options and the query returns
0,DP8-ANALYZER,DP8-MONITOR,DP8-LAN,DP8-RS232,DP8-TRIGGER*/

2-25

RIGOL

Chapter 2 Command System

*PSC
Syntax

*PSC {0|1}
*PSC?

Description

Enable or disable the function to clear the enable registers of the status byte and
standard event registers at power-on.
Query the state of the function to clear the enable registers of the status byte and
standard event registers at power-on.

Parameter
Explanation

Return Format
Example

Type

Range

Default

{0|1}

Discrete

0|1

0



*PSC 1 denotes clearing the enable registers of the status byte and standard
event registers at power-on; *PSC 0 denotes that the enable registers of the
status byte and standard event registers will not be affected at power-on.



You can also send the *SRE command (*SRE 0) or *ESE command (*ESE 0) to
clear the enable registers of the status byte and standard event registers
respectively.

The query returns 0 or 1.
*PSC 1 /*Enable the function to clear the enable registers of the status byte and
standard event registers at power-on*/
*PSC?

Related
Commands

Name

/*Query the setting of the power-on status clear and the query returns 1*/

*SRE
*ESE

*RCL
Syntax
Description

*RCL {1|2|3|4|5|6|7|8|9|10}
Recall the instrument state stored in the internal memory.

Parameter

Explanation

Related
Commands

2-26

Name

Type

Range

Default

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None



The power supply provides 10 storage locations (numbered 1 to 10) for
instrument states. This command recalls the instrument state stored in the
specified location. Selecting number 1 to 10 can recall the instrument states
stored in the corresponding locations respectively.



This command is only available when a state file has been stored in the
specified storage location in the internal memory.



You can also send the :MEMory[:STATe]:LOAD or :RECAll:LOCal command to
recall the instrument state stored in the internal memory.

:MEMory[:STATe]:LOAD
:RECAll:LOCal

DP800 Programming Guide

RIGOL

Chapter 2 Command System

*RST
Syntax

*RST

Description

Restore the power supply to factory state (refer to "Appendix B: Factory
Setting") and clear the error queue.

Related
Commands

:PRESet:KEY
:PRESet[:APPLy]

*SAV
Syntax
Description

*SAV {1|2|3|4|5|6|7|8|9|10}
Save the current instrument state to the specified storage location in the internal
memory using the default filename.

Parameter
Explanation

Example

Related
Commands

Name

Type

Range

Default

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None



The power supply provides 10 storage locations (numbered 1 to 10) for
instrument states. The default name is RIGOLn.RSF; n corresponds to the
number of the storage location.



If a state file has already been stored in the specified storage location, this
command will directly store the current instrument state to the specified
location (directly overwrite the original file). If the state file stored in the
specified storage location is locked (refer to the :MEMory[:STATe]:LOCK
command), this command is invalid (will not overwrite the original file).



You can also send the :MEMory[:STATe]:STORe or :STORe:LOCal command to
store the current status of the power supply to the specified location in the
internal memory.

*SAV 5 /*Save the current instrument state to storage location 5 of state files in
the internal memory of the power supply with the filename
RIGOL5.RSF*/
:STORe:LOCal
:MEMory[:STATe]:STORe
:MEMory[:STATe]:LOCK

DP800 Programming Guide

2-27

RIGOL

Chapter 2 Command System

*SRE
Syntax

*SRE <enable value>
*SRE?

Description

Enable the bits in the enable register of the status byte register.
Query the bits currently enabled in the enable register of the status byte register.

Parameter

Explanation

Return Format
Example

Related
Command

Name

Type

Range

Default

<enable value>

Discrete

Refer to the "Explanation"

None



<enable value> is a decimal value corresponding to the sum of the binary
weights of the bits to be enabled in the status byte enable register. For the
definitions of the bits in the status byte register and their corresponding
decimal values, please refer to Table 1-6.
For example, to enable the bit3 (QUES) and bit4 (MAV) in the status byte
enable register, set <enable value> to 24 (according to 23+24=24).



After the bits are enabled, the system sends service request via the bit6
(service request bit) in the status byte register.



When <enable value> is set to 0, executing this command will clear the enable
register of the status byte register. You can also send the *PSC command
(*PSC 1) to clear the enable register of the status byte register at the next
power-on.

The query returns a decimal value corresponding to the sum of the binary weights
of the bits enabled in the status byte enable register, for example, 24.
*SRE 24

/* Enable the bit3 (QUES) and bit4 (MAV) in the enable register of the
status byte register and enable the service request*/

*SRE?

/* Query the bits currently enabled in the enable register of the status
byte register and the query returns 24*/

*PSC

*STB?
Syntax

*STB?

Description

Query the SUMMARY register of the status byte register.

Explanation

The query returns a decimal value (corresponding to the sum of the binary weights
of all the bits in the register) but do not clear the register. For the definitions of the
bits in the status byte register and their corresponding decimal values, please refer
to Table 1-6.
For example, if questionable state currently occurs in the instrument and the service
request is send, the bit3 (QUES) and bit6 (RQS) in the SUMMARY register of the
status byte register are set and the query returns 72 (according to 23+26=72).

Return Format

The query returns a decimal value corresponding to the sum of the binary weights
of all the bits in the SUMMARY register of the status byte register, for example, 72.

Example

2-28

*STB?

/* Query the SUMMARY register of the status byte register and the query
returns 72*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

*TRG
Syntax

*TRG

Description

Generate a trigger operation.

Explanation



This command is only available when "Bus (software) trigger"
(:TRIGger[:SEQuence]:SOURce or :TRIGger:IN:CHTYpe) is selected.



When "Bus (software) trigger" is selected, sending this command will trigger
the power supply and generate a trigger operation after the specified delay
time (when trigger delay is set (:TRIGger[:SEQuence]:DELay)).

Example

Related
Commands

:TRIG:SOUR BUS

/*Select "Bus (software) trigger"*/

:TRIG:DEL 3

/*Set the trigger delay time to 3s*/

:INIT

/*Initialize the trigger system*/

*TRG

/*Generate a trigger operation after the specified trigger
delay time (here it is set to 3s)*/

:TRIGger[:SEQuence]:SOURce
:TRIGger:IN:CHTYpe
:TRIGger[:SEQuence]:DELay

*TST?
Syntax

*TST?

Description

Query the self-test results of the instrument.

Explanation



The power supply executes self-test at start-up. This command queries the
self-test results (including TopBoard, BottomBoard and fan).



You can also send the :SYSTem:SELF:TEST:BOARD?
or :SYSTem:SELF:TEST:FAN? command to query the self-test result of the
TopBoard, BottomBoard or fan.

Return Format
Related
Commands

The query returns the self-test results of TopBoard, BottomBoard and fan
respectively, for example, TopBoard:PASS,BottomBoard:PASS,Fan:PASS.
:SYSTem:SELF:TEST:BOARD?
:SYSTem:SELF:TEST:FAN?

*WAI
Syntax

*WAI

Description

Set the instrument to executing any other command after all the pending
operations are completed.

Explanation

When "BUS" (Bus trigger, namely software trigger) is selected, sending this
command can ensure synchronization. After executing this command, the
instrument will only execute any other command after all the pending operations
are completed.

Example

*WAI

DP800 Programming Guide

/*Set the instrument to executing any other command after all the
pending operations are completed*/

2-29

RIGOL

Chapter 2 Command System

:INITiate Command
The :INITiate command is used to initialize the trigger system of the instrument.

:INITiate
Syntax

:INITiate[:IMMediate]

Description

Initialize the trigger system.

Explanation



When the trigger type (:TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe) is set to "IMM" (immediate trigger), the instrument
will execute a complete trigger operation after executing this command.



When the trigger type (:TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe) is set to "BUS" (Bus trigger, namely software trigger),
executing this command will initialize the trigger system. Then, send the *TRG
command to trigger the power supply and the power supply will starts the
trigger operation after the specified delay time (when the delay time is set
(:TRIGger[:SEQuence]:DELay)).



You can also send the :TRIGger:IN:IMMEdiate command to initialize the
trigger system.

Related
Commands

:TRIGger[:SEQuence]:SOURce
:TRIGger:IN:CHTYpe
*TRG
:TRIGger[:SEQuence]:DELay
:TRIGger:IN:IMMEdiate

2-30

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:INSTrument Commands
Command List:


:INSTrument:COUPle[:TRIGger]



:INSTrument:NSELect



:INSTrument[:SELEct]



:INSTrument[:SELect]

:INSTrument:COUPle[:TRIGger]
Syntax

:INSTrument:COUPle[:TRIGger] {ALL|NONE|<list>}
:INSTrument:COUPle[:TRIGger]?

Description

Select the trigger coupling channels.
Query the current trigger coupling channels.

Parameter
Explanation

Return Format

Example

Related
Commands

Name

Type

Range

Default

<list>

Discrete

Refer to the "Explanation"

None



This command is only applicable to multi-channel models.



<list> should contain at least two channels separated by comma, for example,
CH1,CH2; CH1,CH3; CH2,CH3 or CH1,CH2,CH3.



You can set the trigger voltage of each channel using the
[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude]
or :TRIGger:IN:VOLTage command and set the current of each channel using
the [:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude]
or :TRIGger:IN:CURRent command respectively; the current channel and the
current coupling channels (the current coupling channels can contain or not
contain the current channel) will execute the trigger operation at the same
time (the channel voltage/current setting values change to the trigger
voltage/current values immediately) when the trigger condition is met and the
outputs of the corresponding channels are turned on (:OUTPut[:STATe]).

The query returns the names of the current coupling channels and the rated
voltage/current values; different channels are separated by commas, for example,
CH1:8V/5A,CH2:30V/2A. If the coupling channels contain all the channels, the
query returns ALL.
:INST:COUP CH1,CH2

/*Set the trigger coupling channels to CH1 and CH2*/

:INST:COUP?

/*Query the current trigger coupling channels and the
query returns CH1:8V/5A,CH2:30V/2A*/

[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude]
:TRIGger:IN:VOLTage
[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude]
:TRIGger:IN:CURRent
:OUTPut[:STATe]

DP800 Programming Guide

2-31

RIGOL

Chapter 2 Command System

:INSTrument:NSELect
Syntax

:INSTrument:NSELect {1|2|3}
:INSTrument:NSELect?

Description

Select the current channel.
Query the channel currently selected.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{1|2|3}

Discrete

1|2|3

1



This command is only applicable to multi-channel models.



The parameters 1, 2 and 3 represent CH1, CH2 and CH3 respectively.



The function of this command is the same with the functions of
the :INSTrument[:SELEct] and :INSTrument[:SELect] commands.

The query returns 1, 2 or 3.
:INST:NSEL 3 /*Select CH3 as the current channel*/
:INST:NSEL?

Related
Commands

/*Query the channel currently selected and the query returns 3*/

:INSTrument[:SELEct]
:INSTrument[:SELect]

:INSTrument[:SELEct]
:INSTrument[:SELect]
Syntax

:INSTrument[:SELEct] {CH1|CH2|CH3}
:INSTrument[:SELect] {CH1|CH2|CH3}
:INSTrument[:SELEct]?
:INSTrument[:SELect]?

Description

Select the current channel.
Query the channel currently selected.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{CH1|CH2|CH3}

Discrete

CH1|CH2|CH3

CH1



These two commands are only applicable to multi-channel models.



The functions of these two commands are the same with the function of
the :INSTrument:NSELect command.

The query returns CH1:8V/5A, CH2:30V/2A or CH3:-30V/2A.
:INST CH3 /*Select CH3 as the current channel*/
:INST?

/*Query the channel currently selected and
the query returns CH3:-30V/2A */

Related
Command

2-32

:INSTrument:NSELect

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:LIC Command
The :LIC command is used to install the options and is applicable to
DP832/DP831/DP822/DP821/DP813/DP811. For DP832A/DP831A/DP822A/DP821A/DP813A/DP811A, the
instrument is installed with the high resolution, analyzer, monitor, LAN, RS232 and trigger options when it
leaves factory and users do not need to install them.

:LIC:SET
Syntax

:LIC:SET <license>

Description

Install the options.

Parameter

Name

Type

Range

Default

<license>

ASCII string

Refer to the "Explanation"

None

Explanation

Example
Related
Command



To install an option, the option license is required. <license> is the option
license (for each instrument, the license is unique). It is a string of fixed
characters.



To acquire the option license, you need to order the desired option to get the
key and then generate the option license using the key following the steps
below.
 Log in to the RIGOL official website (www.rigol.com), click License
Activation to enter the "Registered product license code" interface.
 In the software license registration interface, input the correct key, serial
number (press Utility  Sys Info to acquire the serial number of the
instrument), and the verification code. Click Generate to obtain the
download link of the option license file. If you need to use the option
license file, please click the link to download the file to the root directory of
the USB storage device.

:LIC:SET UVF2L3N3XXKYTB73PPRSA4XDMSRT
*OPT?

DP800 Programming Guide

2-33

RIGOL

Chapter 2 Command System

:MEASure Commands
Command List:


:MEASure:ALL[:DC]?



:MEASure:CURRent[:DC]?



:MEASure:POWEr[:DC]?



:MEASure[:VOLTage][:DC]?

:MEASure:ALL[:DC]?
Syntax
Description

:MEASure:ALL[:DC]? [CH1|CH2|CH3]
Query the voltage, current and power measured on the output terminal of the
specified channel.

Parameter
Explanation

Return Format

Example

Related
Commands

2-34

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



If [CH1|CH2|CH3] is omitted, the command queries the voltage, current and
power measured on the output terminal of the channel currently selected.



You can also send the :MEASure:CURRent[:DC]?, :MEASure:POWEr[:DC]?
and :MEASure[:VOLTage][:DC]? commands to query the current, power and
voltage measured on the output terminal of the specified channel respectively.

The query returns the voltage, current and power (separated by commas)
measured on the output terminal of the specified channel, for example,
2.0000,0.0500,0.100.
:MEAS:ALL? CH1

/*Query the voltage, current and power measured on the
output terminal of CH1 and the query returns
2.0000,0.0500,0.100*/

:MEASure:CURRent[:DC]?
:MEASure:POWEr[:DC]?
:MEASure[:VOLTage][:DC]?

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:MEASure:CURRent[:DC]?
Syntax
Description

:MEASure:CURRent[:DC]? [CH1|CH2|CH3]
Query the current measured on the output terminal of the specified channel.

Parameter
Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



If [CH1|CH2|CH3] is omitted, the command queries the current measured on
the output terminal of the channel currently selected.



You can also send the :MEASure[:VOLTage][:DC]?
and :MEASure:POWEr[:DC]? commands to query the voltage and power
measured on the output terminal of the specified channel respectively, or send
the :MEASure:ALL[:DC]? command to query the voltage, current and power
measured on the output terminal of the specified channel at the same time.

The query returns the current measured on the output terminal of the specified
channel, for example, 0.0500.
:MEAS:CURR? CH1 /*Query the current measured on the output terminal of CH1
and the query returns 0.0500*/
:MEASure[:VOLTage][:DC]?
:MEASure:POWEr[:DC]?
:MEASure:ALL[:DC]?

:MEASure:POWEr[:DC]?
Syntax
Description

:MEASure:POWEr[:DC]? [CH1|CH2|CH3]
Query the power measured on the output terminal of the specified channel.

Parameter
Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



If [CH1|CH2|CH3] is omitted, the command queries the power measured on
the output terminal of the channel currently selected.



You can also send the :MEASure:CURRent[:DC]?
and :MEASure[:VOLTage][:DC]? commands to query the current and voltage
measured on the output terminal of the specified channel respectively, or send
the :MEASure:ALL[:DC]? command to query the voltage, current and power
measured on the output terminal of the specified channel at the same time.

The query returns the power measured on the output terminal of the specified
channel, for example, 0.100.
:MEAS:POWE? CH1 /*Query the power measured on the output terminal of CH1
and the query returns 0.100*/
:MEASure:ALL[:DC]?
:MEASure:CURRent[:DC]?
:MEASure[:VOLTage][:DC]?

DP800 Programming Guide

2-35

RIGOL

Chapter 2 Command System

:MEASure[:VOLTage][:DC]?
Syntax
Description

:MEASure[:VOLTage][:DC]? [CH1|CH2|CH3]
Query the voltage measured on the output terminal of the specified channel.

Parameter
Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



If [CH1|CH2|CH3] is omitted, the command queries the voltage measured on
the output terminal of the channel currently selected.



You can also send the :MEASure:CURRent[:DC]? and :MEASure:POWEr[:DC]?
commands to query the current and power measured on the output terminal of
the specified channel respectively, or send the :MEASure:ALL[:DC]? command
to query the voltage, current and power measured on the output terminal of
the specified channel at the same time.

The query returns the voltage measured on the output terminal of the specified
channel, for example, 2.0000.
:MEAS? CH1

/*Query the voltage measured on the output terminal of CH1 and
the query returns 2.0000*/

:MEASure:ALL[:DC]?
:MEASure:CURRent[:DC]?
:MEASure:POWEr[:DC]?

2-36

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:MEMory Commands
The :MEMory commands are used to save the file to the specified location in the internal memory and
delete, read, lock or unlock the file stored in the specified storage location in the internal memory. DP800
allows the following four kinds of files to be saved in the internal memory.
1.
2.
3.
4.

State File (RSF): store the current system state, including the voltage, current, OVP, OCP and track
function status of each channel as well as the system parameters.
Record File (ROF): store the output state, voltage, current and power of each channel when the
recorder is enabled (for the channel of which the output is disabled, the corresponding recorded data
will be 0).
Timer File (RTF): store the timer parameters edited (the voltage, current and time of each group of
parameters).
Delay File (RDF): store the delayer parameters edited (the state and time of each group of
parameters).

Command List:


:MEMory[:STATe]:DELete



:MEMory[:STATe]:LOAD



:MEMory[:STATe]:LOCK



:MEMory[:STATe]:STORe



:MEMory[:STATe]:VALid?

:MEMory[:STATe]:DELete
Syntax
Description

:MEMory[:STATe]:DELete {RSF|ROF|RTF|RDF},{1|2|3|4|5|6|7|8|9|10}
Delete the file stored in the specified location in the internal memory, including state
file (RSF), record file (ROF), timer file (RTF) and delay file (RDF).

Parameter

Explanation

Example
Related
Command

Name

Type

Range

Default

{RSF|ROF|RTF|RDF}

Discrete

RSF|ROF|RTF|RDF

None

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None



The internal memory of DP800 series power supply can store at most 10 state
files, 10 record files, 10 timer files and 10 delay files respectively.



This command is only available when a file has been stored in the specified
storage location and the file is not locked (:MEMory[:STATe]:LOCK).



{1|2|3|4|5|6|7|8|9|10} represent the files stored in the corresponding
locations in the internal memory respectively.

:MEM:DEL RSF,5

/*Delete the file currently stored in storage location 5 of state
files in the internal memory*/

:MEMory[:STATe]:LOCK

DP800 Programming Guide

2-37

RIGOL

Chapter 2 Command System

:MEMory[:STATe]:LOAD
Syntax
Description

:MEMory[:STATe]:LOAD {RSF|RTF|RDF},{1|2|3|4|5|6|7|8|9|10}
Read the specified file stored in the internal memory, including state file (RSF),
timer file (RTF) and delay file (RDF).

Parameter

Explanation

Example
Related
Commands

Name

Type

Range

Default

{RSF|RTF|RDF}

Discrete

RSF|RTF|RDF

None

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None



This command is only available when a file has been stored in the specified
storage location in the internal memory.



You can also use the *RCL or :RECAll:LOCal command to read the specified file
stored in the internal memory.



{1|2|3|4|5|6|7|8|9|10} represent the files stored in the corresponding
locations in the internal memory respectively.

:MEM:LOAD RSF,5 /*Read the file currently stored in storage location 5 of state
files in the internal memory */
*RCL
:RECAll:LOCal

:MEMory[:STATe]:LOCK
Syntax

:MEMory[:STATe]:LOCK {RSF|ROF|RTF|RDF},{1|2|3|4|5|6|7|8|9|10},{ON|OFF}
:MEMory[:STATe]:LOCK? {RSF|ROF|RTF|RDF},{1|2|3|4|5|6|7|8|9|10}

Description

Lock or unlock the file in the specified storage location in the internal memory,
including state file (RSF), record file (ROF), timer file (RTF) and delay file (RDF).
Query whether the file in the specified storage location in the internal memory is
locked.

Parameter

Explanation

Return Format
Example

2-38

Name

Type

Range

Default

{RSF|ROF|RTF|RDF}

Discrete

RSF|ROF|RTF|RDF

None

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None

{ON|OFF}

Bool

ON|OFF

OFF



This command is only available when a file has been stored in the specified
storage location in the internal memory.



The locked file cannot be saved and deleted, but can be read.



The query returns NO if no file has been stored in the specified storage location
in the internal memory.



{1|2|3|4|5|6|7|8|9|10} represent the files stored in the corresponding
locations in the internal memory respectively.

The query returns YES or NO.
:MEM:LOCK RSF,5,ON

/*Lock the file currently stored in storage location 5 of
state files in the internal memory */

:MEM:LOCK? RSF,5

/*Query the locking state of the file currently stored in
storage location 5 of state files in the internal memory
and the query returns YES*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:MEMory[:STATe]:STORe
Syntax
Description

:MEMory[:STATe]:STORe {RSF|RTF|RDF},{1|2|3|4|5|6|7|8|9|10}
Save the specified type of file to the specified storage location in the internal
memory in the default filename, including state file (RSF), timer file (RTF) and delay
file (RDF).

Parameter

Explanation

Example

Related
Commands

Name

Type

Range

Default

{RSF|RTF|RDF}

Discrete

RSF|RTF|RDF

None

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None



If a file has been stored in the specified storage location, this command will
save the specified type of file to the specified storage location in the internal
memory (overwrite the original file directly). If the file stored in the specified
storage location is locked (refer to the :MEMory[:STATe]:LOCK command), this
command is invalid (will not overwrite the original file).



{1|2|3|4|5|6|7|8|9|10} represent the corresponding storage locations in the
internal memory respectively.



The storage directory of the record file is specified by the :RECorder:MEMory
command and the record file is stored automatically to the specified directory
when the recorder is turned off.



You can also send the *SAV or :STORe:LOCal command to store the current
instrument state to the specified location in the internal memory.

:MEM:STOR RSF,5

/*Store the current instrument state to the status file storage
location 5 in the internal memory; the filename is
RIGOL5.RSF*/

*SAV
:STORe:LOCal
:RECorder:MEMory
:MEMory[:STATe]:LOCK

:MEMory[:STATe]:VALid?
Syntax
Description

:MEMory[:STATe]:VALid? {RSF|ROF|RTF|RDF},{1|2|3|4|5|6|7|8|9|10}
Query whether a valid file has been stored in the specified storage location in the
internal memory, including state file (RSF), record file (ROF), timer file (RTF) and
delay file (RDF).

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

{RSF|ROF|RTF|RDF}

Discrete

RSF|ROF|RTF|RDF

None

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None



The read, delete and lock operations are only valid when a valid file has been
stored in the specified storage location in the internal memory.



{1|2|3|4|5|6|7|8|9|10} represent the files stored in the corresponding
locations in the internal memory respectively.

The query returns YES or NO.
:MEM:VAL? RSF,5 /*Query whether a valid file has been stored in storage location
5 of state files in the internal memory and the query returns
YES*/

DP800 Programming Guide

2-39

RIGOL

Chapter 2 Command System

:MMEMory Commands
The :MMEMory commands are used to store the file to the specified external storage directory, read or
delete the specified file in the external memory as well as query the disk information of the external
memory. DP800 supports to save state file (RSF), timer file (RTF) and delay file (RDF) into the specified
external storage directory.
Command List:


:MMEMory:CATalog?



:MMEMory:CDIRectory



:MMEMory:DELete



:MMEMory:DISK?



:MMEMory:LOAD



:MMEMory:MDIRectory



:MMEMory:STORe

:MMEMory:CATalog?
Syntax
Description

Query all the files and folders stored in the external storage directory (D disk).

Explanation

This command is only valid when external memory (D disk) is detected and the
current directory is the external memory or a folder in the external memory.

Return Format

2-40

:MMEMory:CATalog?

The query returns the names of all the files and folders (separated by commas)
stored in the external memory, for example, RIGOL0.BMP,cc.RSF,RIGOL. Wherein,
RIGOL0.BMP represents bitmap file, cc.RSF represents state file and RIGOL
represents the folder.

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:MMEMory:CDIRectory
Syntax

:MMEMory:CDIRectory <directory_name>
:MMEMory:CDIRectory?

Description

Set the current operation directory.
Query the current operation directory.

Parameter
Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

<directory_name>

ASCII string

Refer to the "Explanation"

NULL



This command is only applicable to external memory and is only valid when
external memory (D disk) is detected.



<directory_name> must be valid directory (it can be the external memory
(D:\) and the folder (such as D:\RIGOL) in the external memory) in the
external memory (D disk). If the directory set does not exist, "Invalid directory"
will be displayed.



After setting the external storage directory to the current operation directory,
send the :MMEMory:DELete, :MMEMory:LOAD or :MMEMory:STORe command
to delete or read the file under the current directory or to save the file to the
current directory. Sending the :MMEMory:MDIRectory command will create a
folder under the current directory.

The query returns the current operation directory, for example, D:\RIGOL.
:MMEM:CDIR D:\RIGOL

/*Set the current operation directory to D:\RIGOL*/

:MMEM:CDIR?

/*Query the current operation directory and the query
returns D:\RIGOL*/

:MMEMory:DELete
:MMEMory:LOAD
:MMEMory:STORe
:MMEMory:MDIRectory

DP800 Programming Guide

2-41

RIGOL

Chapter 2 Command System

:MMEMory:DELete
Syntax
Description

:MMEMory:DELete <file_name>
Delete the specified file or empty folder under the current operation directory.

Parameter

Explanation

Example
Related
Command

Name

Type

Range

Default

<file_name>

ASCII string

Filenames of the files stored in
the current operation directory

None



This command is only applicable to external memory and is only valid when the
current directory is the external memory or a folder in the external memory.
Executing this command can delete the state file (RSF), record file (ROF), timer
file (RTF), delay file (RDF) and empty folder under the current operation
directory.



This command is only available when the current operation directory contains
the specified file or empty folder. <file_name> is the filename (the filename
uses the file type as the suffix, for example, STA.RSF) of the file to be deleted
or the name of the empty folder to be deleted.



If the file or empty folder to be deleted is not under the current operation
directory, please use the :MMEMory:CDIRectory command to modify the
current operation directory.

:MMEM:DEL STA.RSF /*Delete the STA.RSF file under the current operation
directory*/
:MMEMory:CDIRectory

:MMEMory:DISK?
Syntax
Description
Return Format
Example

2-42

:MMEMory:DISK?
Query the drive letter of the external memory available of the power supply.
The query returns the drive letter available, for example, D:\.
:MMEM:DISK?

/*Query the drive letter of the external memory available and the
query returns D:\*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:MMEMory:LOAD
Syntax
Description

:MMEMory:LOAD <file_name>
Read the specified file under the current operation directory.

Parameter

Explanation

Name

Type

Range

Default

<file_name>

ASCII string

Filenames of the files stored
in the current operation
directory

None



This command is only applicable to external memory and is only valid when the
current directory is the external memory or a folder in the external memory.
Executing this command can read the state file (RSF), timer file (RTF) and
delay file (RDF) under the current operation directory.



This command is only available when the specified file has been stored in the
current operation directory. <file_name> is the filename (the filename uses
the file type as the suffix, for example, STA.RSF) of the file to be read.



If the file to be read is not under the current operation directory, please use
the :MMEMory:CDIRectory command to modify the current operation directory.



You can also send the :RECAll:EXTErnal command to recall the instrument
state file stored in the root directory of the external memory of the instrument.

Example

:MMEM:LOAD STA.RSF

Related
Commands

:MMEMory:CDIRectory

/*Read the STA.RSF file under the current operation
directory*/

:RECAll:EXTErnal

:MMEMory:MDIRectory
Syntax
Description

:MMEMory:MDIRectory <dir_name>
Create a new folder under the current operation directory.

Parameter
Explanation

Example

Name

Type

Range

Default

<dir_name>

ASCII string

Refer to the "Explanation"

None



This command is only applicable to external memory and is only valid when the
current directory is the external memory.



<dir_name> is the name of the folder to be created. It can contain up to 9
characters, including Chinese characters, English characters or numbers (one
Chinese character is counted as two characters).



If the current directory contains a folder with the same name, the system will
display the prompt message showing that the operation fails.

:MMEM:MDIR NEW /*Create a folder with the name NEW under the current
operation directory*/

DP800 Programming Guide

2-43

RIGOL

Chapter 2 Command System

:MMEMory:STORe
Syntax
Description

:MMEMory:STORe <file_name>
Save the file with the specified filename under the current operation directory.

Parameter
Explanation

Example
Related
Command

2-44

Name

Type

Range

Default

<file_name>

ASCII string

Refer to the "Explanation"

None



This command is only applicable to external memory and is only valid when the
current directory is the external memory or a folder in the external memory.



With this command, you can save the state file (RSF), timer file (RTF) and
delay file (RDF) under the current operation directory. <file_name> is the
name of the file to be created, including the name of the file (for example,
"STA" in STA.RSF) and file type (for example, "RSF" in STA.RSF). The filename
can contain up to 17 characters, including Chinese characters, English
characters or numbers (a Chinese character is counted as two characters).



If a file with the same filename has been stored in the current operation
directory, this command is invalid (will not overwrite the original file directly).



You can also send the :STORe:EXTErnal command to store the current
instrument state to the external memory.

:MMEM:STOR STB.RSF

/*Save the current instrument state under the current
operation directory with the name STB.RSF*/

:STORe:EXTErnal

DP800 Programming Guide

Chapter 2 Command System

RIGOL

:MONItor Commands
The :MONItor commands are used to set the monitor condition and stop mode of the monitor as well as
enable or disable the monitor (the current channel). For multi-channel models, the instrument can monitor
the output states of multiple channels at the same time. You can send
the :INSTrument:NSELect, :INSTrument[:SELEct] or :INSTrument[:SELect] command to switch the current
channel and set the monitor conditions.
For DP832A/DP831A/DP822A/DP821A/DP813A/DP811A, the instrument is installed with the monitor option
when it leaves factory and users can directly use the monitor function. For
DP832/DP831/DP822/DP821/DP813/DP811, the monitor is an optional function; to use this function,
please order the corresponding option and install the option correctly (:LIC:SET).
Command List:


:MONItor:CURRent:CONDition



:MONItor:CURRent[:VALue]



:MONItor:POWER:CONDition



:MONItor:POWER[:VALue]



:MONItor[:STATe]



:MONItor:STOPway



:MONItor:VOLTage:CONDition



:MONItor:VOLTage[:VALue]

DP800 Programming Guide

2-45

RIGOL

Chapter 2 Command System

:MONItor:CURRent:CONDition
Syntax

:MONItor:CURRent:CONDition {<C|>C|NONE},{AND|OR|NONE}
:MONItor:CURRent:CONDition?

Description

Set the current monitor condition of the monitor (the current channel).
Query the current monitor condition of the monitor (the current channel).

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

{<C|>C|NONE}

Discrete

<C|>C|NONE

NONE

{AND|OR|NONE}

Discrete

AND|OR|NONE

NONE



You can set the current monitor condition to "<C" (<current), ">C" (>current)
or "NONE". "NONE" means do not monitor the current.



The actual monitor condition is the logic combination of the voltage, current
and power. The logic relations include "AND", "OR" and "NONE"; wherein,
"NONE" indicates that no logic relation is set.



You can send the :MONItor:CURRent[:VALue] command to set the current
monitor value.

The query returns the current monitor condition and logic relation separated by
comma, for example, <C,AND.
:MONI:CURR:COND <C,AND

/*Set the current monitor condition (the current
channel) to "<C,AND"*/

:MONI:CURR:COND?

/*Query the current monitor condition (the current
channel) and the query returns <C,AND*/

:MONItor:CURRent[:VALue]
:MONItor:POWER:CONDition
:MONItor:POWER[:VALue]
:MONItor:VOLTage:CONDition
:MONItor:VOLTage[:VALue]

2-46

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:MONItor:CURRent[:VALue]
Syntax

:MONItor:CURRent[:VALue] {<value>|MINimum|MAXimum}
:MONItor:CURRent[:VALue]? [MINimum|MAXimum]

Description

Set the current value of the monitor condition (the current channel).
Query the current value of the monitor condition (the current channel).

Parameter
Explanation

Return Format
Example

Related
Command

Name

Type

<value>

Real

Range

Default

Refer to the "Explanation"

For multi-channel models, the range of <value> is from 0 to the maximum current
of the current channel and the default is 0.5*rated current of the current channel;
for single-channel model, the range of <value> is from 0 to the maximum current
of the current range and the default is 0.5*rated current of range 1.
The query returns the current of the monitor condition (the current channel), for
example, 4.0000.
:MONI:CURR 4

/*Set the current value of the monitor condition (the current
channel) to 4A*/

:MONI:CURR?

/*Query the current value of the monitor condition (the current
channel) and the query returns 4.0000*/

:MONItor:CURRent:CONDition

:MONItor:POWER:CONDition
Syntax

:MONItor:POWER:CONDition {<P|>P|NONE}
:MONItor:POWER:CONDition?

Description

Set the power monitor condition of the monitor (the current channel).
Query the power monitor condition of the monitor (the current channel).

Parameter
Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

{<P|>P|NONE}

Discrete

<P|>P|NONE

NONE



You can set the power monitor condition to "<P" (<power), ">P" (>power) or
"NONE". "NONE" indicates that the instrument will not monitor the power.



The actual monitor condition is the logic combination of the voltage, current
and power.



You can send the :MONItor:POWER[:VALue] command to set the power
monitor value.

The query returns the power monitor condition, for example, <P.
:MONI:POWER:COND <P

/*Set the power monitor condition (the current
channel) to "<P"*/

:MONI:POWER:COND?

/*Query the current power monitor condition and the
query returns <P*/

:MONItor:POWER[:VALue]
:MONItor:CURRent:CONDition
:MONItor:CURRent[:VALue]
:MONItor:VOLTage:CONDition
:MONItor:VOLTage[:VALue]

DP800 Programming Guide

2-47

RIGOL

Chapter 2 Command System

:MONItor:POWER[:VALue]
Syntax

:MONItor:POWER[:VALue] {<value>|MINimum|MAXimum}
:MONItor:POWER[:VALue]? [MINimum|MAXimum]

Description

Set the power value of the monitor condition (the current channel).
Query the power value of the monitor condition (the current channel).

Parameter

Name

Type

Range

Default

<value>

Real

Refer to the "Explanation"

Explanation

For multi-channel models, the range of <value> is from 0 to the maximum power of
the current channel and the default is 0.25*rated power of the current channel; for
single-channel model, the range of <value> is from 0 to the maximum power of the
current range and the default is 0.25*rated power of range 1.

Return Format

The query returns the power of the current monitor condition (the current channel),
for example, 20.000.

Example

Related
Command

:MONI:POWER 20

/*Set the power of the monitor condition (the current
channel) to 20W*/

:MONI:POWER?

/*Query the power of the current monitor condition (the
current channel) and the query returns 20.000*/

:MONItor:POWER:CONDition

:MONItor[:STATe]
Syntax

:MONItor[:STATe] {ON|OFF}
:MONItor[:STATe]?

Description

Enable or disable the monitor (the current channel).
Query the state of the monitor (the current channel).

Parameter
Explanation

Return Format
Example

Related
Command

2-48

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF

The monitor can monitor the current output state of the instrument. When the
monitor is enabled and the channel output state meets the monitor condition set,
the instrument will turn off the output, display the corresponding prompt message
or sound the beeper according to the stop mode selected (set by
the :MONItor:STOPway command; you can select one or more stop modes).
The query returns ON or OFF.
:MONI ON

/*Enable the monitor (the current channel)*/

:MONI?

/*Query the state of the monitor (the current channel) and the query
returns ON*/

:MONItor:STOPway

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:MONItor:STOPway
Syntax

:MONItor:STOPway {OUTOFF|WARN|BEEPER|NONE},{ON|OFF}
:MONItor:STOPway?

Description

Set the stop mode of the monitor (the current channel).
Query the stop mode of the monitor (the current channel).

Parameter

Explanation

Return Format
Example

Related
Command

Name

Type

Range

Default

{OUTOFF|WARN|BEEPER}

Discrete

OUTOFF|WARN|BEEPER

None

{ON|OFF}

Bool

ON|OFF

ON

The monitor can monitor the current output state of the instrument. When the
monitor is enabled (:MONItor[:STATe]) and the channel output state meets the
monitor condition set, the instrument will turn off the output, display the
corresponding prompt message or sound the beeper according to the stop mode
selected (you can select one or more stop modes).
The query returns the on/off status of the three stop modes separated by commas,
for example, OutputOff:ON,Warn:ON,Beep:ON.
:MONI:STOP OUTOFF,ON

/*Enable the "OutpOff" stop mode*/

:MONI:STOP WARN,ON

/*Enable the "Warning" stop mode*/

:MONI:STOP BEEPER,OFF

/*Disable the "Beeper" stop mode*/

:MONI:STOP?

/*Query the current stop modes of the monitor and
the query returns
OutputOff:ON,Warn:ON,Beep:OFF*/

:MONItor[:STATe]

DP800 Programming Guide

2-49

RIGOL

Chapter 2 Command System

:MONItor:VOLTage:CONDition
Syntax

:MONItor:VOLTage:CONDition {<V|>V|NONE},{AND|OR|NONE}
:MONItor:VOLTage:CONDition?

Description

Set the voltage monitor condition of the monitor (the current channel).
Query the voltage monitor condition of the monitor (the current channel).

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

{<V|>V|NONE}

Discrete

<V|>V|NONE

NONE

{AND|OR|NONE}

Discrete

AND|OR|NONE

NONE



You can set the voltage monitor condition to "<V" (<voltage), ">V" (>voltage)
or "NONE". "NONE" means do not monitor the voltage.



The actual monitor condition is the logic combination of the voltage, current
and power.



You can send the :MONItor:VOLTage[:VALue] command to set the voltage
monitor value.

The query returns the voltage monitor condition and logic relation separated by
comma, for example, <V,AND.
:MONI:VOLT:COND <V,AND

/*Set the voltage monitor condition (the current
channel) to "<V,AND"*/

:MONI:VOLT:COND?

/*Query the current voltage monitor condition (the
current channel) and the query returns
<V,AND*/

:MONItor:CURRent:CONDition
:MONItor:CURRent[:VALue]
:MONItor:POWER:CONDition
:MONItor:POWER[:VALue]
:MONItor:VOLTage[:VALue]

2-50

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:MONItor:VOLTage[:VALue]
Syntax

:MONItor:VOLTage[:VALue] {<value>|MINimum|MAXimum}
:MONItor:VOLTage[:VALue]? [MINimum|MAXimum]

Description

Set the voltage value of the monitor condition (the current channel).
Query the voltage value of the monitor condition (the current channel).

Parameter
Explanation

Return Format
Example

Related
Command

Name

Type

<value>

Real

Range

Default

Refer to the "Explanation"

For multi-channel models, the range of <value> is from 0 to the maximum voltage
of the current channel and the default is 0.5*rated voltage of the current channel;
for single-channel model, the range of <value> is from 0 to the maximum voltage
of the current range and the default is 0.5*rated voltage of range 1.
The query returns the voltage of the current monitor condition (the current
channel), for example, 5.000.
:MONI:VOLT 5

/*Set the voltage of the monitor condition (the current channel)
to 5V*/

:MONI:VOLT?

/*Query the voltage of the current monitor condition (the
current channel) and the query returns 5.000*/

:MONItor:VOLTage:CONDition

DP800 Programming Guide

2-51

RIGOL

Chapter 2 Command System

:OUTPut Commands
The :OUTPut commands are used to enable or disable the channel output, overvoltage/overcurrent
protection functions, track function and Sense function, query the output mode of the channel as well as set
and query the related information of overvoltage/overcurrent protection. For single-channel model, you can
also select and query the current range of the channel. The range and default value of
overvoltage/overcurrent protection corresponding to each channel (multi-channel models) or range
(single-channel model) of different models are as shown in the table below.
Table 2-2 Range and default value of overvoltage/overcurrent protection of each channel (range) of
different models of DP800 series
Channel (Range)

OVP/OCP Settable Range

OVP/OCP Default Value

DP832A

CH1 (30V/3A)
CH2 (30V/3A)
CH3 (5V/3A)

1mV to 33V/1mA to 3.3A
1mV to 33V/1mA to 3.3A
1mV to 5.5V/1mA to 3.3A

33.000V/3.300A
33.000V/3.300A
5.500V/3.300A

DP831A

CH1 (8V/5A)
CH2 (30V/2A)
CH3 (-30V/2A)

1mV to 8.8V/0.1mA to 5.5A
1mV to 33V/0.1mA to 2.2A
-1mV to -33V/0.1mA to 2.2A

8.800V/5.5000A
33.000V/2.2000A
-33.000V/2.2000A

DP822A

CH1 (20V/5A)
CH2 (5V/16A)

1mV to 22V/0.1mA to 5.5A
1mV to 5.5V/1mA to 16.8A

22.000V/5.500A
5.500V/16.800A

DP821A

CH1 (60V/1A)
CH2 (8V/10A)

1mV to 66V/0.1mA to 1.1A
1mV to 8.8V/1mA to 11A

66.000V/1.1000A
8.800V/11.000A

DP813A

Range1 (8V/20A)
Range2 (20V/10A)

1mV to 8.8V/0.1mA to 22A
1mV to 22V/0.1mA to 11A

8.800V/22.000A

DP811A

Range1 (20V/10A)
Range2 (40V/5A)

1mV to 22V/0.1mA to 11A
1mV to 44V/0.1mA to 5.5A

22.000V/11.0000A

DP832[1]

CH1 (30V/3A)
CH2 (30V/3A)
CH3 (5V/3A)

10mV to 33V/1mA to 3.3A
10mV to 33V/1mA to 3.3A
10mV to 5.5V/1mA to 3.3A

33.00V/3.300A
33.00V/3.300A
5.50V/3.300A

DP831[1]

CH1 (8V/5A)
CH2 (30V/2A)
CH3 (-30V/2A)

10mV to 8.8V/1mA to 5.5A
10mV to 33V/1mA to 2.2A
-10mV to -33V/1mA to 2.2A

8.800V/5.500A
33.00V/2.200A
-33.00V/2.200A

DP822[1]

CH1 (20V/5A)
CH2 (5V/16A)

10mV to 22V/10mA to 5.5A
10mV to 5.5V/10mA to 16.8A

22.00V/5.50A
5.50V/16.80A

DP821[1]

CH1 (60V/1A)
CH2 (8V/10A)

10mV to 66V/10mA to 1.1A
10mV to 8.8V/10mA to 11A

66.00V/1.100A
8.80V/11.00A

DP813[1]

Range1 (8V/20A)
Range2 (20V/10A)

10mV to 8.8V/10mA to 22A
10mV to 22V/10mA to 11A

8.80V/22.00A

DP811[1]

Range1 (20V/10A)
Range2 (40V/5A)

10mV to 22V/10mA to 11A
10mV to 44V/10mA to 5.5A

22.00V/11.00A

Note[1]: When DP832 (DP831, DP822, DP821, DP813, or DP811) is installed with the high resolution option, its
overvoltage/overcurrent protection settable range and default value of each channel are the same with those of
DP832A (DP831A, DP822A, DP821A, DP813A, or DP811A).

2-52

DP800 Programming Guide

RIGOL

Chapter 2 Command System

Command List:


:OUTPut:CVCC?



:OUTPut:MODE?



:OUTPut:OCP:ALAR?



:OUTPut:OCP:QUES?



:OUTPut:OCP:CLEAR



:OUTPut:OCP[:STATe]



:OUTPut:OCP:VALue



:OUTPut:OVP:ALAR?



:OUTPut:OVP:QUES?



:OUTPut:OVP:CLEAR



:OUTPut:OVP[:STATe]



:OUTPut:OVP:VALue



:OUTPut:RANGe



:OUTPut:SENSe



:OUTPut[:STATe]



:OUTPut:TIMEr



:OUTPut:TIMEr:STATe



:OUTPut:TRACk

:OUTPut:CVCC?
:OUTPut:MODE?
Syntax

:OUTPut:CVCC? [CH1|CH2|CH3]
:OUTPut:MODE? [CH1|CH2|CH3]

Description

Query the current output mode of the specified channel.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



DP800 series power supply provides three output modes, including CV
(Constant Voltage), CC (Constant Current) and UR (Unregulated). In CV mode,
the output voltage equals the voltage setting value and the output current is
determined by the load; in CC mode, the output current equals the current
setting value and the output voltage is determined by the load; UR is the
critical mode between CV and CC modes.



When [CH1|CH2|CH3] is omitted, the system queries the output mode of the
current channel.

The query returns CV, CC or UR.
:OUTP:CVCC? CH1
:OUTP:MODE? CH1

DP800 Programming Guide

/*Query the output mode of CH1 and the query returns CV*/

2-53

RIGOL

Chapter 2 Command System

:OUTPut:OCP:ALAR?
:OUTPut:OCP:QUES?
Syntax

:OUTPut:OCP:ALAR? [CH1|CH2|CH3]
:OUTPut:OCP:QUES? [CH1|CH2|CH3]

Description

Query whether OCP occurred on the specified channel.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



Overcurrent protection (OCP) refers to that the output turns off automatically
when the actual output current of the channel exceeds the overcurrent
protection value.



When [CH1|CH2|CH3] is omitted, the system queries whether OCP occurred
on the current channel.



You can send the :OUTPut:OCP:CLEAR command to clear the OCP occurred on
the specified channel.

The query returns YES or NO.
:OUTP:OCP:ALAR? CH1
:OUTP:OCP:QUES? CH1

Related
Command

2-54

/*Query whether OCP occurred on CH1 and the query
returns YES*/

:OUTPut:OCP:CLEAR

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:OUTPut:OCP:CLEAR
Syntax
Description

:OUTPut:OCP:CLEAR [CH1|CH2|CH3]
Clear the label of the overcurrent protection occurred on the specified channel.

Parameter
Explanation

Example

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



Before executing the command, make sure that the reason that causes the
OCP on the specified channel is cleared (you can decrease the output current
to be below the OCP value or increase the OCP value to be greater than the
output current).



When [CH1|CH2|CH3] is omitted, the system clears the label of the OCP
occurred on the current channel.



You can also send the [:SOURce[<n>]]:CURRent:PROTection:CLEar command
to clear the circuit and label of the OCP occured on the specified channel and
turn on the corresponding channel output.



You can send the :OUTPut:OCP:ALAR? or :OUTPut:OCP:QUES? command to
query whether OCP occurred on the specified channel.

:OUTP:OCP:QUES? CH1 /*Query whether overcurrent protection currently
occurred on CH1 and the query returns YES*/
(Operation: decrease the output current to be below the OCP value or increase the
OCP value to be greater than the output current)
:OUTP:OCP:CLEAR CH1 /*Clear the label of the overcurrent protection occurred
on CH1*/
:OUTP:OCP:QUES? CH1 /*Query whether overcurrent protection occurred on
CH1 and the query returns NO*/

Related
Commands

:OUTPut:OCP:ALAR?
:OUTPut:OCP:QUES?
[:SOURce[<n>]]:CURRent:PROTection:CLEar

DP800 Programming Guide

2-55

RIGOL

Chapter 2 Command System

:OUTPut:OCP[:STATe]
Syntax

:OUTPut:OCP[:STATe] [CH1|CH2|CH3,]{ON|OFF}
:OUTPut:OCP[:STATe]? [CH1|CH2|CH3]

Description

Enable or disable the overcurrent protection (OCP) function of the specified
channel.
Query the status of the overcurrent protection (OCP) function of the specified
channel.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None

{ON|OFF}

Bool

ON|OFF

OFF



When the overcurrent protection function is enabled, the output will turn off
automatically when the output current exceeds the overcurrent protection
value currently set (:OUTPut:OCP:VALue). You can send
the :OUTPut:OCP:ALAR? or :OUTPut:OCP:QUES? command to query whether
overcurrent protection occurred on the specified channel currently.



When [CH1|CH2|CH3] is omitted, the system executes the corresponding
operation on the current channel.

The query returns ON or OFF.
:OUTP:OCP CH1,ON /*Enable the overcurrent protection function of CH1*/
:OUTP:OCP? CH1

Related
Commands

/*Query the status of the overcurrent protection function of
CH1 and the query returns ON*/

:OUTPut:OCP:ALAR?
:OUTPut:OCP:QUES?
:OUTPut:OCP:VALue

2-56

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:OUTPut:OCP:VALue
Syntax

:OUTPut:OCP:VALue [CH1|CH2|CH3,]{<value>|MINimum|MAXimum}
:OUTPut:OCP:VALue? {CH1|CH2|CH3}[,MINimum|MAXimum]
:OUTPut:OCP:VALue? [MINimum|MAXimum]

Description

Set the overcurrent protection value of the specified channel.
Query the overcurrent protection value of the specified channel.
Query the overcurrent protection value of the current channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None

<value>

Real

{CH1|CH2|CH3}

Discrete

Refer to Table 2-2
CH1|CH2|CH3

None



When the overcurrent protection function is enabled, the output will turn off
automatically when the output current exceeds the overcurrent protection
value currently set. You can send the :OUTPut:OCP:ALAR?
or :OUTPut:OCP:QUES? command to query whether overcurrent protection
occurred on the specified channel currently.



When [CH1|CH2|CH3] is omitted, the system performs the corresponding
operation on the current channel.



You can also send the [:SOURce[<n>]]:CURRent:PROTection[:LEVel]
command to set the OCP value of the specified channel.

The query returns the overcurrent protection value, for example, 5.0000.
:OUTP:OCP:VAL CH1,5

/*Set the OCP value of CH1 to 5A*/

:OUTP:OCP:VAL? CH1

/*Query the OCP value of CH1 and the query returns
5.0000*/

:OUTPut:OCP:ALAR?
:OUTPut:OCP:QUES?
[:SOURce[<n>]]:CURRent:PROTection[:LEVel]

DP800 Programming Guide

2-57

RIGOL

Chapter 2 Command System

:OUTPut:OVP:ALAR?
:OUTPut:OVP:QUES?
Syntax

:OUTPut:OVP:ALAR? [CH1|CH2|CH3]
:OUTPut:OVP:QUES? [CH1|CH2|CH3]

Description

Query whether OVP occurred on the specified channel.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



Overvoltage protection (OVP) refers to that the output turns off automatically
when the actual output voltage of the channel exceeds the OVP value.



When [CH1|CH2|CH3] is omitted, the system queries whether OVP occurred on
the current channel.



You can send the :OUTPut:OVP:CLEAR command to clear the OVP occurred on
the specified channel.

The query returns YES or NO.
:OUTP:OVP:ALAR? CH1
:OUTP:OVP:QUES? CH1

Related
Command

2-58

/*Query whether OVP occurred on CH1 and the query
returns YES*/

:OUTPut:OVP:CLEAR

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:OUTPut:OVP:CLEAR
Syntax
Description

:OUTPut:OVP:CLEAR [CH1|CH2|CH3]
Clear the label of the overvoltage protection occurred on the specified channel.

Parameter
Explanation

Example

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None



Before executing the command, make sure that the reason that causes the
OVP on the specified channel is cleared (you can decrease the output voltage
to be below the OVP value or increase the OVP value to be greater than the
output voltage).



When [CH1|CH2|CH3] is omitted, the system clears the label of the OVP
occurred on the current channel.



You can also send the [:SOURce[<n>]]:VOLTage:PROTection:CLEar command
to clear the circuit and label of the OVP occurred on the specified channel and
turn on the corresponding channel output.



You can send the :OUTPut:OVP:ALAR? or :OUTPut:OVP:QUES? command to
query whether OVP occurred on the specified channel.

:OUTP:OVP:QUES? CH1 /*Query whether overvoltage protection currently
occurred on CH1 and the query returns YES*/
(Operation: decrease the output voltage to be below the OVP value or increase the
OVP value to be greater than the output voltage)
:OUTP:OVP:CLEAR CH1 /*Clear the label of the overvoltage protection occurred
on CH1*/
:OUTP:OVP:QUES? CH1 /*Query whether OVP occurred on CH1 and the query
returns NO*/

Related
Commands

:OUTPut:OVP:ALAR?
:OUTPut:OVP:QUES?
[:SOURce[<n>]]:VOLTage:PROTection:CLEar

DP800 Programming Guide

2-59

RIGOL

Chapter 2 Command System

:OUTPut:OVP[:STATe]
Syntax

:OUTPut:OVP[:STATe] [CH1|CH2|CH3,]{ON|OFF}
:OUTPut:OVP[:STATe]? [CH1|CH2|CH3]

Description

Enable or disable the overvoltage protection (OVP) function of the specified
channel.
Query the status of the overvoltage protection (OVP) function of the specified
channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None

{ON|OFF}

Bool

ON|OFF

OFF



When the overvoltage protection function is enabled, the output will turn off
automatically when the output voltage exceeds the overvoltage protection
value currently set (:OUTPut:OVP:VALue). You can send
the :OUTPut:OVP:ALAR? or :OUTPut:OVP:QUES? command to query whether
overvoltage protection occurred on the specified channel currently.



When [CH1|CH2|CH3] is omitted, the system performs the corresponding
operation on the current channel.

The query returns ON or OFF.
:OUTP:OVP CH1,ON

/*Enable the overvoltage protection function of CH1*/

:OUTP:OVP? CH1

/*Query the status of the overvoltage protection function
of CH1 and the query returns ON*/

:OUTPut:OVP:ALAR?
:OUTPut:OVP:QUES?
:OUTPut:OVP:VALue

2-60

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:OUTPut:OVP:VALue
Syntax

:OUTPut:OVP:VALue [CH1|CH2|CH3,]{<value>|MINimum|MAXimum}
:OUTPut:OVP:VALue? {CH1|CH2|CH3}[,MINimum|MAXimum]
:OUTPut:OVP:VALue? [MINimum|MAXimum]

Description

Set the overvoltage protection (OVP) value of the specified channel.
Query the overvoltage protection (OVP) value of the specified channel.
Query the overvoltage protection (OVP) value of the current channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None

<value>

Real

{CH1|CH2|CH3}

Discrete

Refer to Table 2-2
CH1|CH2|CH3

None



When the overvoltage protection function is enabled, the output will turn off
automatically when the output voltage exceeds the overvoltage protection
value currently set. You can send the :OUTPut:OVP:ALAR?
or :OUTPut:OVP:QUES? command to query whether overvoltage protection
occurred on the specified channel currently.



When [CH1|CH2|CH3] is omitted, the system sets or queries the OVP value of
the current channel.



You can also send the [:SOURce[<n>]]:VOLTage:PROTection[:LEVel]
command to set the OVP value of the specified channel.

The query returns the overvoltage protection value, for example, 8.800.
:OUTP:OVP:VAL CH1,8.8

/*Set the overvoltage protection value of CH1 to 8.8V*/

:OUTP:OVP:VAL? CH1

/*Query the overvoltage protection value of CH1 and
the query returns 8.800*/

:OUTPut:OVP:ALAR?
:OUTPut:OVP:QUES?
:OUTPut:OVP[:STATe]
[:SOURce[<n>]]:VOLTage:PROTection[:LEVel]

DP800 Programming Guide

2-61

RIGOL

Chapter 2 Command System

:OUTPut:RANGe
Syntax

:OUTPut:RANGe {P8V|P20V|P40V|LOW|HIGH}
:OUTPut:RANGe?

Description

Select the current range of the channel.
Query the range currently selected of the channel.

Parameter
Explanation

Name

Type

Range

Default

{P8V|P20V|P40V|LOW|HIGH}

Discrete

P8V|P20V|P40V|LOW|HIGH

P20V



This command is only applicable to single-channel model
(DP813A/DP813/DP811A/DP811).



For DP813A/DP813, P8V or LOW represents Range1: 8V/20A; P20V or HIGH
represents Range2: 20V/10A.
For DP811A/DP811, P20V or LOW represents Range1: 20V/10A; P40V or HIGH
represents Range2: 40V/5A.


Return Format
Example

Related
Command

2-62

You can also send the [:SOURce[<n>]]:VOLTage:RANGe command to select the
current range.

The query returns the rated voltage and current values of the range selected, for
example, 20V/10A。
:OUTP:RANG P20V

/*Select Range1: 20V/10A as the current range*/

:OUTP:RANG?

/*Query the range currently selected and the query returns
20V/10A*/

:OUTP:RANG HIGH

/*Select Range2: 40V/5A as the current range*/

:OUTP:RANG?

/*Query the range currently selected and the query returns
40V/5A*/

[:SOURce[<n>]]:VOLTage:RANGe

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:OUTPut:SENSe
Syntax

:OUTPut:SENSe [CH1|CH2|CH3,]{ON|OFF}
:OUTPut:SENSe? [CH1|CH2|CH3]

Description

Enable or disable the Sense function of the channel.
Query the status of the Sense function of the channel.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None

{ON|OFF}

Bool

ON|OFF

OFF



In large current output, to ensure that the load can acquire accurate voltage
drop, CH2 of DP822A/DP822/DP821A/DP821 and
DP813A/DP813/DP811A/DP811 provide Sense (remote sense) working mode.
In this mode, the voltage at the load terminal instead of the output voltage of
the power supply is measured to compensate the voltage drop caused by the
load lead automatically.



This command is only applicable to the channels
(DP822A/DP822/DP821A/DP821 (CH2) and DP813A/DP813/DP811A/DP811)
that support the Sense function. For channels that do not support the Sense
function, the query returns NONE.



DP822A/DP822/DP821A/DP821/DP813A/DP813/DP811A/DP811 provides
output terminal on the front panel for the Sense working mode. Besides, the
output interface on the rear panel of DP813A/DP813/DP811A/DP811 can also
be used for the Sense working mode. But, only one output mode can be
selected at one time and the output terminal on the front panel can provide
higher precision than the output interface on the rear panel.

The query returns ON or OFF. For channels that do not support the Sense function,
the query returns NONE.
:OUTP:SENS CH1,ON

/*Enable the Sense function of the DP811A channel*/

:OUTP:SENS? CH1

/*Query the status of the Sense function of the DP811A
channel and the query returns ON*/

:OUTPut[:STATe]
Syntax

:OUTPut[:STATe] [CH1|CH2|CH3,]{ON|OFF}
:OUTPut[:STATe]? [CH1|CH2|CH3]

Description

Enable or disable the output of the specified channel.
Query the output status of the specified channel.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None

{ON|OFF}

Bool

ON|OFF

OFF



Make sure that the current setting will not affect the device connected to the
power supply before enabling the channel output.



When [CH1|CH2|CH3] is omitted, the system performs the corresponding
operation on the current channel.

The query returns ON or OFF.
:OUTP CH1,ON

DP800 Programming Guide

/*Enable the output of CH1*/
2-63

RIGOL

Chapter 2 Command System

:OUTP? CH1

/*Query the current output status of CH1 and the query returns
ON*/

:OUTPut:TIMEr
Syntax

:OUTPut:TIMEr {P8V|P30V|N30V},<secnum>,<volt>,<curr>,<time>
:OUTPut:TIMEr? {P8V|P30V|N30V}

Description

Set the specified group of timer parameters of the specified channel.
Query the first 5 groups of timer parameters (the group numbers are 0 to 4) of the
specified channel.

Parameter

Explanation

Name

Type

Range

Default

{P8V|P30V|N30V}

Discrete

P8V|P30V|N30V

None

<secnum>

Integer

0 to 2047

None

<volt>

Real

Voltage range of the
current channel

CH1/CH2: 1V
CH3: -1V

<curr>

Real

Current range of the
current channel

1A

<time>

Real

1s to 99999s

1s



<secnum> is the group number of the specified group of timer parameters.
<volt>, <curr> and <time> are the voltage, current and time of this group of
timer parameters respectively and the units are V, A and s respectively.



You can also send the :TIMEr:PARAmeter command to set or query the timer
parameters.

Return Format

The query returns a string. The format of each group of timer parameters is
"number,voltage,current,time". Multiple groups of parameters are separated by ";".

Example

:OUTP:TIME P8V,1,5,1,10 /*Set the timer parameters of group 1 of CH1 to 5V, 1A
and 10s*/
:OUTP:TIME? P8V

Related
Command

2-64

/*Query the first 5 groups of timer parameters of CH1.
The query returns
0,1.000,1.0000,1;1,5.000,1.0000,10;2,1.000,1.0000,1
;3,1.000,1.0000,1;4,1.000,1.0000,1*/

:TIMEr:PARAmeter

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:OUTPut:TIMEr:STATe
Syntax

:OUTPut:TIMEr:STATe {P8V|P30V|N30V},{ON|OFF}
:OUTPut:TIMEr:STATe? {P8V|P30V|N30V}

Description

Turn on or off the timer output function of the specified channel.
Query the state of the timer output function of the specified channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

{P8V|P30V|N30V}

Discrete

P8V|P30V|N30V

None

{ON|OFF}

Bool

ON|OFF

OFF



Turning on the timer will change the output state of the channel; therefore,
make sure that the output state change will not affect the devices connected to
the power supply before turning on the timer.



The timer output is valid when both the timer and the channel output are turned
on.



You cannot modify the timer parameters when the timer is turned on.



For multi-channel models, you can send
the :INSTrument[:SELEct], :INSTrument[:SELect] or :INSTrument:NSELect
command to switch the current channel as well as set the timer parameters of
the channel selected and turn on or off the timer.



The timer and delayer (:DELAY[:STATe]) canot be turned on at the same time.



You can also send the :TIMEr[:STATe] command to turn on or off the timer
output function.

The query returns ON or OFF.
:OUTP:TIME:STAT P8V,ON

/*Turn on the timer output function of CH1*/

:OUTP:TIME:STAT? P8V

/*Query the state of the timer output function of CH1
and the query returns ON*/

:INSTrument[:SELEct]
:INSTrument[:SELect]
:INSTrument:NSELect
:DELAY[:STATe]
:TIMEr[:STATe]

DP800 Programming Guide

2-65

RIGOL

Chapter 2 Command System

:OUTPut:TRACk
Syntax

:OUTPut:TRACk [CH1|CH2|CH3,]{ON|OFF}
:OUTPut:TRACk? [CH1|CH2|CH3]

Description

Enable or disable the track function of the specified channel.
Query the status of the track function of the specified channel.

Parameter

Explanation

Return Format
Example

2-66

Name

Type

Range

Default

[CH1|CH2|CH3]

Discrete

CH1|CH2|CH3

None

{ON|OFF}

Bool

ON|OFF

OFF



This command is only applicable to channels supporting the track function:
CH2 and CH3 of DP831A/DP831 as well as CH1 and CH2 of DP832A/DP832.



For two channels supporting the track function, when only the track function of
one of the two channels is enabled, the voltage setting value of the other
channel will change accordingly when the voltage setting value of this channel
is changed; when the track functions of both of the two channels are enabled,
the voltage setting value of the other channel will change accordingly when the
voltage setting value of any of the two channels is changed.



By default, the track function is disabled and it is usually used to provide
symmetric voltage for the calculation amplifier or other circuits.



The track function only tracks the voltage setting value and the actual output
voltage will not be affected.

The query returns ON or OFF. For channels that do not support the track function,
the query returns NONE.
:OUTP:TRAC CH2,ON

/*Enable the track function of CH2 of DP831A*/

:OUTP:TRAC? CH2

/*Query the status of the track function of CH2 of
DP831A and the query returns ON*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:PRESet Commands
The :PRESet commands are used to set channel voltage/current values and OVP/OCP values as well as
enable or disable the OVP/OCP functions, over-temperature function and track function (the track function
is only applicable to channels that support the track function: CH2 and CH3 of DP831A/DP831, CH1 and
CH2 of DP832A/DP832) of the user-defined setting. The default voltage/current values of each channel in
the user-defined setting of different models of DP800 series are as shown in the table below.
Table 2-3 Default voltage/current value of each channel in the user-defined setting of different models of
DP800 series
Channel

USER1

USER2

USER3

USER4

1.500V/0.5000A
03.300V/1.0000A
-05.000V/1.0000A

3.300V/1.0000A
04.200V/1.0000A
-04.200V/1.0000A

3.300V/1.0000A
05.000V/1.5000A
-08.000V/1.5000A

5.000V/1.0000A
12.000V/2.0000A
-12.000V/2.0000A

03.300V/1.000A
03.300V/1.000A
1.500V/1.000A

04.200V/1.000A
04.200V/1.000A
4.200V/1.000A

05.000V/2.000A
08.000V/2.000A
3.300V/1.000A

12.000V/3.000A
24.000V/3.000A
5.000V/2.000A

03.300V/1.000A
1.500V/01.000A

04.200V/1.000A
3.300V/01.000A

08.000V/1.000A
4.200V/03.000A

12.000V/5.000A
5.000V/16.000A

CH1 (60V/1A)
CH2 (8V/10A)

03.300V/1.0000A
3.300V/01.000A

04.200V/1.0000A
4.200V/01.000A

08.000V/1.0000A
5.000V/02.000A

24.000V/1.0000A
8.000V/03.000A

DP813A
CH1 (8V/20A)

03.300V/01.000A

04.200V/01.000A

08.000V/01.500A

12.000V/03.000A

DP811A
CH1 (20V/10A)

03.300V/01.0000A

04.200V/01.0000A

05.000V/02.0000A

12.000V/03.0000A

1.500V/0.500A
03.30V/1.000A
-05.00V/1.000A

3.300V/1.000A
04.20V/1.000A
-04.20V/1.000A

3.300V/1.000A
05.00V/1.500A
-08.00V/1.500A

5.000V/1.000A
12.00V/2.000A
-12.00V/2.000A

03.30V/1.000A
03.30V/1.000A
1.50V/1.000A

04.20V/1.000A
04.20V/1.000A
4.20V/1.000A

05.00V/2.000A
08.00V/2.000A
3.30V/1.000A

12.00V/3.000A
24.00V/3.000A
5.00V/2.000A

03.30V/1.00A
1.50V/01.00A

04.20V/1.00A
3.30V/01.00A

08.00V/1.00A
4.20V/03.00A

12.00V/5.00A
5.00V/16.00A

03.30V/1.000A
3.30V/01.00A

04.20V/1.000A
4.20V/01.00A

08.00V/1.000A
5.00V/02.00A

24.00V/1.000A
8.00V/03.00A

DP831A
CH1 (8V/5A)
CH2 (30V/2A)
CH3 (-30V/2A)
DP832A
CH1 (30V/3A)
CH2 (30V/3A)
CH3 (5V/3A)
DP822A
CH1 (20V/5A)
CH2 (5V/16A)
DP821A

DP831[1]
CH1 (8V/5A)
CH2 (30V/2A)
CH3 (-30V/2A)
DP832[1]
CH1 (30V/3A)
CH2 (30V/3A)
CH3 (5V/3A)
DP822[1]
CH1 (20V/5A)
CH2 (5V/16A)
DP821[1]
CH1 (60V/1A)
CH2 (8V/10A)

DP800 Programming Guide

2-67

RIGOL

Chapter 2 Command System

DP813[1]
CH1 (8V/20A)

03.30V/01.00A

04.20V/01.00A

08.00V/01.50A

12.00V/03.00A

DP811[1]
CH1 (20V/10A)

03.30V/01.00A

04.20V/01.00A

05.00V/02.00A

12.00V/03.00A

Note[1]: When DP831 (DP832, DP822, DP821, DP813, or DP811) is installed with the high resolution option, its default
voltage/current value of each channel of each user-defined setting are the same with those of DP831A (DP832A,
DP822A, DP821A, DP813A, or DP811A).

Command List:


:PRESet[:APPLy]



:PRESet:KEY



:PRESet:USER[<n>]:SET:CURRent



:PRESet:USER[<n>]:SET:DEFault



:PRESet:USER[<n>]:SET:OCP



:PRESet:USER[<n>]:SET:OTP



:PRESet:USER[<n>]:SET:OVP



:PRESet:USER[<n>]:SET:SURE



:PRESet:USER[<n>]:SET:TRACk



:PRESet:USER[<n>]:SET:VOLTage

Note: When [<n>] is omitted, the operation is performed on the user-defined setting currently selected by
default.

:PRESet[:APPLy]
Syntax
Description

Restore the instrument to the default setting or recall the specified user-defined
setting.

Explanation

Sending this command is equivalent to pressing Preset on the front panel, namely
recalling the default setting or the specified user-defined setting (depend on
the :PRESet:KEY command).

Related
Command

2-68

:PRESet[:APPLy]

:PRESet:KEY

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:PRESet:KEY
Syntax

:PRESet:KEY {DEFAULT|USER1|USER2|USER3|USER4}
:PRESet:KEY?

Description

Define the setting recalled by Preset on the front panel.
Query the setting recalled by Preset on the front panel.

Parameter

Explanation

Return Format
Example

Name

Type

Range

{DEFAULT|USER1|USER2|
USER3|USER4}

Discrete

DEFAULT|USER1|USER2|
USER3|USER4

DEFAULT



DP800 supports to restore the instrument to the default setting (DEFAULT) or
recall the user-defined setting (USER1, USER2, USER3 and USER4).



After sending this command to define the setting recalled by Preset on the
front panel, sending the :PRESet[:APPLy] command or pressing Preset on the
front panel can restore the instrument to the default setting or recall the
specified user-defined setting.



When user-defined setting is selected, you can use the :PRESet:USER:SET
series commands to set the parameters of the user-defined setting currently
selected.

The query returns DEFAULT, USER1, USER2, USER3 or USER4.
:PRES:KEY USER1 /*Define the setting recalled by Preset on the front panel to
the first group of user-defined setting*/
:PRES:KEY?

Related
Command

Default

/*Query the setting recalled by Preset on the front panel and
the query returns USER1*/

:PRESet[:APPLy]

DP800 Programming Guide

2-69

RIGOL

Chapter 2 Command System

:PRESet:USER[<n>]:SET:CURRent
Syntax

:PRESet:USER[<n>]:SET:CURRent {<current>|MINimum|MAXimum}
:PRESet:USER[<n>]:SET:CURRent? [MINimum|MAXimum]

Description

Set the current value of the current channel in the specified user-defined setting.
Query the current value of the current channel in the specified user-defined setting.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[<n>]

Discrete

1|2|3|4

None

<current>

Real

Current range of the current channel

Refer to Table 2-3



When [<n>] is 1, 2, 3 or 4, the system sets the related parameters of the first,
second, third or fourth group of user-defined setting respectively. When [<n>]
is omitted, the system sets the parameters of the user-defined setting currently
selected by default.



For the current range of the current channel, please refer to Table 2-1.



By default, this command sets the parameter of the channel currently selected.
For multi-channel models, if you want to set the corresponding parameters of
other channels, please use the :INSTrument:NSELect, :INSTrument[:SELEct]
or :INSTrument[:SELect] command to set the desired channel as the current
channel.



You can send the :PRESet:USER[<n>]:SET:DEFault command to restore the
parameters of the specified user-defined setting to the default values.

The query returns the current value, for example, 1.5000.
:PRES:USER1:SET:CURR 1.5 /*Set the current of the current channel in the first
group of user-defined setting to 1.5A*/
:PRES:USER1:SET:CURR?

Related
Commands

/*Query the current of the current channel in the first
group of user-defined setting and the query returns
1.5000*/

:INSTrument:NSELect
:INSTrument[:SELEct]
:INSTrument[:SELect]
:PRESet:USER[<n>]:SET:DEFault

2-70

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:PRESet:USER[<n>]:SET:DEFault
Syntax
Description

:PRESet:USER[<n>]:SET:DEFault
Restore the parameters of the specified user-defined setting to default values.

Parameter
Explanation

Name

Type

Range

Default

[<n>]

Discrete

1|2|3|4

None



For the default voltage/current values of each channel in the user-defined
settings, please refer to Table 2-3; the default OVP/OCP values are the
maximum OVP/OCP values of the current channel.



When [<n>] is 1, 2, 3 or 4, the system sets the related parameters of the first,
second, third or fourth group of user-defined setting respectively. When [<n>]
is omitted, the system sets the parameters of the user-defined setting currently
selected by default.

DP800 Programming Guide

2-71

RIGOL

Chapter 2 Command System

:PRESet:USER[<n>]:SET:OCP
Syntax

:PRESet:USER[<n>]:SET:OCP {ON|OFF}[,<current>|MINimum|MAXimum]
:PRESet:USER[<n>]:SET:OCP? [MINimum|MAXimum]

Description

Enable or disable the overcurrent protection (OCP) function of the current channel
in the specified user-defined setting and set the overcurrent protection value.
Query the status and value of the overcurrent protection (OCP) function of the
current channel in the specified user-defined setting.

Parameter

Explanation

Return Format

Example

Related
Commands

Name

Type

Range

Default

[<n>]

Discrete

1|2|3|4

None

{ON|OFF}

Bool

ON|OFF

OFF

<current>

Real

Refer to the "Explanation"



When [<n>] is 1, 2, 3 or 4, the system sets the related parameters of the first,
second, third or fourth group of user-defined setting respectively. When [<n>]
is omitted, the system sets the parameters of the user-defined setting currently
selected by default.



By default, this command sets the parameters of the channel currently
selected. For multi-channel models, if you want to set the parameters of other
channels, please use the :INSTrument:NSELect, :INSTrument[:SELEct]
or :INSTrument[:SELect] command to set the desired channel as the current
channel.



For multi-channel models, the range of <current> is the OCP settable range of
of the current channel and the default is the default OCP value (refer to Table
2-2) of the current channel. For DP813A, the range of <current> is from 0.1mA
to 11A and the default is 22.000A; for DP811A, the range of <current> is from
0.1mA to 5.5A and the default is 11.0000A. For DP813, the range of <current>
is from 10mA to 11A and the default is 22.00A; for DP811, the range of
<current> is from 10mA to 5.5A and the default is 11.00A.

The query returns the status and value (separated by comma) of the OCP function
of the current channel in the specified user-defined setting, for example,
ON,1.5000.
:PRES:USER1:SET:OCP ON,1.5

/*Enable the OCP function of the current channel
in the first group of user-defined setting and set
the OCP value to 1.5A*/

:PRES:USER1:SET:OCP?

/*Query the status and value of the OCP function
of the current channel in the first group of
user-defined setting and the query returns
ON,1.5000*/

:INSTrument:NSELect
:INSTrument[:SELEct]
:INSTrument[:SELect]

2-72

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:PRESet:USER[<n>]:SET:OTP
Syntax

:PRESet:USER[<n>]:SET:OTP {ON|OFF}
:PRESet:USER[<n>]:SET:OTP?

Description

Enable or disable the over-temperature protection (OTP) function of the specified
user-defined setting.
Query the status of the over-temperature protection (OTP) function of the specified
user-defined setting.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[<n>]

Discrete

1|2|3|4

None

{ON|OFF}

Bool

ON|OFF

ON

When [<n>] is 1, 2, 3 or 4, the system sets the related parameters of the first,
second, third or fourth group of user-defined setting respectively. When [<n>] is
omitted, the system sets the parameters of the user-defined setting currently
selected by default.
The query returns ON or OFF.
:PRES:USER1:SET:OTP ON

/*Enable the OTP function of the first group of the
user-defined setting*/

:PRES:USER1:SET:OTP?

/*Query the status of the OTP function of the first
group of the user-defined setting and the query
returns ON*/

DP800 Programming Guide

2-73

RIGOL

Chapter 2 Command System

:PRESet:USER[<n>]:SET:OVP
Syntax

:PRESet:USER[<n>]:SET:OVP {ON|OFF}[,<voltage>|MINimum|MAXimum]
:PRESet:USER[<n>]:SET:OVP? [MINimum|MAXimum]

Description

Enable or disable the overvoltage protection (OVP) function of the current channel
in the specified user-defined setting and set the overvoltage protection value.
Query the status and value of the overvoltage protection (OVP) function of the
current channel in the specified user-defined setting.

Parameter

Explanation

Name

Type

Range

Default

[<n>]

Discrete

1|2|3|4

None

{ON|OFF}

Bool

ON|OFF

OFF

<voltage>

Real

Refer to the "Explanation"



When [<n>] is 1, 2, 3 or 4, the system sets the related parameters of the first,
second, third or fourth group of user-defined setting respectively. When [<n>]
is omitted, the system sets the parameters of the user-defined setting currently
selected by default.



By default, this command sets the parameters of the channel currently
selected. For multi-channel models, if you want to set the parameters of other
channels, please use the :INSTrument:NSELect, :INSTrument[:SELEct]
or :INSTrument[:SELect] command to set the desired channel as the current
channel.



For multi-channel models, the range of <voltage> is the OVP settable range of
the current channel and the default is the default OVP value (refer to Table 2-2)
of the current channel. For DP813A, the range of <voltage> is from 1mV to
22V and the default is 22.000V; for DP811A, the range of <voltage> is from
1mV to 44V and the default is 22.000V. For DP813, the range of <voltage> is
from 10mV to 22V and the default is 22.00V; for DP811, the range of
<voltage> is from 10mV to 44V and the default is 22.00V.

Return Format

The query returns the status and value (separated by comma) of the OVP function
of the current channel in the specified user-defined setting, for example, ON,8.800.

Example

:PRES:USER1:SET:OVP ON,8.8 /*Enable the OVP function of the current channel
in the first group of user-defined setting and set
the OVP value to 8.8V*/
:PRES:USER1:SET:OVP?

Related
Commands

/*Query the status and value of the OVP function of
the current channel in the first group of
user-defined setting and the query returns
ON,8.800*/

:INSTrument:NSELect
:INSTrument[:SELEct]
:INSTrument[:SELect]

2-74

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:PRESet:USER[<n>]:SET:SURE
Syntax
Description

:PRESet:USER[<n>]:SET:SURE
Confirm the parameter and status settings of the specified user-defined setting.

Parameter
Explanation

Name

Type

Range

Default

[<n>]

Discrete

1|2|3|4

None



Executing this command will save the channel voltage, current, OVP and OCP
status, OVP and OCP values, channel track status as well as the OTP status of
the specified user-defined setting.



When [<n>] is 1, 2, 3 or 4, the system sets the related parameters of the first,
second, third or fourth group of user-defined setting respectively. When [<n>]
is omitted, the system sets the parameters of the user-defined setting currently
selected by default.

:PRESet:USER[<n>]:SET:TRACk
Syntax

:PRESet:USER[<n>]:SET:TRACk {ON|OFF}
:PRESet:USER[<n>]:SET:TRACk?

Description

Enable or disable the track function of the current channel in the specified
user-defined setting.
Query the status of the track function of the current channel in the specified
user-defined setting.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[<n>]

Discrete

1|2|3|4

None

{ON|OFF}

Bool

ON|OFF

OFF



This command is only applicable to channels supporting the track function:
CH2 and CH3 of DP831A/DP831 as well as CH1 and CH2 of DP832A/DP832.



When [<n>] is 1, 2, 3 or 4, the system sets the related parameters of the first,
second, third or fourth group of user-defined setting respectively. When [<n>]
is omitted, the system sets the parameters of the user-defined setting currently
selected by default.



By default, this command sets the status of the track function of the channel
currently selected. For multi-channel models, if you want to set the parameters
of other channels, please use
the :INSTrument:NSELect, :INSTrument[:SELEct] or :INSTrument[:SELect]
command to set the desired channel as the current channel.

The query returns ON or OFF. For channels that do not support the track function,
the query returns NONE.
:PRES:USER1:SET:TRAC ON

/*Enable the track function of the current channel in
the first group of user-defined setting*/

:PRES:USER1:SET:TRAC?

/*Query the status of the track function of the
current channel in the first group of user-defined
setting and the query returns ON*/

:INSTrument:NSELect
:INSTrument[:SELEct]
:INSTrument[:SELect]

DP800 Programming Guide

2-75

RIGOL

Chapter 2 Command System

:PRESet:USER[<n>]:SET:VOLTage
Syntax

:PRESet:USER[<n>]:SET:VOLTage {<voltage>|MINimum|MAXimum}
:PRESet:USER[<n>]:SET:VOLTage? [MINimum|MAXimum]

Description

Set the voltage of the current channel of the specified user-defined setting.
Query the voltage of the current channel of the specified user-defined setting.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[<n>]

Discrete

1|2|3|4

None

<voltage>

Real

Voltage range of the
current channel

Refer to Table 2-3



When [<n>] is 1, 2, 3 or 4, the system sets the related parameters of the first,
second, third or fourth group of user-defined setting respectively. When [<n>]
is omitted, the system sets the parameters of the user-defined setting currently
selected by default.



For the voltage range of the current channel, please refer to Table 2-1.



By default, this command sets the parameters of the channel currently selected.
For multi-channel models, if you want to set the parameters of other channels,
please use the :INSTrument:NSELect, :INSTrument[:SELEct]
or :INSTrument[:SELect] command to set the desired channel as the current
channel.



You can send the :PRESet:USER[<n>]:SET:DEFault command to restore the
parameters of the specified user-defined setting to the default values.

The query returns the voltage, for example, 5.000.
:PRES:USER1:SET:VOLT 5

/*Set the voltage of the current channel in the first
group of user-defined setting to 5V*/

:PRES:USER1:SET:VOLT?

/*Query the voltage of the current channel in the first
group of user-defined setting and the query returns
5.000*/

:INSTrument:NSELect
:INSTrument[:SELEct]
:INSTrument[:SELect]
:PRESet:USER[<n>]:SET:DEFault

2-76

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:RECAll Commands
Command List:


:RECAll:LOCal



:RECAll:EXTErnal

:RECAll:LOCal
Syntax
Description

:RECAll:LOCal {1|2|3|4|5|6|7|8|9|10}
Recall the instrument state file stored in the specified storage location in the internal
memory of the instrument.

Parameter
Explanation

Example
Related
Commands

Name

Type

Range

Default

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None



{1|2|3|4|5|6|7|8|9|10} represent the corresponding storage locations in the
internal memory of the instrument respectively.



You can also send the *RCL or :MEMory[:STATe]:LOAD command to recall the
instrument state file stored in the internal memory of the instrument.

:RECA:LOC 1

/*Recall the instrument state file stored in storage location 1 in the
internal memory of the instrument*/

*RCL
:MEMory[:STATe]:LOAD

:RECAll:EXTErnal
Syntax
Description

:RECAll:EXTErnal <file_name>
Recall the instrument state file stored in the root directory of the external memory of
the instrument.

Parameter

Explanation

Name

Type

Range

Default

<file_name>

ASCII string

Refer to the
"Explanation"

None



<file_name> is the specified filename and does not include the filename suffix
".RSF".



You can also send the :MMEMory:LOAD command to recall the instrument state
file stored in the current operation directory of the external memory of the
instrument.

Example

:RECA:EXTE STA

Related
Command

:MMEMory:LOAD

DP800 Programming Guide

/*Recall the instrument state file named STA.RSF in the root
directory of the external memory of the instrument*/

2-77

RIGOL

Chapter 2 Command System

:RECorder Commands
Command List:


:RECorder:DESTination?



:RECorder:MEMory



:RECorder:MMEMory



:RECorder:PERIod



:RECorder[:STATe]

:RECorder:DESTination?
Syntax

:RECorder:DESTination?

Description

Query the storage directory of the record file.

Explanation



Before enabling the recorder, use the :RECorder:MEMory
or :RECorder:MMEMory command to set the storage directory.



When the recorder is turned off, the instrument stores the record file to the
specified storage directory using the specified filename.

Return Format
Related
Commands

The query returns the current storage directory of record file, for example, C:\REC
10:RIGOL.ROF.
:RECorder:MEMory
:RECorder:MMEMory
:RECorder[:STATe]

2-78

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:RECorder:MEMory
Syntax
Description

:RECorder:MEMory {1|2|3|4|5|6|7|8|9|10},<filename>
Store the record file to the specified storage location in the internal memory with
the specified filename.

Parameter

Explanation

Example
Related
Commands

Name

Type

Range

Default

{1|2|3|4|5|6|7|
8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

10

<filename>

ASCII string

Refer to the "Explanation"

RIGOL.ROF



At most 10 record files can be stored in the DP800 internal memory.
{1|2|3|4|5|6|7|8|9|10} represents the 10 record file storage locations in the
internal memory respectively.



<filename> is the filename of the record file. Its format is <name>.ROF;
wherein, <name> is the name of the file and can be Chinese characters,
English characters or numbers (a Chinese character is counted as two
characters) with up to 9 characters; .ROF is the suffix of the record file and can
be omitted.



You cannot set the record period and storage directory when the recorder is
enabled (:RECorder[:STATe]); please set the desired storage directory before
enabling the recorder.



You can use the :RECorder:MMEMory command to store the record file to the
external memory with the specified filename or use
the :RECorder:DESTination? command to query the current storage directory.



When the recorder is turned off, the instrument stores the record file to the
specified storage directory using the specified filename.

:REC:MEM 5,TEST1

/*Store the record file to record file storage location 5 in the
internal memory with the filename "TEST1.ROF"*/

:RECorder:DESTination?
:RECorder:MMEMory
:RECorder[:STATe]

DP800 Programming Guide

2-79

RIGOL

Chapter 2 Command System

:RECorder:MMEMory
Syntax
Description

:RECorder:MMEMory <dest>
Store the record file to the specified storage directory in the external memory.

Parameter

Explanation

Name

Type

Range

Default

<dest>

ASCII string

Valid directory of the external memory

None



This command is only available when an USB storage device (D disk) is
detected.



<dest> is the specified storage directory in the external memory. Its format is
<name>.ROF; wherein, <name> is the name of the file and can be Chinese
characters, English characters or numbers (a Chinese character is counted as
two characters); .ROF is the suffix of the record file and cannot be omitted.



You cannot set the record period and storage directory when the recorder is
enabled (:RECorder[:STATe]); please set the desired storage directory before
enabling the recorder.



You can use the :RECorder:MEMory command store the record file to the
internal memory with the specified filename or use
the :RECorder:DESTination? command to query the current storage directory.



When the recorder is turned off, the instrument stores the record file to the
specified storage directory using the specified filename.

Example

:REC:MMEM D:\RA.ROF

Related
Commands

:RECorder:DESTination?

/*Store the record file to the external memory with the
filename "RA.ROF"*/

:RECorder:MEMory
:RECorder[:STATe]

:RECorder:PERIod
Syntax

:RECorder:PERIod <value>
:RECorder:PERIod?

Description

Set the record period of the recorder.
Query the current record period of the recorder.

Parameter
Explanation

Return Format
Example

Related
Command

2-80

Name

Type

Range

Default

<value>

Integer

1s to 99999s

1s



The record period refers to the time interval at which the instrument samples
and records the output of each channel when the recorder is enabled.



You cannot set the record period and storage directory when the recorder is
enabled (:RECorder[:STATe]); please set the desired storage directory before
enabling the recorder.

The query returns an integer from 1 to 99999.
:REC:PERI 5

/*Set the record period of the recorder to 5s*/

:REC:PERI?

/*Query the current record period of the recorder and the query
returns 5*/

:RECorder[:STATe]

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:RECorder[:STATe]
Syntax

:RECorder[:STATe] {ON|OFF}
:RECorder[:STATe]?

Description

Enable or disable the recorder.
Query the status of the recorder.

Parameter
Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF



When the recorder is enabled, you cannot set the record period and storage
directory. The instrument samples and records the output of each channel at
the time interval equaling the current record period.



During the recording, make sure that the output of each channel is enabled.
For the channel of which the output is disabled, the corresponding recorded
data will be 0.



When the recorder is disabled, the recording finishes and the instrument stores
the record file to the storage directory currently set.

The query returns ON or OFF.
:REC ON

/*Enable the recorder*/

:REC?

/*Query the current status of the recorder and the query returns ON*/

:RECorder:DESTination?
:RECorder:MEMory
:RECorder:MMEMory
:RECorder:PERIod

DP800 Programming Guide

2-81

RIGOL

Chapter 2 Command System

:SOURce Commands
The :SOURce commands are used to set the voltage, current, OVP and OCP values of the specified channel.
Although the :APPLy command provides the most straightforward method to program the power supply
over the remote interfaces, the :SOURce commands give you more flexibility to change individual
parameters.
Command List:


[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude]



[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate]:STEP[:INCRement]



[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude]



[:SOURce[<n>]]:CURRent:PROTection:CLEar



[:SOURce[<n>]]:CURRent:PROTection[:LEVel]



[:SOURce[<n>]]:CURRent:PROTection:STATe



[:SOURce[<n>]]:CURRent:PROTection:TRIPped?



[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]



[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate]:STEP[:INCRement]



[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude]



[:SOURce[<n>]]:VOLTage:PROTection:CLEar



[:SOURce[<n>]]:VOLTage:PROTection[:LEVel]



[:SOURce[<n>]]:VOLTage:PROTection:STATe



[:SOURce[<n>]]:VOLTage:PROTection:TRIPped?



[:SOURce[<n>]]:VOLTage:RANGe

Note: When [:SOURce[<n>]] or [<n>] is omitted, the parameter of the channel currently selected will be set by
default.

2-82

DP800 Programming Guide

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude]
Syntax

[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude]
{<current>|MINimum|MAXimum}
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude]?
[{MINimum|MAXimum}]

Description

Set the current of the specified channel.
Query the current of the specified channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

<current>

Real

Refer to Table 2-1



When [:SOURce[<n>]] or [<n>] is omitted, the command sets the
corresponding parameter of the channel currently selected by default.



When <current> is selected, the system sets the current of the specified
channel directly; when MINimum or MAXimum is selected, the system sets the
current of the specified channel to the minimum or maximum (refer to Table
2-1) within the current range of this channel (multi-channel models) or the
range currently selected of the channel (single-channel model); when UP or
DOWN is selected, the system increases or reduces the current at the step set
by the [:SOURce[<n>]]:CURRent[:LEVel][:IMMediate]:STEP[:INCRement]
command.



You can also send the :APPLy command to set the voltage and current of the
specified channel.

The query returns the current of the specified channel, for example, 1.5000.
:CURR 1.5

/*Set the current of the current channel to 1.5A*/

:CURR?

/*Query the current setting value of the current channel and the query
returns 1.5000*/

:APPLy
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate]:STEP[:INCRement]

DP800 Programming Guide

2-83

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate]:STEP[:INCRement]
Syntax

[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate]:STEP[:INCRement]
{<numeric value>|DEFault}
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate]:STEP[:INCRement]? [{DEFault}]

Description

Set the step of the current change of the specified channel.
Query the step of the current change of the specified channel.

Parameter

Explanation

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

<numeric value>

Real

0 to the maximum current
of the specified channel

Refer to the
"Explanation"



When [:SOURce[<n>]] or [<n>] is omitted, the system sets the
corresponding parameter of the channel currently selected.



<numeric value> is the step value specified. DEFault denotes the default
value. The default values of <numeric value> are as shown in the table below.
Model

Default Value of <numeric value>

DP831A

CH1/CH2/CH3: 0.0001A

DP832A/DP832[1]

CH1/CH2/CH3: 0.001A

DP822A[1]

CH1/CH2: 0.001A

DP821A

CH1: 0.0001A; CH2: 0.001A

DP813A

CH1：0.001A

DP811A

CH1: 0.0001A

DP831[1]

CH1/CH2/CH3: 0.001A

[1]

DP821

CH1: 0.001A; CH2: 0.01A

DP822[1]

CH1/CH2: 0.01A

[1]

DP813

CH1: 0.01A

DP811[1]

CH1: 0.01A

Note[1]: When DP831 (DP832, DP822, DP821, DP813, or DP811) is installed with the
high resolution option, its default step is the same with that of DP831A (DP832A,
DP822A, DP821A, DP813A, or DP811A).



Return Format
Example

Related
Command

2-84

When the parameter in the
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude] command is set
to UP or DOWN, the current will increase or decrease at the step set by this
command when this command is executed.

The query returns the step of the current change of the specified channel, for
example, 0.1000A.
:CURR:STEP 0.1

/*Set the step of the current change of the current channel to
0.1A*/

:CURR:STEP?

/*Query the step of the current change of the current channel
and the query returns 0.1000A*/

[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude]

DP800 Programming Guide

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude]
Syntax

[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude] {<current>|MIN|MAX}
[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude]? {|MIN|MAX}

Description

Set the trigger current of the specified channel.
Query the trigger current of the specified channel.

Parameter

Explanation

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

<current>

Real

0 to the maximum current
of the specified channel

0.1A



When [:SOURce[<n>]] or [<n>] is omitted, the system sets the corresponding
parameter of the channel currently selected.



When the trigger source (:TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe) is set to "IMM" (immediate trigger), the system executes
a complete trigger operation (the voltage/current of the specified channel change
to the trigger voltage/current currently set immediately) when executing
the :INITiate or :TRIGger:IN:IMMEdiate command.



When the trigger source (:TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe) is set to "BUS" (bus trigger, namely software trigger),
the system generates a trigger by executing the *TRG command after executing
the :INITiate or :TRIGger:IN:IMMEdiate command to initialize the trigger system.
Then, the power supply executes a trigger operation (the voltage/current of the
specified channel change to the trigger voltage/current currently set) after the
specified delay time (if the delay time is set, :TRIGger[:SEQuence]:DELay).



You can also send the :TRIGger:IN:CURRent command to set the trigger current
of the specified channel.

Return
Format

The query returns the trigger current of the specified channel, for example, 1.0000A.

Example

:CURR:TRIG 1

/*Set the trigger current of the current channel to 1A*/

:CURR:TRIG?

/*Query the trigger current of the current channel and the query
returns 1.0000A*/

Related
Commands

:TRIGger[:SEQuence]:SOURce
:TRIGger:IN:CHTYpe
:INITiate
:TRIGger:IN:IMMEdiate
*TRG
:TRIGger[:SEQuence]:DELay
:TRIGger:IN:CURRent

DP800 Programming Guide

2-85

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:CURRent:PROTection:CLEar
Syntax
Description

[:SOURce[<n>]]:CURRent:PROTection:CLEar
Clear the circuit and label of the OCP occurred on the specified channel and turn on
the output of the corresponding channel.

Parameter
Explanation

Example

Related
Commands

2-86

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1



You can send the [:SOURce[<n>]]:CURRent:PROTection:TRIPped? command
to query whether OCP occurred on the specified channel.



Before executing the command, make sure that the reason that causes the
OCP on the specified channel is cleared (you can decrease the output current
to be below the OCP value or increase the OCP value to be greater than the
output current); otherwise, the command is invalid. Executing this command
will clear the circuit and label of the OCP occurred on the specified channel and
turn on the output of the corresponding channel.



When [:SOURce[<n>]] or [<n>] is omitted, the system clears the circuit and
label of the OCP occurred on the current channel.



You can send the :OUTPut:OCP:CLEAR command to only clear the label of the
OCP occurred on the specified channel.

:CURR:PROT:TRIP?

/*Query whether OCP occurred on the current channel
and the query returns YES*/
(Operation: decrease the output current to be below the OCP value or increase the
OCP value to be greater than the output current)

:CURR:PROT:CLE

/*Clear the circuit and label of the OCP occurred on the
current channel*/

:CURR:PROT:TRIP?

/*Query whether OCP occurred on the current channel
and the query returns NO*/

:OUTPut:OCP:CLEAR
[:SOURce[<n>]]:CURRent:PROTection:TRIPped?

DP800 Programming Guide

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:CURRent:PROTection[:LEVel]
Syntax

[:SOURce[<n>]]:CURRent:PROTection[:LEVel] {<current>|MINimum|MAXimum}
[:SOURce[<n>]]:CURRent:PROTection[:LEVel]? [{MINimum|MAXimum}]

Description

Set the overcurrent protection (OCP) value of the specified channel.
Query the overcurrent protection (OCP) value of the specified channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

<current>

Real

Refer to Table 2-2



When the overcurrent protection function of the specified channel is enabled
([:SOURce[<n>]]:CURRent:PROTection:STATe), the output turns off
automatically when the output current exceeds the overcurrent protection
value currently set. You can send the
[:SOURce[<n>]]:CURRent:PROTection:TRIPped? command to query whether
overcurrent protection occurred on the specified channel currently.



When [:SOURce[<n>]] or [<n>] is omitted, the system sets the
corresponding parameter of the channel currently selected.



You can also send the :OUTPut:OCP:VALue command to set the OCP value of
the specified channel.

The query returns the overcurrent protection value of the specified channel, for
example, 5.0000.
:CURR:PROT 5

/*Set the OCP value of the current channel to 5A*/

:CURR:PROT?

/*Query the OCP value of the current channel and the query
returns 5.0000*/

[:SOURce[<n>]]:CURRent:PROTection:STATe
[:SOURce[<n>]]:CURRent:PROTection:TRIPped?
:OUTPut:OCP:VALue

DP800 Programming Guide

2-87

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:CURRent:PROTection:STATe
Syntax

[:SOURce[<n>]]:CURRent:PROTection:STATe {ON|OFF}
[:SOURce[<n>]]:CURRent:PROTection:STATe?

Description

Enable or disable the overcurrent protection (OCP) function of the specified
channel.
Query the status of the overcurrent protection (OCP) function of the specified
channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

{ON|OFF}

Bool

ON|OFF

OFF



When the overcurrent protection function is enabled, the output turns off
automatically when the output current exceeds the overcurrent protection
value currently set. You can send the
[:SOURce[<n>]]:CURRent:PROTection:TRIPped? command to query whether
overcurrent protection occurred on the specified channel.



When [:SOURce[<n>]] or [<n>] is omitted, the system sets the
corresponding parameter of the channel currently selected.



You can also send the :OUTPut:OCP[:STATe] command to enable or disable the
OCP function of the specified channel.



You can send the [:SOURce[<n>]]:CURRent:PROTection[:LEVel] command to
query the current OCP value of the specified channel.

The query returns ON or OFF.
:CURR:PROT:STAT ON

/*Enable the OCP function of the current channel*/

:CURR:PROT:STAT?

/*Query the status of the OCP function of the current
channel and the query returns ON*/

[:SOURce[<n>]]:CURRent:PROTection:TRIPped?
:OUTPut:OCP[:STATe]
[:SOURce[<n>]]:CURRent:PROTection[:LEVel]

2-88

DP800 Programming Guide

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:CURRent:PROTection:TRIPped?
Syntax
Description

[:SOURce[<n>]]:CURRent:PROTection:TRIPped?
Query whether OCP occurred on the specified channel.

Parameter
Explanation

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1



OCP refers to that the output turns off automatically when the actual output current
of the channel exceeds the overcurrent protection value.



When [:SOURce[<n>]] or [<n>] is omitted, the system queries whether OCP
occurred on the current channel.



You can also send the :OUTPut:OCP:ALAR? or :OUTPut:OCP:QUES? command to
query whether OCP occurred on the specified channel.



You can send the [:SOURce[<n>]]:CURRent:PROTection:CLEar command to clear
the circuit and label of the OCP occurred on the specified channel.

Return
Format

The query returns YES or NO.

Example

:CURR:PROT:TRIP?

Related
Commands

:OUTPut:OCP:ALAR?

/*Query whether OCP occurred on the current channel and the
query returns YES*/

:OUTPut:OCP:QUES?
[:SOURce[<n>]]:CURRent:PROTection:CLEar

DP800 Programming Guide

2-89

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]
Syntax

[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]
{<voltage>|MINimum|MAXimum}
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]?
[{MINimum|MAXimum}]

Description

Set the voltage of the specified channel.
Query the voltage of the specified channel.

Parameter

Explanation

Return Format
Example

Related
Commands

2-90

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

<voltage>

Real

Refer to Table 2-1



When [:SOURce[<n>]] or [<n>] is omitted, the command sets the parameter
of the channel currently selected by default.



When <voltage> is selected, the system sets the voltage of the specified
channel directly; when MINimum or MAXimum is selected, the system sets the
voltage of the specified channel to the minimum or maximum (refer to Table
2-1) within the voltage range of this channel (multi-channel models) or the
range currently selected of this channel (single-channel model); when UP or
DOWN is selected, the system increases or reduces the voltage at the step set
by the [:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate]:STEP[:INCRement]
command.



You can also send the :APPLy command to set the voltage and current of the
specified channel.

The query returns the voltage setting value of the specified channel, for example,
7.500.
:VOLT 7.5

/*Set the voltage of the current channel to 7.5V*/

:VOLT?

/*Query the voltage setting value of the current channel and the query
returns 7.500*/

:APPLy
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate]:STEP[:INCRement]

DP800 Programming Guide

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate]:STEP[:INCRement]
Syntax

[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate]:STEP[:INCRement]
{<numericvalue>|DEFault}
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate]:STEP[:INCRement]? [{DEFault}]

Description

Set the step of the voltage change of the specified channel.
Query the step of the voltage change of the specified channel.

Parameter

Explanation

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

<numeric value>

Real

0 to the maximum voltage of
the specified channel

Refer to the
"Explanation"



When [:SOURce[<n>]] or [<n>] is omitted, the system sets the
corresponding parameter of the channel currently selected.



<numeric value> is the step value specified. DEFault denotes the default
value. The default values of <numeric value> are as shown in the table below.
Model

Default Value

DP831A/DP832A/DP821A/DP822A/DP811A/DP813A
DP831[1]
DP832/DP821/DP822/DP813/DP811[1]

0.001V
CH1: 0.001V;
CH2/CH3: 0.01V
0.01V

Note[1]: When DP831 (DP832, DP822, DP821, DP813, or DP811) is installed with the

high resolution option, its default step value is the same with that of DP831A (DP832A,
DP822A, DP821A, DP813A, or DP811A).



Return Format
Example

Related
Command

When the parameter in the
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude] command is set
to UP or DOWN, the voltage will increase or decrease at the step set by this
command when this command is executed.

The query returns the step of the voltage change of the specified channel, for
example, 0.100V.
:VOLT:STEP 0.1

/*Set the step of the voltage change of the current channel to
0.1V*/

:VOLT:STEP?

/*Query the step of the voltage change of the current channel
and the query returns 0.100V*/

[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]

DP800 Programming Guide

2-91

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude]
Syntax

[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude] {<voltage>|MIN|MAX}
[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude? {MIN|MAX}

Description

Set the trigger voltage of the specified channel.
Query the trigger voltage of the specified channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

<voltage>

Real

0 to the maximum voltage of the
specified channel

0V



When [:SOURce[<n>]] or [<n>] is omitted, the system sets the
corresponding parameter of the channel currently selected.



When the trigger source (:TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe) is set to "IMM" (immediate trigger), the system
executes a complete trigger operation (the voltage/current of the specified
channel change to the trigger voltage/current currently set immediately) when
executing the :INITiate or :TRIGger:IN:IMMEdiate command.



When the trigger source (:TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe) is set to "BUS" (bus trigger, namely software trigger),
the system generates a trigger by executing the *TRG command after
executing the :INITiate or :TRIGger:IN:IMMEdiate command to initialize the
trigger system. Then, the power supply executes a trigger operation (the
voltage/current of the specified channel change to the trigger voltage/current
currently set) after the specified delay time (if the delay time is
set, :TRIGger[:SEQuence]:DELay).



You can also send the :TRIGger:IN:VOLTage command to set the trigger
voltage of the specified channel.

The query returns the trigger voltage of the specified channel, for example, 1.000V.
:VOLT:TRIG 1

/*Set the trigger voltage of the current channel is 1V*/

:VOLT:TRIG?

/*Query the trigger voltage of the current channel and the query
returns 1.000V*/

:TRIGger[:SEQuence]:SOURce
:TRIGger:IN:CHTYpe
:INITiate
:TRIGger:IN:IMMEdiate
*TRG
:TRIGger[:SEQuence]:DELay
:TRIGger:IN:VOLTage

2-92

DP800 Programming Guide

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:VOLTage:PROTection:CLEar
Syntax
Description

[:SOURce[<n>]]:VOLTage:PROTection:CLEar
Clear the circuit and label of the OVP occurred on the corresponding channel and
turn on the output of the corresponding channel.

Parameter

Explanation

Example

Related
Commands

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1



You can send the [:SOURce[<n>]]:VOLTage:PROTection:TRIPped? command
to query whether OVP occurred on the specified channel.



Before executing the command, make sure that the reason that causes the
OVP on the specified channel is cleared (you can decrease the output voltage
to be below the OVP value or increase the OVP value to be greater than the
output voltage); otherwise, the command is invalid. Executing this command
will clear the circuit and label of the OVP occurred on the specified channel and
turn on the output of the corresponding channel.



When [:SOURce[<n>]] or [<n>] is omitted, the system clears the circuit and
label of the OVP occurred on the current channel.



You can send the :OUTPut:OVP:CLEAR command to only clear the label of the
OVP occurred on the specified channel.

:VOLT:PROT:TRIP?

/*Query whether OCP occurred on the current channel
and the query returns YES*/
(Operation: decrease the output voltage to be below the OVP value or increase the
OVP value to be greater than the output voltage)
:VOLT:PROT:CLE

/*Clear the circuit and label of the OVP occurred on the
current channel*/

:VOLT:PROT:TRIP?

/*Query whether OVP occurred on the current channel
and the query returns NO*/

[:SOURce[<n>]]:VOLTage:PROTection:TRIPped?
:OUTPut:OVP:CLEAR

DP800 Programming Guide

2-93

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:VOLTage:PROTection[:LEVel]
Syntax

[:SOURce[<n>]]:VOLTage:PROTection[:LEVel] {<voltage>|MINimum|MAXimum}
[:SOURce[<n>]]:VOLTage:PROTection[:LEVel]? [{MINimum|MAXimum}]

Description

Set the overvoltage protection (OVP) value of the specified channel.
Query the overvoltage protection (OVP) value of the specified channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

<voltage>

Real

Refer to Table 2-2



When the overvoltage protection function of the specified channel is enabled
([:SOURce[<n>]]:VOLTage:PROTection:STATe), the output turns off
automatically when the output voltage exceeds the overvoltage protection limit
currently set. You can send the
[:SOURce[<n>]]:VOLTage:PROTection:TRIPped? command to query whether
overvoltage protection occurred on the specified channel currently.



When [:SOURce[<n>]] or [<n>] is omitted, the system sets the
corresponding parameter of the channel currently selected.



You can also send the :OUTPut:OVP:VALue command to set the OVP value of
the specified channel.

The query returns the overvoltage protection value of the specified channel, for
example, 8.800.
:VOLT:PROT 8.8

/*Set the OVP value of the current channel to 8.8V*/

:VOLT:PROT?

/*Query the OVP value of the current channel and the query
returns 8.800*/

[:SOURce[<n>]]:VOLTage:PROTection:STATe
[:SOURce[<n>]]:VOLTage:PROTection:TRIPped?
:OUTPut:OVP:VALue

2-94

DP800 Programming Guide

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:VOLTage:PROTection:STATe
Syntax

[:SOURce[<n>]]:VOLTage:PROTection:STATe {ON|OFF}
[:SOURce[<n>]]:VOLTage:PROTection:STATe?

Description

Enable or disable the overvoltage protection (OVP) function of the specified
channel.
Query the status of the overvoltage protection (OVP) function of the specified
channel.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1

{ON|OFF}

Bool

ON|OFF

OFF



When the overvoltage protection function of the specified channel is enabled
([:SOURce[<n>]]:VOLTage:PROTection:STATe), the output turns off
automatically when the output voltage exceeds the overvoltage protection limit
currently set. You can send the
[:SOURce[<n>]]:VOLTage:PROTection:TRIPped? command to query whether
overvoltage protection occurred on the specified channel currently.



When [:SOURce[<n>]] or [<n>] is omitted, the system sets the
corresponding parameter of the channel currently selected.



You can also send the :OUTPut:OVP[:STATe] command to enable or disable the
OVP function of the specified channel.



You can send the [:SOURce[<n>]]:VOLTage:PROTection[:LEVel] command to
query the current OVP value of the specified channel.

The query returns ON or OFF.
:VOLT:PROT:STAT ON

/*Enable the OVP function of the current channel*/

:VOLT:PROT:STAT?

/*Query the status of the OVP function of the current
channel and the query returns ON*/

[:SOURce[<n>]]:VOLTage:PROTection:STATe
[:SOURce[<n>]]:VOLTage:PROTection:TRIPped?
:OUTPut:OVP[:STATe]
[:SOURce[<n>]]:VOLTage:PROTection[:LEVel]

DP800 Programming Guide

2-95

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:VOLTage:PROTection:TRIPped?
Syntax
Description

[:SOURce[<n>]]:VOLTage:PROTection:TRIPped?
Query whether OVP occurred on the specified channel.

Parameter

Explanation

Return Format

Name

Type

Range

Default

[<n>]

Integer

1|2|3

1



OVP refers to that the output turns off automatically when the actual output
voltage of the channel exceeds the OVP value.



When [:SOURce[<n>]] or [<n>] is omitted, the system queries whether OVP
occurred on the current channel.



You can also send the :OUTPut:OVP:ALAR? or :OUTPut:OVP:QUES? command
to query whether OVP occurred on the specified channel.



You can send the [:SOURce[<n>]]:VOLTage:PROTection:CLEar command to
clear the circuit and label of the OVP occurred on the specified channel.

The query returns YES or NO.

Example

:VOLT:PROT:TRIP?

Related
Commands

:OUTPut:OVP:ALAR?

/*Query whether OVP occurred on the current channel and
the query returns YES*/

:OUTPut:OVP:QUES?
[:SOURce[<n>]]:VOLTage:PROTection:CLEar

2-96

DP800 Programming Guide

RIGOL

Chapter 2 Command System

[:SOURce[<n>]]:VOLTage:RANGe
Syntax

[:SOURce[<n>]]:VOLTage:RANGe {P8V|P20V|P40V|LOW|HIGH}
[:SOURce[<n>]]:VOLTage:RANGe?

Description

Select the range of the channel.
Query the range currently selected of the channel.

Parameter

Explanation

Name

Type

Range

Default

[<n>]

Integer

1

1

{P8V|P20V|P40V|LOW|HIGH}

Discrete

P8V|P20V|P40V|LOW|HIGH

None



This command is only applicable to single-channel model
(DP813A/DP813/DP811A/DP811). [:SOURce[<n>]] or [<n>] can be omitted.



For DP813A/813, P8V or LOW represents Range1: 8V/20A; P20V or HIGH
represents Range2: 20V/10A.
For DP811A/DP811, P20V or LOW represents Range1: 20V/10A; P40V or HIGH
represents Range2: 40V/5A.


Return Format
Example

Related
Command

You can also send the :OUTPut:RANGe command to select the current range.

The query returns the rated voltage and current of the range selected, for example,
20V/10A.
:VOLT:RANG P20V

/*Select Range1: 20V/10A as the current range*/

:VOLT:RANG?

/*Query the range currently selected and the query returns
20V/10A*/

:VOLT:RANG HIGH

/*Select Range2: 40V/5A as the current range*/

:VOLT:RANG?

/*Query the range currently selected and the query returns
40V/5A*/

:OUTPut:RANGe

DP800 Programming Guide

2-97

RIGOL

Chapter 2 Command System

:STATus Commands
Command List:


:STATus:QUEStionable:CONDition?



:STATus:QUEStionable:ENABle



:STATus:QUEStionable[:EVENt]?



:STATus:QUEStionable:INSTrument:ENABle



:STATus:QUEStionable:INSTrument[:EVENt]?



:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:COND?



:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:ENABle



:STATus:QUEStionable:INSTrument:ISUMmary[<n>][:EVENt]?

:STATus:QUEStionable:CONDition?
Syntax
Description

Query the condition register of the questionable status register.

Explanation



This command is only applicable to the single-channel models.



This command returns a decimal value corresponding to the sum of the binary
weights of all the bits in the register. For the definitions of the bits in the
questionable status register and their corresponding decimal values, refer to
Table 1-4.
For example, when the query returns 0, the power supply is turned off or in the
unregulated mode; when the query returns 1, the power supply is in CC mode;
when the query returns 2, the power supply is in CV mode; when the query
returns 3, power supply failure occurs.

Return Format
Example

2-98

:STATus:QUEStionable:CONDition?

The query returns a decimal value corresponding to the sum of the binary weights
of all the bits in the register, for example, 1.
:STAT:QUES:COND?

/*Query the condition register of the questionable status
register and the query returns 1*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:STATus:QUEStionable:ENABle
Syntax

:STATus:QUEStionable:ENABle <enable value>
:STATus:QUEStionable:ENABle?

Description

Enable the bits in the enable register of the questionable status register.
Query the bits currently enabled in the enable register of the questionable status
register.

Parameter
Explanation

Return Format

Example

Name

Type

Range

Default

<enable value>

Discrete

Refer to the "Explanation"

None



<enable value> is a decimal value corresponding to the sum of the binary
weights of the bits to be enabled in the enable register of the questionable
status register. For the definitions of the bits in the questionable status
registers of the multi-channel models and single-channel model and their
corresponding decimal values, refer to Table 1-1 and Table 1-4.
Take the single-channel model (DP811A) as an example. To enable bit0
(Voltage, CC mode) and bit4 (Overtemperature) in the enable register of the
questionable status register, set <enable value> to 17 (according to
20+24=17).



After the bits in the enable register of the questionable status register are
enabled, the system reports the states of the corresponding bits to the status
byte register.



When <enable value> is set to 0, executing this command will clear the enable
register of the questionable status register.

The query returns a decimal value corresponding to the sum of the binary weights
of the bits to be enabled in the enable register of the questionable status register,
for example, 17.
:STAT:QUES:ENAB 17

/*Enable bit0 and bit4 in the enable register of the
questionable status register*/

:STAT:QUES:ENAB?

/*Query the bits currently enabled in the enable register
of the questionable status register and the query
returns 17*/

DP800 Programming Guide

2-99

RIGOL

Chapter 2 Command System

:STATus:QUEStionable[:EVENt]?
Syntax
Description

Query the event register of the questionable status register.

Explanation



This command returns a decimal value (corresponding to the sum of the binary
weights of all the bits in the register) and clears the status of the register. For
the definitions of the bits in the questionable status register of the
multi-channel models and single-channel model and their corresponding
decimal values, refer to Table 1-1 and Table 1-4 respectively.
For example, take the single-channel model DP811A as an example. If the
instrument is in CC mode and OTP occured, the bit0 (Voltage, CC mode) and
bit4 (Overtemperature) in the event register of the questionable status register
are set and this command returns 17 (according to 20+24=17).



The bits in the event register of the questionable status register are latched
and reading the register will clear it. You can also use the *CLS command to
clear the register.

Return Format
Example
Related
Command

2-100

:STATus:QUEStionable[:EVENt]?

The query returns a decimal value corresponding to the sum of the binary weights
of all the bits in the register, for example, 17.
:STAT:QUES?

/*Query the event register of the questionable status register and
the query returns 17*/

*CLS

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:STATus:QUEStionable:INSTrument:ENABle
Syntax

:STATus:QUEStionable:INSTrument:ENABle <enable value>
:STATus:QUEStionable:INSTrument:ENABle?

Description

Enable the bits in the enable register of the channel questionable status register.
Query the bits enabled in the enable register of the channel questionable status
register.

Parameter
Explanation

Return Format

Example

Name

Type

Range

Default

<enable value>

Discrete

Refer to the "Explanation"

None



This command is only applicable to multi-channel models.



<enable value> is a decimal value corresponding to the sum of the binary
weights of the bits to be enabled in the enable register of the channel
questionable status register. For the definitions of the bits in the channel
questionable status register and their corresponding decimal values, refer to
Table 1-2.
For example, to enable bit1 (INST1 event summary, event SUMMARY bit of
CH1), bit2 (INST2 event summary, event SUMMARY bit of CH2) and bit3
(INST3 Event Summary, event SUMMARY bit of CH3) in the enable register of
the channel questionable status register, set <enable value> to 14 (according
to 21+22+23=14).



After the bits in the enable register of the channel questionable status register
are enabled, the system reports the states of the corresponding bits to the
status byte register.



When <enable value> is set to 0, executing this command will clear the enable
register of the channel questionable status register.

The query returns a decimal value corresponding to the sum of the binary weights
of the bits to be enabled in the enable register of the channel questionable status
register, for example, 14.
:STAT:QUES:INST:ENAB <14>

/*Enable bit1, bit2 and bit3 (INST(n) event
summary, event SUMMARY bit of CH(n), n is
1, 2 and 3) in the enable register of the
channel questionable status register*/

:STAT:QUES:INST:ENAB?

/* Query the bits currently enabled in the
enable register of the channel questionable
status register and the query returns 14*/

DP800 Programming Guide

2-101

RIGOL

Chapter 2 Command System

:STATus:QUEStionable:INSTrument[:EVENt]?
Syntax

:STATus:QUEStionable:INSTrument[:EVENt]?

Description

Query the event register of the channel questionable status register.

Explanation



This command is only applicable to multi-channel models.



This command returns a decimal value (corresponding to the sum of the binary
weights of all the bits in the register) and clears the status of the register. For
the definitions of the bits in the channel questionable status register and their
corresponding decimal values, refer to Table 1-2.
For example, if questionable events occur on CH1 and CH3 of the instrument,
the bit1 (INST1 event summary, event SUMMARY bit of CH1) and bit3 (INST3
Event Summary, event SUMMARY bit of CH3) in the event register of the channel
questionable status register are set and this command returns 10 (according to
21+23=10).



The bits in the event register of the channel questionable status register are
latched and reading the register will clear it. You can also use the *CLS
command to clear the register.

Return Format
Example
Related
Command

The query returns a decimal value corresponding to the sum of the binary weights of
all the bits in the register, for example, 10.
:STAT:QUES:INST?

/* Query the event register of the channel questionable
status register and the query returns 10*/

*CLS

:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:COND?
Syntax
Description

:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:COND?
Query the condition register of the specified channel questionable status SUMMARY
register.

Parameter

Explanation

Return Format
Example

2-102

Name

Type

Range

Default

[<n>]

Discrete

1|2|3

None



This command is only applicable to multi-channel models. Multi-channel
models contain multiple channel questionable status SUMMARY registers and
[<n>] represents the questionable status SUMMARY registers of CH1, CH2 and
CH3 respectively when it is 1, 2 and 3. When [<n>] is omitted, the system
queries the condition register of the questionable status SUMMARY register of
the current channel.



This command returns a decimal value corresponding to the sum of the binary
weights of all the bits in the register. For the definitions of the bits in the
channel questionable status SUMMARY register and their corresponding
decimal values, refer to Table 1-3.
For example, when the query returns 0, the power supply is turned off or in the
unregulated mode; when the query returns 1, the power supply is in CC mode;
when the query returns 2, the power supply is in CV mode; when the query
returns 3, power supply failure occurs.

The query returns a decimal value corresponding to the sum of the binary weights
of all the bits in the register, for example, 1.
:STAT:QUES:INST:ISUM1:COND?

/*Query the condition register of the CH1
questionable status SUMMARY register and
the query returns 1*/
DP800 Programming Guide

RIGOL

Chapter 2 Command System

:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:ENABle
Syntax

:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:ENABle <enable value>
:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:ENABle?

Description

Enable the bits in the enable register of the channel questionable status SUMMARY
register.
Query the bits currently enabled in the enable register of the channel questionable
status SUMMARY register.

Parameter

Explanation

Return Format

Example

Name

Type

Range

Default

[<n>]

Discrete

1|2|3

None

<enable value>

Discrete

Refer to the "Explanation"

None



This command is only applicable to multi-channel models. Multi-channel
models contain multiple channel questionable status SUMMARY registers and
[<n>] represents the questionable status SUMMARY registers of CH1, CH2 and
CH3 respectively when it is 1, 2 and 3. When [<n>] is omitted, the system
queries the enable register of the questionable status SUMMARY register of the
current channel.



<enable value> is a decimal value corresponding to the sum of the binary
weights of the bits to be enabled in the enable register of the channel
questionable status SUMMARY register. For the definitions of the bits in the
channel questionable status SUMMARY register and their corresponding
decimal values, refer to Table 1-3.
For example, to enable bit0 (Voltage, CC mode) and bit3 (OCP) in the enable
register of the channel questionable status SUMMARY register, set <enable
value> to 9 (according to 20+23=9).



After the bits in the enable register of the channel questionable status
SUMMARY register are enabled, the system reports the states of the
corresponding bits to the questionable status register.



When <enable value> is set to 0, executing this command will clear the enable
register of the channel questionable status SUMMARY register.

The query returns a decimal value corresponding to the sum of the binary weights
of the bits to be enabled in the enable register of the channel questionable status
SUMMARY register, for example, 9.
:STAT:QUES:INST:ISUM1:ENAB 9

/*Enable bit0 (Voltage, CC mode) and bit3
(OCP) in the enable register of the CH1
questionable status SUMMARY register*/

:STAT:QUES:INST:ISUM1:ENAB?

/*Query the bits enabled in the enable
register of the CH1 questionable status
SUMMARY register and the query returns
9*/

DP800 Programming Guide

2-103

RIGOL

Chapter 2 Command System

:STATus:QUEStionable:INSTrument:ISUMmary[<n>][:EVENt]?
Syntax
Description

:STATus:QUEStionable:INSTrument:ISUMmary[<n>][:EVENt]?
Query the event register of the specified channel SUMMARY questionable status
register.

Parameter

Explanation

Return Format

Example

Related
Command

2-104

Name

Type

Range

Default

[<n>]

Discrete

1|2|3

None



This command is only applicable to multi-channel models. Multi-channel
models contain multiple channel questionable status SUMMARY registers and
[<n>] represents the questionable status SUMMARY registers of CH1, CH2 and
CH3 respectively when it is 1, 2 and 3. When [<n>] is omitted, the system
queries the event register of the questionable status SUMMARY register of the
current channel.



This command returns a decimal value (corresponding to the sum of the binary
weights of all the bits in the register) and clears the status of the register. For
the definitions of the bits in the channel questionable status SUMMARY register
and their corresponding decimal values, refer to Table 1-3.
For example, if CH1 of the instrument changes from CV (constant voltage)
mode to CC (constant current) mode, the bit0 (VOLTAGE, CC mode) in the
event register of the channel questionable status SUMMARY register are set
and this command returns 1 (according to 20=1).



The bits in the event register of the channel questionable status SUMMARY
register are latched and reading the register will clear it. You can also use the
*CLS command to clear the register.

The query returns a decimal value corresponding to the sum of the binary weights
of all the bits in the event register of the channel questionable status SUMMARY
register, for example, 1.
:STAT:QUES:INST:ISUM1?

/*Query the event register of the CH1 questionable
status SUMMARY register and the query returns
1*/

*CLS

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:STORe Commands
Command List:


:STORe:LOCal



:STORe:EXTErnal

:STORe:LOCal
Syntax
Description

:STORe:LOCal {1|2|3|4|5|6|7|8|9|10},<file_name>
Store the current instrument state to the specified location in the internal memory of
the instrument with the specified filename.

Parameter

Explanation

Example

Related
Commands

Name

Type

Range

Default

{1|2|3|4|5|6|7|8|9|10}

Discrete

1|2|3|4|5|6|7|8|9|10

None

<file_name>

ASCII string

Refer to the
"Explanation"

None



{1|2|3|4|5|6|7|8|9|10} represent the corresponding storage locations in the
internal memory of the instrument respectively.



If a state file has already been stored in the specified storage location, this
command will directly save the current instrument state to the specified storage
location (overwrite the original file directly). If the state file stored in the
specified storage location is locked (refer to the :MEMory[:STATe]:LOCK
command), this command is invalid (will not overwrite the original file).



<file_name> is the specified filename (does not include the filename suffix
".RSF") and cannot exceed 9 bytes (1 Chinese character occupies 2 bytes).



You can also send the *SAV or :MEMory[:STATe]:STORe command to store the
current instrument state to the specified storage location in the internal memory
of the instrument.

:STOR:LOC 1,123

/*Store the current instrument state to storage location 1 of
state file in the internal memory of the instrument with the
filename "123.RSF"*/

*SAV
:MEMory[:STATe]:LOCK
:MEMory[:STATe]:STORe

DP800 Programming Guide

2-105

RIGOL

Chapter 2 Command System

:STORe:EXTErnal
Syntax
Description

:STORe:EXTErnal <file_name>
Store the current instrument state to the root directory of the external memory of the
instrument with the specified filename.

Parameter
Explanation

2-106

Name

Type

Range

Default

<file_name>

ASCII string

Refer to the "Explanation"

None



<file_name> is the specified filename (does not include the filename suffix
".RSF") and cannot exceed 17 bytes (1 Chinese character occupies 2 bytes).



If a file with the same filename has already been stored in the root directory of
the external memory of the instrument, this command is invalid (will not
overwrite the original file).



You can also send the :MMEMory:STORe command to store the current
instrument state to the external memory.

Example

:STOR:EXTE 123

Related
Command

:MMEMory:STORe

/*Store the current instrument state to the root directory of the
external memory of the instrument with the filename
"123.RSF"*/

DP800 Programming Guide

Chapter 2 Command System

RIGOL

:SYSTem Commands
Command List:


:SYSTem:BEEPer:IMMediate



:SYSTem:BEEPer[:STATe]



:SYSTem:BRIGhtness



:SYSTem:COMMunicate:GPIB:ADDRess



:SYSTem:COMMunicate:LAN:APPLy



:SYSTem:COMMunicate:LAN:AUTOip[:STATe]



:SYSTem:COMMunicate:LAN:DHCP[:STATe]



:SYSTem:COMMunicate:LAN:DNS



:SYSTem:COMMunicate:LAN:GATEway



:SYSTem:COMMunicate:LAN:IPADdress



:SYSTem:COMMunicate:LAN:MAC?



:SYSTem:COMMunicate:LAN:MANualip[:STATe]



:SYSTem:COMMunicate:LAN:SMASK



:SYSTem:COMMunicate:RS232:BAUD



:SYSTem:COMMunicate:RS232:DATABit



:SYSTem:COMMunicate:RS232:FLOWCrl



:SYSTem:COMMunicate:RS232:PARItybit



:SYSTem:COMMunicate:RS232:STOPBit



:SYSTem:CONTrast



:SYSTem:ERRor?



:SYSTem:KLOCk



:SYSTem:KLOCk:STATe



:SYSTem:LANGuage:TYPE



:SYSTem:LOCal



:SYSTem:LOCK



:SYSTem:ONOFFSync



:SYSTem:OTP



:SYSTem:POWEron



:SYSTem:REMote



:SYSTem:RGBBrightness



:SYSTem:RWLock



:SYSTem:SAVer



:SYSTem:SELF:TEST:BOARD?



:SYSTem:SELF:TEST:FAN?



:SYSTem:SELF:TEST:TEMP?



:SYSTem:TRACKMode

DP800 Programming Guide

2-107

RIGOL



Chapter 2 Command System

:SYSTem:VERSion?

:SYSTem:BEEPer:IMMediate
Syntax
Description

:SYSTem:BEEPer:IMMediate
Send this command and the beeper immediately sounds.

:SYSTem:BEEPer[:STATe]
Syntax

:SYSTem:BEEPer[:STATe] {ON|OFF}
:SYSTem:BEEPer[:STATe]?

Description

Enable or disable the beeper.
Query the status of the beeper.

Parameter
Explanation
Return Format
Example

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

ON

When the beeper is enabled, the instrument generates prompt sound when error
occurs during front panel operation or remote operation.
The query returns ON or OFF.
:SYST:BEEP ON /*Enable the beeper*/
:SYST:BEEP?

/*Query the status of the beeper and the query returns ON*/

:SYSTem:BRIGhtness
Syntax

:SYSTem:BRIGhtness {<brightness>|MINimum|MAXimum}
:SYSTem:BRIGhtness? [{MINimum|MAXimum}]

Description

Set the brightness of the screen.
Query the brightness of the screen.

Parameter

Return Format
Example

2-108

Name

Type

Range

Default

<brightness>

Integer

1 to 100

50 (factory setting)

The query returns an integer, for example, 60.
:SYST:BRIG 60

/*Set the brightness of the screen to 60%*/

:SYST:BRIG?

/*Query the brightness of the screen and the query returns 60*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:GPIB:ADDRess
Syntax

:SYSTem:COMMunicate:GPIB:ADDRess <gpibaddress>
:SYSTem:COMMunicate:GPIB:ADDRess?

Description

Set the GPIB address.
Query the current GPIB address.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

<gpibaddress>

Integer

0 to 30

2

Before using the GPIB interface, extend a GPIB interface using the USB-GPIB
interface converter; then, connect the instrument and PC using GPIB cable and set
the GPIB address.
The query returns an integer, for example, 7.
:SYST:COMM:GPIB:ADDR 7 /*Set the GPIB address*/
:SYST:COMM:GPIB:ADDR?

/*Query the current GPIB address and the query
returns 7*/

:SYSTem:COMMunicate:LAN:APPLy
Syntax

:SYSTem:COMMunicate:LAN:APPLy

Description

Apply the network parameters currently set.

Explanation

The new setting will only take into effect when this command is executed after the
LAN parameters are set.

Example

:SYST:COMM:LAN:APPL

DP800 Programming Guide

/*Apply the network parameters currently set*/

2-109

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:LAN:AUTOip[:STATe]
Syntax

:SYSTem:COMMunicate:LAN:AUTOip[:STATe] {ON|OFF}
:SYSTem:COMMunicate:LAN:AUTOip[:STATe]?

Description

Enable or disable the auto IP configuration mode.
Query the status of the auto IP configuration mode.

Parameter
Explanation

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

ON



Before using the LAN interface, connect the instrument and PC or the network
of the PC using network cable.



The instrument provides three IP configuration modes: DHCP, Auto IP and
Manual IP.



In auto IP configuration mode, the instrument acquires the IP address from
169.254.0.1 to 169.254.255.254 and subnet mask 255.255.0.0 according to
the current network configuration automatically.



When all the three configuration modes are set to "On", the priority order of
parameter configuration is "DHCP", "AutoIP" and "ManualIP". Therefore, to
enable the "AutoIP" mode, the "DHCP" mode must be turned off.



The three IP configuration modes cannot all be set to "Off" at the same time.



The new setting will only take into effect when
the :SYSTem:COMMunicate:LAN:APPLy command is executed to apply the
network parameter currently set after this command is send.

Return Format

The query returns ON or OFF.

Example

:SYST:COMM:LAN:AUTO ON

/*Enable the auto IP configuration mode*/

:SYST:COMM:LAN:AUTO?

/*Query the status of the auto IP configuration mode
and the query returns ON*/

Related
Commands

:SYSTem:COMMunicate:LAN:DHCP[:STATe]
:SYSTem:COMMunicate:LAN:MANualip[:STATe]
:SYSTem:COMMunicate:LAN:APPLy

2-110

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:LAN:DHCP[:STATe]
Syntax

:SYSTem:COMMunicate:LAN:DHCP[:STATe] {ON|OFF}
:SYSTem:COMMunicate:LAN:DHCP[:STATe]?

Description

Enable or disable the DHCP mode.
Query the status of the DHCP mode.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

ON



In DHCP mode, the DHCP server in the current network assigns network
parameters (such as the IP address) for the instrument.



When all the three configuration modes are set to "On", the priority order of
parameter configuration is "DHCP", "AutoIP" and "ManualIP".



The three IP configuration modes cannot all be set to "Off" at the same time.



The new setting will only take into effect when
the :SYSTem:COMMunicate:LAN:APPLy command is executed to apply the
network parameter currently set after this command is send.

The query returns ON or OFF.
:SYST:COMM:LAN:DHCP ON /*Enable the DHCP mode*/
:SYST:COMM:LAN:DHCP?

Related
Commands

/*Query the status of the DHCP mode and the query
returns ON*/

:SYSTem:COMMunicate:LAN:AUTOip[:STATe]
:SYSTem:COMMunicate:LAN:MANualip[:STATe]
:SYSTem:COMMunicate:LAN:APPLy

DP800 Programming Guide

2-111

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:LAN:DNS
Syntax

:SYSTem:COMMunicate:LAN:DNS <dns>
:SYSTem:COMMunicate:LAN:DNS?

Description

Set the DNS (Domain Name Service) address.
Query the current DNS address.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

<dns>

ASCII string

Refer to the "Explanation"

None



This command is only available when the manual IP configuration mode is
enabled (:SYSTem:COMMunicate:LAN:MANualip[:STATe]).



The format of <dns> is nnn.nnn.nnn.nnn; the first nnn ranges from 1 to 223
(except 127), the other three range from 0 to 255.



You are recommended to ask your network administrator for an address
available.



The new setting will only take into effect when
the :SYSTem:COMMunicate:LAN:APPLy command is executed to apply the
network parameter currently set after this command is send.

The query returns the DNS address, for example, 172.16.3.2.
:SYST:COMM:LAN:DNS 172.16.3.2 /*Set the DNS address to 172.16.3.2*/
:SYST:COMM:LAN:DNS?

Related
Commands

2-112

/*Query the current DNS address and the query
returns 172.16.3.2*/

:SYSTem:COMMunicate:LAN:MANualip[:STATe]
:SYSTem:COMMunicate:LAN:APPLy

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:LAN:GATEway
Syntax

:SYSTem:COMMunicate:LAN:GATEway <gateway>
:SYSTem:COMMunicate:LAN:GATEway?

Description

Set the default gateway.
Query the current default gateway.

Parameter
Explanation

Name

Type

Range

Default

<gateway>

ASCII string

Refer to the "Explanation"

None



This command is only available when the manual IP configuration mode is
enabled (:SYSTem:COMMunicate:LAN:MANualip[:STATe]).



The format of <gateway> is nnn.nnn.nnn.nnn; the first nnn ranges from 1 to
223 (except 127), the other three range from 0 to 255.



You are recommended to ask your network administrator for a gateway
address available.



The new setting will only take into effect when
the :SYSTem:COMMunicate:LAN:APPLy command is executed to apply the
network parameter currently set after this command is send.

Return Format

The query returns the default gateway, for example, 172.16.3.1.

Example

:SYST:COMM:LAN:GATE 172.16.3.1 /*Set the default gateway*/
:SYST:COMM:LAN:GATE?

Related
Commands

/*Query the current default gateway and the
query returns 172.16.3.1*/

:SYSTem:COMMunicate:LAN:MANualip[:STATe]
:SYSTem:COMMunicate:LAN:APPLy

DP800 Programming Guide

2-113

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:LAN:IPADdress
Syntax

:SYSTem:COMMunicate:LAN:IPADdress <ip>
:SYSTem:COMMunicate:LAN:IPADdress?

Description

Set the IP address.
Query the current IP address.

Parameter
Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

<ip>

ASCII string

Refer to the "Explanation"

None



This command is only available when the manual IP configuration mode is
enabled (:SYSTem:COMMunicate:LAN:MANualip[:STATe]).



The format of <ip> is nnn.nnn.nnn.nnn; the first nnn ranges from 1 to 223
(except 127), the other three range from 0 to 255.



You are recommended to ask your network administrator for an address
available.



The new setting will only take into effect when
the :SYSTem:COMMunicate:LAN:APPLy command is executed to apply the
network parameter currently set after this command is send.

The query returns the IP address, for example, 172.16.3.128.
:SYST:COMM:LAN:IPAD 172.16.3.128

/*Set the IP address*/

:SYST:COMM:LAN:IPAD?

/*Query the current IP address and the
query returns 172.16.3.128*/

:SYSTem:COMMunicate:LAN:MANualip[:STATe]
:SYSTem:COMMunicate:LAN:APPLy

:SYSTem:COMMunicate:LAN:MAC?
Syntax
Description

Query the MAC address.

Explanation

The MAC (Media Access Control) address is also called hardware address and is
used to define the location of the network device. For a power supply, the MAC
address is unique and is usually used to recognize the instrument when assigning IP
address for the instrument. The MAC address (48 bits, namely 6 bytes) is usually
expressed in hexadecimal form, for example, 00-2A-A0-AA-E0-56.

Return Format

2-114

:SYSTem:COMMunicate:LAN:MAC?

The query returns the MAC address, for example, 00-2A-A0-AA-E0-56.

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:LAN:MANualip[:STATe]
Syntax

:SYSTem:COMMunicate:LAN:MANualip[:STATe] {ON|OFF}
:SYSTem:COMMunicate:LAN:MANualip[:STATe]?

Description

Enable or disable the manual IP configuration mode.
Query the status of the manual IP configuration mode.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

ON



In manual IP configuration mode, users define the network parameters (such
as the IP address).



When all the three configuration modes are set to "On", the priority order of
parameter configuration is "DHCP", "AutoIP" and "ManualIP". Therefore, to
enable the "ManualIP" mode, the "DHCP" mode and "AutoIP" mode must be
turned off.



The three IP configuration modes cannot all be set to "Off" at the same time.



The new setting will only take into effect when
the :SYSTem:COMMunicate:LAN:APPLy command is executed to apply the
network parameter currently set after this command is send.

The query returns ON or OFF.
:SYST:COMM:LAN:MAN ON
/*Enable the manual IP configuration mode*/
:SYST:COMM:LAN:MAN?

Related
Commands

/*Query the status of the manual IP configuration
mode and the query returns ON*/

:SYSTem:COMMunicate:LAN:AUTOip[:STATe]
:SYSTem:COMMunicate:LAN:DHCP[:STATe]
:SYSTem:COMMunicate:LAN:APPLy

DP800 Programming Guide

2-115

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:LAN:SMASK
Syntax

:SYSTem:COMMunicate:LAN:SMASK <submask>
:SYSTem:COMMunicate:LAN:SMASK?

Description

Set the subnet mask.
Query the current subnet mask.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

<submask>

ASCII
string

Refer to the
"Explanation"

None



This command is only available when the manual IP configuration mode is
enabled (:SYSTem:COMMunicate:LAN:MANualip[:STATe]).



The format of <submask> is nnn.nnn.nnn.nnn; wherein, the range of nnn is
from 0 to 255.



You are recommended to ask your network administrator for a subnet mask
available.



The new setting will only take into effect when
the :SYSTem:COMMunicate:LAN:APPLy command is executed to apply the
network parameter currently set after this command is send.

The query returns the subnet mask, for example, 255.255.255.0.
:SYST:COMM:LAN:SMASK 255.255.255.0 /*Set the subnet mask*/
:SYST:COMM:LAN:SMASK?

Related
Commands

/*Query the current subnet mask and
the query returns 255.255.255.0*/

:SYSTem:COMMunicate:LAN:MANualip[:STATe]
:SYSTem:COMMunicate:LAN:APPLy

:SYSTem:COMMunicate:RS232:BAUD
Syntax

:SYSTem:COMMunicate:RS232:BAUD
{4800|7200|9600|14400|19200|38400|57600|115200|128000}
:SYSTem:COMMunicate:RS232:BAUD?

Description

Set the baud rate of the RS232 interface and the unit is Baud.
Query the baud rate of the RS232 interface.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

{4800|7200|9600|14400|
19200|38400|57600|
115200|128000}

Discrete

4800|7200|9600|14400|
19200|38400|57600|
115200|128000

9600

Before using the RS232 interface, connect the RS232 interface to the PC or data
terminal equipment (DTE) using a RS232 cable and set the interface parameters
(such as the baud rate and parity) that match the PC and data terminal equipment.
The query returns the baud rate of the RS232 interface, for example, 19200.
:SYST:COMM:RS232:BAUD 19200 /*Set the baud rate of the RS232 interface to
19200*/
:SYST:COMM:RS232:BAUD?

2-116

/*Query the baud rate of the RS232 interface
and the query returns 19200*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:RS232:DATABit
Syntax

:SYSTem:COMMunicate:RS232:DATABit {5|6|7|8}
:SYSTem:COMMunicate:RS232:DATABit?

Description

Set the data bit of the RS232 interface.
Query the data bit of the RS232 interface.

Parameter
Return Format
Example

Name

Type

Range

Default

{5|6|7|8}

Discrete

5|6|7|8

8

The query returns 5, 6, 7 or 8.
:SYST:COMM:RS232:DATAB 8 /*Set the data bit of the RS232 interface to 8*/
:SYST:COMM:RS232:DATAB?

/*Query the data bit of the RS232 interface and the
query returns 8*/

:SYSTem:COMMunicate:RS232:FLOWCrl
Syntax

:SYSTem:COMMunicate:RS232:FLOWCrl {ON|OFF}
:SYSTem:COMMunicate:RS232:FLOWCrl?

Description

Enable or disable the hardware flow control.
Query the status of the hardware flow control.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF

This power supply uses RTS/CTS hardware flow control mode. The instrument
monitors the status of the CTS pin. When the status is "True", the instrument sends
data; when the status is "False", the instrument stops sending data. The instrument
sets the CTS pin to "False" when the input buffer area is almost full and sets the CTS
pin to "True" when the input buffer area is available again.
The query returns ON or OFF.
:SYST:COMM:RS232:FLOWC ON

/*Enable the hardware flow control*/

:SYST:COMM:RS232:FLOWC?

/*Query the status of the hardware flow control
and the query returns ON*/

:SYSTem:COMMunicate:RS232:PARItybit
Syntax

:SYSTem:COMMunicate:RS232:PARItybit {NONE|ODD|EVEN}
:SYSTem:COMMunicate:RS232:PARItybit?

Description

Set the parity mode.
Query the current parity mode.

Parameter
Explanation
Return Format
Example

Name

Type

Range

Default

{NONE|ODD|EVEN}

Discrete

NONE|ODD|EVEN

NONE

NONE, ODD and EVEN represent to set the parity mode to "None", "Odd" and
"Even" respectively.
The query returns NONE, ODD or EVEN.
:SYST:COMM:RS232:PARI ODD

/*Set the parity mode to odd*/

:SYST:COMM:RS232:PARI?

/*Query the current parity mode and the query
returns ODD*/

DP800 Programming Guide

2-117

RIGOL

Chapter 2 Command System

:SYSTem:COMMunicate:RS232:STOPBit
Syntax

:SYSTem:COMMunicate:RS232:STOPBit {1|2}
:SYSTem:COMMunicate:RS232:STOPBit?

Description

Set the stop bit.
Query the current stop bit.

Parameter
Return Format
Example

Name

Type

Range

Default

{1|2}

Discrete

1|2

1

The query returns 1 or 2.
:SYST:COMM:RS232:STOPB 2

/*Set the stop bit to 2*/

:SYST:COMM:RS232:STOPB?

/*Query the current stop bit and the query
returns 2*/

:SYSTem:CONTrast
Syntax

:SYSTem:CONTrast {<value>|MINimum|MAXimum}
:SYSTem:CONTrast? [{MINimum|MAXimum}]

Description

Set the contrast of the screen.
Query the contrast of the screen.

Parameter
Return Format
Example

Name

Type

Range

Default

<value>

Integer

1 to 100

25 (factory setting)

The query returns an integer, for example, 50.
:SYST:CONT 50

/*Set the contrast of the screen to 50%*/

:SYST:CONT?

/*Query the contrast of the screen and the query returns 50*/

:SYSTem:ERRor?
Syntax
Description

Query and clear the error messages in the error queue.

Explanation

You can also send the *RST command to restore the instrument to the factory state
(refer to "Appendix B: Factory Setting") and clear the error queue.

Return Format
Related
Command

2-118

:SYSTem:ERRor?

The query returns the number and content of the error message, for example,
-113,"Undefined header; keyword cannot be found".
*RST

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:KLOCk
Syntax

:SYSTem:KLOCk <key>,{ON|OFF|0|1}
:SYSTem:KLOCk? <key>

Description

Lock or unlock the specified key.
Query whether the specified key is locked.

Parameter

Explanation



Name

Type

Range

Default

<key>

Discrete

Refer to the
"Explanation"

None

{ON|OFF|1|0}

Bool

ON|OFF|1|0

OFF

<key> is used to specify the key and the range is as follows.
DISPLAY|STORAGE|UTILITY|HELP|TIMER|
ADVANCE|PRESET|

/*Function keys*/

CH1|CH2|CH3|

/*Channel selecting keys*/
[1]

RANGE1|RANGE2|

/*Range selecting keys*/

M1|M2|M3|M4|M5|

/*Menu keys*/

NUM0|NUM1|NUM2|NUM3|NUM4|NUM5|
NUM6|NUM7|NUM8|NUM9|DOT|

/*Numeric keys*/

LEFT|RIGHT|UP|DOWN|

/*Direction keys*/

OUTPUT1|OUTPUT2|OUTPUT3|OUTPUTALL|

/*Output on/off keys*/
/*Knob, OK, Back and dial
keys*/
/*All the keys (except the
power switch key) and knob
on the front panel*/

KNOB|OK|BACK|DIAL|
ALL

Note[1]: The parameters are applicable to the single-channel models.


Return Format
Example

ON|1 denotes locking the specified key; OFF|0 denotes unlocking the specified
key.

The query returns 1 or 0.
:SYST:KLOC CH1,ON

/*Lock the CH1 key*/

:SYST:KLOC? CH1

/*Query whether the CH1 key is locked and the query
returns 1*/

DP800 Programming Guide

2-119

RIGOL

Chapter 2 Command System

:SYSTem:KLOCk:STATe
Syntax

:SYSTem:KLOCk:STATe {ON|OFF}
:SYSTem:KLOCk:STATe?

Description

Enable or disable the remote lock.
Query the status of the remote lock.

Parameter
Explanation



Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF

When the instrument is in remote lock mode, all the keys on the front panel
(except the output switch key

of each channel,

switch key
) are not available and
user interface (
is not displayed).


Return Format
Example

Related
Command

and the power

is displayed in the status bar on the

You can also send the :SYSTem:RWLock command to enable or disable the
remote lock.

The query returns ON or OFF.
:SYST:KLOC:STAT ON

/*Enable the remote lock*/

:SYST:KLOC:STAT?

/*Query the status of the remote lock and the query
returns ON*/

:SYSTem:RWLock

:SYSTem:LANGuage:TYPE
Syntax

:SYSTem:LANGuage:TYPE {EN|CH|JAP|KOR|GER|POR|POL|CHT|RUS}
:SYSTem:LANGuage:TYPE?

Description

Set the system language.
Query the current system language type.

Parameter

Return Format
Example

Name

Type

Range

Default

{EN|CH|JAP|
KOR|GER|POR|
POL|CHT|RUS}

Discrete

EN|CH|JAP|
KOR|GER|POR|
POL|CHT|RUS

CH

The query returns English, Chinese, Japanese, Korean, German, Portuguese, Polish,
Chinese(T) or Russian.
:SYST:LANG:TYPE EN /*Set the system language to English*/
:SYST:LANG:TYPE?

2-120

/*Query the current system language type and the query
returns English*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:LOCal
Syntax

:SYSTem:LOCal

Description

The power supply returns from remote mode to local mode.

Explanation



When the instrument is in remote mode, all the front panel keys (except the
output switch key
of each channel,
, the power switch key
and
Back) are not available and
is displayed in the status bar in the user
interface; when this command is sent, the instrument returns from remote
mode to local mode, all the front panel operations are available and
in the
status bar in the user interface disappears.


Related
Command

You can send the :SYSTem:REMote command to return the power supply from
local mode to remote mode.

:SYSTem:REMote

:SYSTem:LOCK
Syntax

:SYSTem:LOCK {ON|OFF}
:SYSTem:LOCK?

Description

Lock or unlock the front panel.
Query whether the front panel is locked.

Parameter
Explanation

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF

DP800 allows users to lock the front panel keys to avoid danger caused by
mis-operation. The front panel will be locked and the instrument will work in remote
mode when this command is excuted. Besides,
and
are displayed in the
status bar in the user interface. At this point, all the front panel keys (except the
output switch key
of each channel, the power switch key
and Back) are
not available. Pressing Back on the front panel can return the instrument from
remote mode to local mode; but the front panel keys (except the output switch key
of each channel and the power switch key

Return Format
Example

) are still not available.

The query returns ON or OFF.
:SYST:LOCK ON

/*Lock the front panel*/

:SYST:LOCK?

/*Query whether the front panel is locked and the query
returns ON*/

DP800 Programming Guide

2-121

RIGOL

Chapter 2 Command System

:SYSTem:ONOFFSync
Syntax

:SYSTem:ONOFFSync {ON|OFF}
:SYSTem:ONOFFSync?

Description

Turn on or off the on/off sync function.
Query whether the on/off sync function is turned on.

Parameter

Explanation

Return Format
Example

Related
Command

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF



The specified channels of DP831A, DP831, DP832A and DP832 support the track
function; you can turn on or off the on/off sync function according to your need.



When the on/off sync function is turned on, the system will track the output
status of the channel; when the on/off sync function is turned off, the system will
not track the output status of the channel.

The query returns ON or OFF.
:SYST:ONOFFS ON

/*Turn on the on/off sync function*/

:SYST:ONOFFS?

/*Query whether the on/off sync function is turned on and
the query returns ON*/

:SYSTem:TRACKMode

:SYSTem:OTP
Syntax

:SYSTem:OTP {ON|OFF}
:SYSTem:OTP?

Description

Enable or disable the over-temperature protection (OTP) function.
Query the status of the over-temperature protection function.

Parameter
Explanation
Return Format
Example

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

ON

When the OTP function is enabled, the instrument turns off the output
automatically when the temperature inside the instrument reaches the limit.
The query returns ON or OFF.
:SYST:OTP ON /*Enable the OTP function*/
:SYST:OTP?

2-122

/*Query the status of the OTP function and the query returns ON*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:POWEron
Syntax

:SYSTem:POWEron {DEFault|LAST}
:SYSTem:POWEron?

Description

Select the instrument configuration to be used at power-on.
Query the instrument configuration to be used at power-on.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{DEFault|LAST}

Discrete

DEFault|LAST

DEFault



LAST: the instrument uses the system configuration (including all the system
parameters and states except the channel output on/off states) before the last
power-off at power-on.



DEFault: the instrument uses the factory default values at power-on (except
those parameters that will not be affected by reset; refer to "Appendix B:
Factory Setting").

The query returns DEFAULT or LAST.
:SYST:POWE LAST /*Set the instrument to use the system configuration before
the last power-off at power-on*/
:SYST:POWE?

/*Query the instrument configuration to be used at power-on
and the query returns LAST*/

:SYSTem:REMote
Syntax

:SYSTem: REMote

Description

Return the power supply from local mode to remote mode.

Explanation



When the instrument is in local mode, all the front panel keys are available and
is not displayed in the status bar in the user interface. Executing this
command will return the instrument from local mode to remote mode; at this
point, all the front panel keys (except the output switch key
channel,

, the power switch key

of each

and Back) are not available and

is displayed in the status bar in the user interface.

Related
Command

You can send the :SYSTem:LOCal command to return the power supply from
remote mode to local mode.

:SYSTem:LOCal

DP800 Programming Guide

2-123

RIGOL

Chapter 2 Command System

:SYSTem:RGBBrightness
Syntax

:SYSTem:RGBBrightness {<RGBbrightness>|MINimum|MAXimum}
:SYSTem:RGBBrightness? [{MINimum|MAXimum}]

Description

Set the RGB brightness of the screen.
Query the RGB brightness of the screen.

Parameter
Return Format
Example

Name

Type

Range

Default

<RGBbrightness>

Integer

1 to 100

50 (factory setting)

The query returns an integer from 1 to 100, for example, 47.
:SYST:RGBB 47

/*Set the RGB brightness of the screen to 47%*/

:SYST:RGBB?

/*Query the RGB brightness of the screen and the query returns
47*/

:SYSTem:RWLock
Syntax
Description

:SYSTem:RWLock[:STATe] [ON|OFF]
Turn on or off the remote lock.

Parameter
Explanation



Name

Type

Range

Default

[ON|OFF]

Bool

ON|OFF

OFF

When the instrument is in remote lock mode, all the keys on the front panel
(except the output switch key

of each channel,

switch key
) are not available and
user interface (
is not displayed).

Return Format
Example
Related
Command

2-124

and the power

is displayed in the status bar on the



When [ON|OFF] is omitted, the system turns on the remote lock.



You can also send the :SYSTem:KLOCk:STATe command to turn on or off the
remote lock.

The query returns ON or OFF.
:SYST:RWL ON

/*Turn on the remote lock*/

:SYSTem:KLOCk:STATe

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:SAVer
Syntax

:SYSTem:SAVer {ON|OFF}
:SYSTem:SAVer?

Description

Enable or disable the screen saver function.
Query the status of the screen saver function.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF

When the screen saver function is enabled, the instrument will enter the screen
saver mode automatically after standing by for 25 minutes and will enter the black
screen state after another 12.5 minutes.
The query returns ON or OFF.
:SYST:SAV ON

/*Enable the screen saver function*/

:SYST:SAV?

/*Query the status of the screen saver function and the query
returns ON*/

:SYSTem:SELF:TEST:BOARD?
Syntax
Description

:SYSTem:SELF:TEST:BOARD? [{TOP|BOTTOM}]
Query the self-test results of TopBoard and BottomBoard.

Parameter
Explanation

Return Format

Example
Related
Command

Name

Type

Range

Default

{TOP|BOTTOM}

Discrete

TOP|BOTTOM

None



TOP: query the self-test result of TopBoard; BOTTOM: query the self-test result
of BottomBoard; when the parameter {TOP|BOTTOM} is omitted, the
command queries the self-test results of TopBoard and BottomBoard at the
same time.



You can also send the *TST? command to query the self-test results of the
instrument (including the self-test results of the TopBoard, BottomBoard and
fan).

The query returns PASS or FAIL. When the parameter {TOP|BOTTOM} is omitted,
the query returns the self-test results of TopBoard and BottomBoard (separated by
comma) at the same time, for example, PASS,PASS.
:SYST:SELF:TEST:BOARD?

/*Query the self-test results of TopBoard and
BottomBoard and the query returns PASS,PASS*/

*TST?

DP800 Programming Guide

2-125

RIGOL

Chapter 2 Command System

:SYSTem:SELF:TEST:FAN?
Syntax

:SYSTem:SELF:TEST:FAN?

Description

Query the self-test result of the fan.

Explanation

You can also send the *TST? command to query the self-test results (including the
self-test results of the TopBoard, BottomBoard and fan).

Return Format
Related
Command

The query returns PASS or FAIL.
*TST?

:SYSTem:SELF:TEST:TEMP?
Syntax
Description
Return Format

:SYSTem:SELF:TEST:TEMP?
Query the self-test result of the temperature.
The query returns the temperature value and the unit is ℃, for example, 23.67.

:SYSTem:TRACKMode
Syntax

:SYSTem:TRACKMode {SYNC|INDE}
:SYSTem:TRACKMode?

Description

Set the track mode.
Query the current track mode.

Parameter

Explanation

Return Format
Example

Related
Command

2-126

Name

Type

Range

Default

{SYNC|INDE}

Discrete

SYNC|INDE

SYNC



The specified channels of DP831A, DP831, DP832A and DP832 support the track
function. You can select the desired track mode according to your need.



SYNC: synchronous mode. For two channels (the channels should be of the
same instrument) that support the track function, the track function of the other
channel will be enabled or disabled at the same time when the track function of
a channel is enabled or disabled.



INDE: independent mode. For two channels (the channels should be of the
same instrument) that support the track function, the status of the track
function of the other channel will not be affected when the track function of a
channel is enabled or disabled.

The query returns SYNC or INDE.
:SYST:TRACKM SYNC

/*Set the track mode to synchronous*/

:SYST:TRACKM?

/*Query the current track mode and the query returns
SYNC*/

:SYSTem:ONOFFSync

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:SYSTem:VERSion?
Syntax
Description
Return Format

Example

:SYSTem:VERSion?
Query the SCPI version number of the system.
The query returns a string (the SCPI version number of the system) in YYYY.V form;
wherein, YYYY represents the year of the version, V represents the edition of the
year, for example, 1999.0.
:SYST:VERS?

DP800 Programming Guide

/*Query the SCPI version number of the system and the query
returns 1999.0*/

2-127

RIGOL

Chapter 2 Command System

:TIMEr Commands
Command List:


:TIMEr:CYCLEs



:TIMEr:ENDState



:TIMEr:GROUPs



:TIMEr:PARAmeter



:TIMEr[:STATe]



:TIMEr:TEMPlet:CONSTruct



:TIMEr:TEMPlet:FALLRate



:TIMEr:TEMPlet:INTErval



:TIMEr:TEMPlet:INVErt



:TIMEr:TEMPlet:MAXValue



:TIMEr:TEMPlet:MINValue



:TIMEr:TEMPlet:OBJect



:TIMEr:TEMPlet:PERIod



:TIMEr:TEMPlet:POINTs



:TIMEr:TEMPlet:RISERate



:TIMEr:TEMPlet:SELect



:TIMEr:TEMPlet:SYMMetry



:TIMEr:TEMPlet:WIDTh

2-128

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TIMEr:CYCLEs
Syntax

:TIMEr:CYCLEs {N|I}[,<value>]
:TIMEr:CYCLEs?

Description

Set the number of cycles of the timer.
Query the current number of cycles of the timer.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

{N|I}

Discrete

N|I

N

<value>

Integer

1 to 99999

1



The number of cycles is defined as the number of times that the instrument
performs timing output according to the preset voltage/current. You can set
the number of cycles to infinite (I) or a specified value (N,<value>).



The total number of groups in timing output = the number of groups × the
number of cycles; wherein, the number of groups is set by the :TIMEr:GROUPs
command.



The power supply will terminate the timer function when the total number of
groups of outputs is finished. At this point, the state of the power supply
depends on the setting of the :TIMEr:ENDState command.

The query returns I or N,<value>, for example, N,20.
:TIME:CYCLE N,20 /*Set the number of cycles of the timer to 20*/
:TIME:CYCLE?

Related
Commands

/*Query the current number of cycles of the timer and the
query returns 20*/

:TIMEr:ENDState
:TIMEr:GROUPs

DP800 Programming Guide

2-129

RIGOL

Chapter 2 Command System

:TIMEr:ENDState
Syntax

:TIMEr:ENDState {OFF|LAST}
:TIMEr:ENDState?

Description

Set the end state of the timer.
Query the current end state of the timer.

Parameter
Explanation

Return Format
Example

Related
Commands

2-130

Name

Type

Range

Default

{OFF|LAST}

Discrete

OFF|LAST

OFF



The end state refers to the state of the instrument after it finishes outputting
the total number of groups of voltage/current values when the number of
cycles is a finite value.



OFF: the instrument turns off the output automatically after finishing the
output.



LAST: the instrument stops at the output state of the last group after finishing
the output.



The total number of groups in timing output = the number of groups × the
number of cycles; wherein, the number of groups and the number of cycles are
set by the:TIMEr:GROUPs and :TIMEr:CYCLEs commands respectively.

The query returns OFF or LAST.
:TIME:ENDS LAST

/*Set the end state of the timer to "Last"*/

:TIME:ENDS?

/*Query the current end state of the timer and the query
returns LAST*/

:TIMEr:CYCLEs
:TIMEr:GROUPs

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TIMEr:GROUPs
Syntax

:TIMEr:GROUPs <value>
:TIMEr:GROUPs?

Description

Set the number of output groups of the timer.
Query the current number of output groups of the timer.

Parameter
Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

<value>

Integer

1 to 2048

1



The number of output groups is defined as the number of groups of preset
voltage/current values that the power supply outputs in each cycle.



The total number of groups in timing output = the number of groups × the
number of cycles; wherein, the number of cycles is set by the :TIMEr:CYCLEs
command.



The power supply will terminate the timer function when the total number of
groups of outputs is finished. At this point, the state of the power supply
depends on the setting of the :TIMEr:ENDState command.

The query returns an integer from 1 to 2048, for example, 25.
:TIME:GROUP 25

/*Set the number of output groups of the timer to 25*/

:TIME:GROUP?

/*Query the current number of output groups of the timer and
the query returns 25*/

:TIMEr:CYCLEs
:TIMEr:ENDState

DP800 Programming Guide

2-131

RIGOL

Chapter 2 Command System

:TIMEr:PARAmeter
Syntax

:TIMEr:PARAmeter <secnum>,<volt>,<curr>,<time>
:TIMEr:PARAmeter? <firnum>[,<timercount>]

Description

Set the timer parameters of the specified group.
Query the timer parameters of the specified groups.

Parameter

Explanation

Return Format

Example

Name

Type

Range

Default

<secnum>

Integer

0 to 2047

None

<volt>

Real

The voltage range of the
current channel

CH1/CH2: 1V
CH3: -1V

<curr>

Real

The current range of the
current channel

1A

<time>

Real

1s to 99999s

1s

<firnum>

Integer

0 to 2047

None

<timercount>

Integer

1 to 2048

1



<secnum> is the group number of the specified group of timer parameters;
<volt>, <curr> and <time> are the voltage, current and time of the specified
group of timer parameters respectively and their units are V, A and s
respectively.



The query command queries the specified groups of timer parameters (the
numbers of the groups are continuous). <firnum> is the group number of the
first group of timer parameters to be queried. <timercount> is the total
number of groups of timer parameters to be queried.



When <timercount> is omitted, the command queries a single group of timer
parameters by default.



You can also send the :OUTPut:TIMEr command to set or query the timer
parameters.

The query returns a string starting with #.
For example, #90000000361,8.000,1.0000,10;2,6.000,1.0000,10;;
wherein, #9000000036 is the data block header;
1,8.000,1.0000,10;2,6.000,1.0000,10; are the specified timer parameters.


The data block header is used to describe the length information of the data
stream and starts with #. For example, the number "9" in #9000000036
denotes that the 9-bit data (000000036) following it is used to denote the data
stream length (36 bytes).



The format of each group of timer parameters is "number,voltage,current,time"
and multiple groups of timer parameters are separated by ";". For example,
1,8.000,1.0000,10;2,6.000,1.0000,10; denotes two groups of timer
parameters; the number of the first group of timer parameters is 1, the voltage
is 8.000V, the current is 1.0000A and the time is 10s; the number of the second
group of timer parameters is 2, the voltage is 6.000V, the current is 1.0000A
and the time is 10s.

:TIME:PARA 1,8,1,10 /*Set the timer parameters of the first group to 8V, 1A, 10s*/
:TIME:PARA 2,6,1,10 /*Set the timer parameters of the second group to 6V, 1A,
10s*/
:TIME:PARA? 1,2
/*Query two groups of timer parameters starting from the
first group and the query returns
#90000000361,8.000,1.0000,10;2,6.000,1.0000,10;*/

2-132

DP800 Programming Guide

RIGOL

Chapter 2 Command System

Related
Command

:TIMEr[:STATe]
Syntax

:OUTPut:TIMEr

:TIMEr[:STATe] {ON|OFF}
:TIMEr[:STATe]?

Description

Enable or disable the timing output function.
Query the status of the timing output function.

Parameter
Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF



Enabling the timer will change the output state of the channel; make sure that
the change in the output state will not affect the device connected to the
power supply before enabling the timer.



The timing output is valid only when both the timer and the channel output are
enabled.



When the timer is enabled, the timer parameters cannot be modified.



For multi-channel models, you can send
the :INSTrument[:SELEct], :INSTrument[:SELect] or :INSTrument:NSELect
command to switch the current channel, set the timer parameters of the
channel selected and enable or disable the timer.



The timer and delayer (:DELAY[:STATe]) cannot be enabled at the same time.



You can also send the :OUTPut:TIMEr:STATe command to turn on or off the
timer output function.

The query returns ON or OFF.
:TIME ON

/*Enable the timing output*/

:TIME?

/*Query the status of the timing output and the query returns ON*/

:INSTrument[:SELEct]
:INSTrument[:SELect]
:INSTrument:NSELect
:DELAY[:STATe]
:OUTPut:TIMEr:STATe

:TIMEr:TEMPlet:CONSTruct
Syntax
Description

:TIMEr:TEMPlet:CONSTruct
Send this command and the instrument will create the timer parameters according
to the templet currently selected and the parameters set.

DP800 Programming Guide

2-133

RIGOL

Chapter 2 Command System

:TIMEr:TEMPlet:FALLRate
Syntax

:TIMEr:TEMPlet:FALLRate <value>
:TIMEr:TEMPlet:FALLRate?

Description

Set the fall index of ExpFall.
Query the fall index of ExpFall.

Parameter
Explanation

Name

Type

Range

Default

<value>

Integer

0 to 10

0

When the templet currently selected is ExpFall (:TIMEr:TEMPlet:SELect), the timer
parameters created cannot reach the minimum due to the characteristic of the
exponential function. The range of the timer parameters created is related to the
fall index currently set. The larger the fall index is, the larger the range of the timer
parameters will be.

Return Format

The query returns an integer from 0 to 10, for example, 5.

Example

:TIME:TEMP:FALLR 5 /*Set the fall index of ExpFall to 5*/
:TIME:TEMP:FALLR?

Related
Command

/*Query the fall index of ExpFall and the query returns 5*/

:TIMEr:TEMPlet:SELect

:TIMEr:TEMPlet:INTErval
Syntax

:TIMEr:TEMPlet:INTErval <value>
:TIMEr:TEMPlet:INTErval?

Description

Set the time interval.
Query the current time interval.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

<value>

Integer

1s to 99999s

1s



The time interval refers to the time required for the instrument to output each
group of timer parameters created using the templet currently selected.



The Pulse templet does not support this parameter.

The query returns an integer from 1 to 99999, for example, 15.
:TIME:TEMP:INTE 15 /*Set the time interval to 15s*/
:TIME:TEMP:INTE?

2-134

/*Query the current time interval and the query returns 15*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TIMEr:TEMPlet:INVErt
Syntax

:TIMEr:TEMPlet:INVErt {ON|OFF}
:TIMEr:TEMPlet:INVErt?

Description

Enable or disable the invert function of the templet currently selected.
Query whether the invert function of the templet currently selected is enabled.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

{ON|OFF}

Bool

ON|OFF

OFF



When the invert function is enabled, the instrument will first turn the preset
waveform upside down and then create timer parameters.



Only the Sine, Pulse and Ramp templets support this function.

The query returns ON or OFF.
:TIME:TEMP:INVE ON

/*Enable the invert of the templet currently selected*/

:TIME:TEMP:INVE?

/*Query whether the invert of the templet currently
selected is enabled and the query returns ON*/

DP800 Programming Guide

2-135

RIGOL

Chapter 2 Command System

:TIMEr:TEMPlet:MAXValue
Syntax

:TIMEr:TEMPlet:MAXValue {<value>|MINimum|MAXimum}
:TIMEr:TEMPlet:MAXValue? [MINimum|MAXimum]

Description

Set the maximum voltage or current of the templet currently selected.
Query the maximum voltage or current of the templet currently selected.

Parameter

Explanation

Return Format
Example

Related
Commands

2-136

Name

Type

Range

Default

<value>

Real

Voltage or current range of the
channel currently selected

Refer to the
"Explanation"



This command sets the maximum voltage or current (depend on
the :TIMEr:TEMPlet:OBJect command). When the editing object is voltage, this
command sets the maximum voltage; when the editing object is current, this
command sets the maximum current.



For the DP800 series (except CH3 (-30V/2A) of DP831A/DP831), the maximum
voltage and current of all the templets are 1V and 1A. For CH3 (-30V/2A) of
DP831A/DP831, the maximum voltage and current of all the templets are -1V
and 1A.



When the Pulse templet is used, this command is used to set the high level.

The query returns the maximum voltage or current of the templet currently
selected, for example, 5.000 or 5.3000.
:TIME:TEMP:OBJ V,2

/*Set the current editing object to voltage and set the
current to 2A*/

:TIME:TEMP:MAXV 5

/*Set the maximum voltage of the templet currently
selected to 5V*/

:TIME:TEMP:MAXV?

/*Query the maximum voltage of the templet currently
selected and the query returns 5.000*/

:TIMEr:TEMPlet:OBJect
:TIMEr:TEMPlet:SELect

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TIMEr:TEMPlet:MINValue
Syntax

:TIMEr:TEMPlet:MINValue {<value>|MINimum|MAXimum}
:TIMEr:TEMPlet:MINValue? [MINimum|MAXimum]

Description

Set the minimum voltage or current of the templet currently selected.
Query the minimum voltage or current of the templet currently selected.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

<value>

Real

Voltage or current range of the
channel currently selected

0



This command sets the minimum voltage or current (depend on
the :TIMEr:TEMPlet:OBJect command). When the editing object is voltage, this
command sets the minimum voltage; when the editing object is current, this
command sets the minimum current.



When the Pulse templet is used, this command is used to set the low level.

The query returns the minimum voltage or current of the templet currently selected,
for example, 0.100 or 0.1000.
:TIME:TEMP:OBJ C,1.5

/*Set the current editing object to current and set the
voltage to 1.5V*/

:TIME:TEMP:MINV 0.1

/*Set the minimum current of the templet currently
selected to 0.1A*/

:TIME:TEMP:MINV?

/*Query the minimum current of the templet currently
selected and the query returns 0.1000*/

:TIMEr:TEMPlet:OBJect
:TIMEr:TEMPlet:SELect

DP800 Programming Guide

2-137

RIGOL

Chapter 2 Command System

:TIMEr:TEMPlet:OBJect
Syntax

:TIMEr:TEMPlet:OBJect {V|C},{<value>|MINimum|MAXimum}
:TIMEr:TEMPlet:OBJect? [MINimum|MAXimum]

Description

Select the editing object of the templet and set the current or voltage.
Query the editing object of the templet currently selected as well as the
corresponding current or voltage.

Parameter

Name

Type

Range

Default

{V|C}

Discrete

V|C

V

<value>

Real

Voltage or current range of the
channel currently selected

0

Explanation

When V is selected, the editing object is set to voltage and <value> is used to set
the current value; when C is selected, the editing object is set to current and
<value> is used to set the voltage value.

Return Format

The query returns the editing object currently selected and the corresponding
voltage or current value (separated by comma), for example, V,2.0000. Wherein, V
denotes that the editing object currently selected is voltage; 2.0000 denotes that
the current currently set is 2A.

Example

:TIME:TEMP:OBJ V,2 /*Set the editing object of the templet to voltage and set the
current to 2A*/
:TIME:TEMP:OBJ?

2-138

/*Query the editing object of the templet as well as the
corresponding current or voltage and the query returns
V,2.0000*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TIMEr:TEMPlet:PERIod
Syntax

:TIMEr:TEMPlet:PERIod <value>
:TIMEr:TEMPlet:PERIod?

Description

Set the period of Pulse.
Query the period of Pulse.

Parameter
Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

<value>

Integer

2s to 99999s

10s



The actual range of <value> is related to the positive pulse width
(:TIMEr:TEMPlet:WIDTh) currently set. The actual range available is from
(positive pulse width+1s) to 99999s.



When Pulse is selected (:TIMEr:TEMPlet:SELect), if you want to output more
than two groups of timer parameters, you can increase the number of cycles
(:TIMEr:CYCLEs) to output the timer parameters created by the Pulse templet
repeatedly.

The query returns an integer from 2 to 99999, for example, 15.
:TIME:TEMP:PERI 15

/*Set the period of Pulse to 15s*/

:TIME:TEMP:PERI?

/*Query the period of Pulse and the query returns 15*/

:TIMEr:TEMPlet:SELect
:TIMEr:TEMPlet:WIDTh
:TIMEr:CYCLEs
:TIMEr:TEMPlet:SELect

:TIMEr:TEMPlet:POINTs
Syntax

:TIMEr:TEMPlet:POINTs <value>
:TIMEr:TEMPlet:POINTs?

Description

Set the total number of points.
Query the total number of points.

Parameter
Explanation

Return Format
Example

Name

Type

Range

Default

<value>

Integer

10 to 2048

10



The total number of points refers to the number of groups of timer parameters
created using the templet currently selected.



When the total number of points (denoted by P) and the current number of
output groups (denoted by G, :TIMEr:GROUPs) are different, P groups of
parameters will be created using the templet; then, the number of output
groups will change to P automatically.



The Pulse templet does not support this parameter.

The query returns an integer from 10 to 2048, for example, 50.
:TIME:TEMP:POINT 50 /*Set the total number of points to 50*/
:TIME:TEMP:POINT?

Related
Command

/*Query the total number of points and the query returns
50*/

:TIMEr:GROUPs

DP800 Programming Guide

2-139

RIGOL

Chapter 2 Command System

:TIMEr:TEMPlet:RISERate
Syntax

:TIMEr:TEMPlet:RISERate <value>
:TIMEr:TEMPlet:RISERate?

Description

Set the rise index of ExpRise.
Query the rise index of ExpRise.

Parameter
Explanation

Return Format
Example

Related
Command

Name

Type

Range

Default

<value>

Integer

0 to 10

0

When the templet currently selected is ExpRise (:TIMEr:TEMPlet:SELect), the timer
parameters created cannot reach the maximum due to the characteristic of the
exponential function. The range of the timer parameters created is related to the
rise index currently set. The larger the rise index is, the larger the range of the timer
parameters will be.
The query returns an integer from 0 to 10, for example, 5.
:TIME:TEMP:RISER 5

/*Set the rise index of ExpRise to 5*/

:TIME:TEMP:RISER?

/*Query the rise index of ExpRise and the query returns
5*/

:TIMEr:TEMPlet:SELect

:TIMEr:TEMPlet:SELect
Syntax

:TIMEr:TEMPlet:SELect {SINE|SQUARE|RAMP|UP|DN|UPDN|RISE|FALL}
:TIMEr:TEMPlet:SELect?

Description

Select the desired templet type.
Query the templet type currently selected.

Parameter

Return Format
Example

2-140

Name

Type

Range

Default

{SINE|SQUARE|RAMP|
UP|DN|UPDN|RISE|FALL}

Discrete

SINE|SQUARE|RAMP|
UP|DN|UPDN|RISE|FALL

SINE

The query returns SINE, SQUARE, RAMP, UP, DN, UPDN, RISE or FALL.
:TIME:TEMP:SEL UP

/*Select the UP templet*/

:TIME:TEMP:SEL?

/*Query the templet type currently selected and the query
returns UP*/

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TIMEr:TEMPlet:SYMMetry
Syntax

:TIMEr:TEMPlet:SYMMetry <value>
:TIMEr:TEMPlet:SYMMetry?

Description

Set the symmetry of RAMP.
Query the symmetry of RAMP.

Parameter
Explanation
Return Format
Example

Name

Type

Range

Default

<value>

Integer

0 to 100

50

Symmetry refers to the ratio of the duration of the rising edge within a period to the
whole period.
The query returns an integer from 0 to 100, for example, 60.
:TIME:TEMP:SYMM 60

/*Set the symmetry of RAMP to 60%*/

:TIME:TEMP:SYMM?

/*Query the symmetry of RAMP and the query returns
60*/

:TIMEr:TEMPlet:WIDTh
Syntax

:TIMEr:TEMPlet:WIDTh <value>
:TIMEr:TEMPlet:WIDTh?

Description

Set the positive pulse width of Pulse.
Query the positive pulse width of Pulse.

Parameter
Explanation

Return Format
Example

Related
Command

Name

Type

Range

Default

<value>

Integer

1s to 99998s

5s



Pulse width refers to the duration of high level within a period.



The actual range available of <value> is related to the period currently set
(:TIMEr:TEMPlet:PERIod). The actual range available is from 1s to (period-1s).

The query returns an integer, for example, 14.
:TIME:TEMP:WIDT 14

/*Set the pulse width of Pulse to 14s*/

:TIME:TEMP:WIDT?

/*Query the pulse width of Pulse and the query returns
14*/

:TIMEr:TEMPlet:PERIod

DP800 Programming Guide

2-141

RIGOL

Chapter 2 Command System

:TRIGger Commands
For DP831A/DP832A/DP822A/DP821A/DP813A/DP811A, the instrument is installed with the trigger option
when it leaves factory and users can directly use the trigger function. For
DP831/DP832/DP822/DP821/DP813/DP811, the trigger is an optional function; to use this function, please
order the corresponding option and install the option correctly (:LIC:SET).
Command List:


:TRIGger:IN:CHTYpe



:TRIGger:IN:CURRent



:TRIGger:IN[:ENABle]



:TRIGger:IN:IMMEdiate



:TRIGger:IN:RESPonse



:TRIGger:IN:SENSitivity



:TRIGger:IN:SOURce



:TRIGger:IN:TYPE



:TRIGger:IN:VOLTage



:TRIGger:OUT:CONDition



:TRIGger:OUT:DUTY



:TRIGger:OUT[:ENABle]



:TRIGger:OUT:PERIod



:TRIGger:OUT:POLArity



:TRIGger:OUT:SIGNal



:TRIGger:OUT:SOURce



:TRIGger[:SEQuence]:DELay



:TRIGger[:SEQuence]:SOURce

2-142

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TRIGger:IN:CHTYpe
Syntax

:TRIGger:IN:CHTYpe {BUS|IMM}
:TRIGger:IN:CHTYpe?

Description

Select the trigger source type.
Query the trigger source type currently selected.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

{BUS|IMM}

Discrete

BUS|IMM

BUS



The trigger source types include BUS (bus trigger) and IMM (immediate trigger).
For the bus trigger (BUS; also called software trigger), the power supply
receives trigger from the bus; namely, the power supply receives trigger via
software. For immediate trigger (IMM), the power supply receives immediate
trigger from the remote interface.



When the trigger source type is "IMM" (immediate trigger), the power supply
will execute a complete trigger operation (the voltage/current of the specified
channel changes to the trigger voltage/current currently set immediately)
immediately without any delay when you execute the :INITiate
or :TRIGger:IN:IMMEdiate command.



When the trigger source type is "BUS" (bus trigger; namely software trigger),
after you execute the :INITiate or :TRIGger:IN:IMMEdiate command to initialize
the trigger system, the power supply generates a trigger when you execute the
*TRG command and then executes a trigger operation (the voltage/current of
the specified channel changes to the trigger voltage/current currently set) after
waiting for the specified delay time (if you have set the delay time; refer to
the :TRIGger[:SEQuence]:DELay command).



When the trigger source type is "BUS" (bus trigger; namely software trigger),
you can ensure the synchronization of the operations by executing the *WAI
command. After you execute the *WAI command, the power supply will only
execute the new command after all the previous operations are finished.



When the trigger source type is "BUS" (bus trigger; namely software trigger),
you can make the system report the completion of the operation by executing
the *OPC command. When you execute the *OPC? command, the system will
return "1" to the output buffer when the operation is completed; when you
execute the *OPC command, the system will set bit0 (OPC bit; operation
completed) in the standard event register when the operation is completed.



You can also send the :TRIGger[:SEQuence]:SOURce command to select the
trigger source type.

The query returns BUS or IMM.
:TRIG:IN:CHTY BUS

/*Set the trigger source type to BUS (bus trigger; namely
software trigger)*/

:TRIG:IN:CHTY?

/*Query the trigger source type currently selected and the
query returns BUS*/

:INITiate
:TRIGger:IN:IMMEdiate
*TRG
:TRIGger[:SEQuence]:DELay
*WAI

DP800 Programming Guide

2-143

RIGOL

Chapter 2 Command System

*OPC
:TRIGger[:SEQuence]:SOURce

:TRIGger:IN:CURRent
Syntax
Description

:TRIGger:IN:CURRent {CH1|CH2|CH3},<current>
Set the trigger current of the specified channel.

Parameter

Explanation

Example
Related
Commands

Name

Type

Range

Default

{CH1|CH2|CH3}

Discrete

CH1|CH2|CH3

None

<current>

Real

0 to the maximum current
of the specified channel

0.1A



When the trigger source type (refer to the :TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe command) is set to "IMM" (immediate trigger), the
power supply will execute a complete trigger operation (the voltage/current of
the specified channel changes to the trigger voltage/current currently set
immediately) immediately when you execute the :INITiate
or :TRIGger:IN:IMMEdiate command.



When the trigger source type (refer to the :TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe command) is set to "BUS" (bus trigger; namely software
trigger), after you execute the :INITiate or :TRIGger:IN:IMMEdiate command to
initialize the trigger system, the power supply generates a trigger when you
execute the *TRG command and then executes a trigger operation (the
voltage/current of the specified channel changes to the trigger voltage/current
currently set) after waiting for the specified delay time (if you have set the delay
time; refer to the :TRIGger[:SEQuence]:DELay command).



You can also send the
[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude] command to set the
trigger current of the specified channel.

:TRIG:IN:CURR CH1,1

/*Set the trigger current of CH1 to 1A*/

:TRIGger[:SEQuence]:SOURce
:TRIGger:IN:CHTYpe
:INITiate
:TRIGger:IN:IMMEdiate
*TRG
:TRIGger[:SEQuence]:DELay
[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude]

2-144

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TRIGger:IN[:ENABle]
Syntax

:TRIGger:IN[:ENABle] [D0|D1|D2|D3,]{ON|OFF}
:TRIGger:IN[:ENABle]? [D0|D1|D2|D3]

Description

Enable or disable the trigger input function of the specified data line.
Query the status of the trigger input function of the specified data line.

Parameter

Explanation

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{ON|OFF}

Bool

ON|OFF

OFF



If [D0|D1|D2|D3] is omitted, the command sets the trigger input function of
the data line currently selected.



After enabling the trigger input function, the specified source under control
(:TRIGger:IN:SOURce) will turn on the output, turn off the output or toggle the
output state according to the setting of the :TRIGger:IN:RESPonse command
when the input signal on the specified data line meets the current trigger type
(:TRIGger:IN:TYPE).

Return Format

The query returns Dn,ON or Dn,OFF; wherein, n=0, 1, 2 or 3.

Example

:TRIG:IN D1,ON /*Enable the trigger input function of D1*/
:TRIG:IN? D1

Related
Commands

/*Query the status of the trigger input function of D1 and the
query returns D1,ON*/

:TRIGger:IN:TYPE
:TRIGger:IN:RESPonse
:TRIGger:IN:SOURce

DP800 Programming Guide

2-145

RIGOL

Chapter 2 Command System

:TRIGger:IN:IMMEdiate
Syntax

:TRIGger:IN:IMMEdiate

Description

Initialize the trigger system.

Explanation



When the trigger source type (refer to the :TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe command) is set to "IMM" (immediate trigger), the
power supply will execute a complete trigger operation immediately when yopu
execute this command.



When the trigger source type (refer to the :TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe command) is set to "BUS" (bus trigger; namely
software trigger), the trigger system will be initialized when you execute this
command; after that, send the*TRG command to trigger the power supply and
the power supply will execute a trigger operation after waiting for the specified
delay time (if you have set the delay time; refer to
the :TRIGger[:SEQuence]:DELay command).



You can also send the :INITiate command to initialize the trigger system.

Related
Commands

:TRIGger[:SEQuence]:SOURce
:TRIGger:IN:CHTYpe
*TRG
:TRIGger[:SEQuence]:DELay
:INITiate

2-146

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TRIGger:IN:RESPonse
Syntax

:TRIGger:IN:RESPonse [D0|D1|D2|D3,]{ON|OFF|ALTER}
:TRIGger:IN:RESPonse? [D0|D1|D2|D3]

Description

Set the output response of the trigger input of the specified data line.
Query the output response of the trigger input of the specified data line.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{ON|OFF|ALTER}

Discrete

ON|OFF|ALTER

OFF



If [D0|D1|D2|D3] is omitted, the command sets the output response of the
data line currently selected.



ON: when the input signal of the specified data line meets the trigger type set
(:TRIGger:IN:TYPE), turn on the output of the channel currently selected as
the source under control (:TRIGger:IN:SOURce).



OFF: when the input signal of the specified data line meets the trigger type set
(:TRIGger:IN:TYPE), turn off the output of the channel currently selected as
the source under control (:TRIGger:IN:SOURce).



ALTER: when the input signal of the specified data line meets the trigger type
set (:TRIGger:IN:TYPE), toggle the output state of the channel currently
selected as the source under control (:TRIGger:IN:SOURce).

The query returns ON, OFF or ALTER.
:TRIG:IN:RESP D1,ON

/*Set the output response of the trigger input of D1 to
output on*/

:TRIG:IN:RESP? D1

/*Query the output response of the trigger input of D1
and the query returns ON*/

:TRIGger:IN:SOURce
:TRIGger:IN:TYPE

DP800 Programming Guide

2-147

RIGOL

Chapter 2 Command System

:TRIGger:IN:SENSitivity
Syntax

:TRIGger:IN:SENSitivity [D0|D1|D2|D3,]{LOW|MID|HIGH}
:TRIGger:IN:SENSitivity? [D0|D1|D2|D3]

Description

Set the trigger sensitivity of the trigger input of the specified data line.
Query the trigger sensitivity of the trigger input of the specified data line.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{LOW|MID|HIGH}

Discrete

LOW|MID|HIGH

LOW



If [D0|D1|D2|D3] is omitted, the command sets the trigger sensitivity of the
data line currently selected.



Selecting relatively lower trigger sensitivity can avoid mis-trigger at the noise.

The query returns LOW, MID or HIGH.
:TRIG:IN:SENS D1,HIGH

/*Set the trigger sensitivity of the trigger input of D1 to
high*/

:TRIG:IN:SENS? D1

/*Query the trigger sensitivity of the trigger input of D1
and the query returns HIGH*/

:TRIGger:IN:SOURce
Syntax

:TRIGger:IN:SOURce [D0|D1|D2|D3,][CH1[,CH2[,CH3]]]
:TRIGger:IN:SOURce? [D0|D1|D2|D3]

Description

Set the source under control of the trigger input of the specified data line.
Query the source under control of the trigger input of the specified data line.

Parameter

Explanation

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

[CH1[,CH2[,CH3]]][1]

ASCII string

Refer to the
"Explanation"

CH1



If [D0|D1|D2|D3] is omitted, the command sets the source under control of
the data line currently selected.



One or more of CH1, CH2 and CH3 can be selected as the source under control
at the same time. When [CH1[,CH2[,CH3]]] is omitted, CH1 will be selected as
the source under control of the trigger input of the specified data line.

Return Format

The query returns the name of the source under control. If the source under control
contains multiple channels, the channels are separated by commas, for example,
CH1 or CH1,CH2.

Example

:TRIG:IN:SOUR D1,CH1,CH2 /*Set the source under control of the trigger input of
D1 to CH1 and CH2*/
:TRIG:IN:SOUR? D1

/*Query the source under control of the trigger input
of D1 and the query returns CH1,CH2*/

Note[1]: For this command, the channel ranges cannot be used as command parameters.

2-148

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TRIGger:IN:TYPE
Syntax

:TRIGger:IN:TYPE [D0|D1|D2|D3,]{RISE|FALL|HIGH|LOW}
:TRIGger:IN:TYPE? [D0|D1|D2|D3]

Description

Set the trigger type of the trigger input of the specified data line.
Query the trigger type of the trigger input of the specified data line.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{RISE|FALL|HIGH|LOW}

Discrete

RISE|FALL|HIGH|LOW

RISE



If [D0|D1|D2|D3] is omitted, the command sets the trigger type of the trigger
input of the data line currently selected.



You can select to trigger on the rising edge (RISE), falling edge (FALL), high
level (HIGH) or low level (LOW) of the input signal.



For the input signal, high level is from 2.5V to 3.3V, low level is from 0V to 0.8V
and the noise immunity is 0.4V.

The query returns RISE, FALL, HIGH or LOW.
:TRIG:IN:TYPE D1,FALL

/*Set the trigger type of the trigger input of D1 to the
falling edge */

:TRIG:IN:TYPE? D1

/*Query the trigger type of the trigger input of D1 and
the query returns FALL*/

DP800 Programming Guide

2-149

RIGOL

Chapter 2 Command System

:TRIGger:IN:VOLTage
Syntax
Description

:TRIGger:IN:VOLTage {CH1|CH2|CH3},<voltage>
Set the trigger voltage of the specified channel.

Parameter

Explanation

Example
Related
Commands

Name

Type

Range

Default

{CH1|CH2|CH3}

Discrete

CH1|CH2|CH3

None

<voltage>

Real

0 to the maximum voltage
of the specified channel

0V



When the trigger source type (refer to the :TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe command) is set to "IMM" (immediate trigger), the
power supply will execute a complete trigger operation (the voltage/current of
the specified channel changes to the trigger voltage/current currently set
immediately) immediately when you execute the :INITiate
or :TRIGger:IN:IMMEdiate command.



When the trigger source type (refer to the :TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe command) is set to "BUS" (bus trigger; namely software
trigger), after you execute the :INITiate or :TRIGger:IN:IMMEdiate command to
initialize the trigger system, the power supply generates a trigger when you
execute the *TRG command and then executes a trigger operation (the
voltage/current of the specified channel changes to the trigger voltage/current
currently set) after waiting for the specified delay time (if you have set the delay
time; refer to the :TRIGger[:SEQuence]:DELay command).



You can also send the
[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude] command to set the
trigger voltage of the specified channel.

:TRIG:IN:VOLT CH1,1

/*Set the trigger voltage of CH1 to 1V*/

:TRIGger[:SEQuence]:SOURce
:TRIGger:IN:CHTYpe
:INITiate
:TRIGger:IN:IMMEdiate
*TRG
:TRIGger[:SEQuence]:DELay
[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude]

2-150

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TRIGger:OUT:CONDition
Syntax

:TRIGger:OUT:CONDition
[D0|D1|D2|D3,]{OUTOFF|OUTON|>V|<V|=V|>C|<C|=C|>P|<P|=P|AUTO}[,<val
ue>|MINimum|MAXimum]
:TRIGger:OUT:CONDition? [D0|D1|D2|D3][,MINimum|MAXimum]

Description

Set the trigger condition of the trigger output of the specified data line.
Query the trigger condition of the trigger output of the specified data line.

Parameter

Explanation

Return Format

Example

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{OUTOFF|OUTON|
>V|<V|=V|>C|<C|=C|
>P|<P|=P|AUTO}

Discrete

OUTOFF|OUTON|
>V|<V|=V|>C|<C|=C|
>P|<P|=P|AUTO

OUTOFF

<value>

Real

Refer to the "Explanation"



If [D0|D1|D2|D3] is omitted, the command sets the trigger condition of the
trigger output of the data line currently selected.



When OUTOFF, OUTON or AUTO is selected, <value> is omitted; when >V, <V,
=V, >C, <C, =C, >P, <P or =P is selected, <value> is the corresponding
voltage, current or power.



For multi-channel models, the range of <value> is the voltage/current/power
range of the channel currently selected and the default is 0.5*(the rated
voltage/current of CH1) or 0.25*(the rated power of CH1).



Output Trigger: includes OUTOFF and OUTON, namely triggers when the
output of the specified control source is turned off or on.



Voltage Trigger: includes >V, <V and =V, namely trigger when the output
voltage of the specified control source meets the trigger condition set.



Current Trigger: includse >C, <C and =C, namely trigger when the output
current of the specified control source meets the trigger condition set.



Power Trigger: includes >P, <P and =P, >P, namely trigger when the output
power of the specified control source meets the trigger condition set.



Auto Trigger: the instrument triggers automatically when enabled.



You only need to set <value> (the voltage, current or power specified in the
trigger condition) when voltage trigger (>V, <V, =V), current trigger (>C, <C,
=C) or power trigger (>P, <P, =P) is selected.

When the condition is set to OUTOFF, OUTON or AUTO, the query returns OUTOFF,
OUTON or AUTO; when the condition is set to >V, <V, =V, >C, <C, =C, >P, <P or
=P, the query returns the condition and the voltage/current/power, for
example, >V,8.800.
:TRIG:OUT:COND D1,>V,8.8 /*Set the trigger condition of the trigger output of
D1 to >V and set the voltage to 8.8V*/
:TRIG:OUT:COND? D1

DP800 Programming Guide

/* Query the trigger condition of the trigger output of
D1 and the query returns >V,8.800*/

2-151

RIGOL

Chapter 2 Command System

:TRIGger:OUT:DUTY
Syntax

:TRIGger:OUT:DUTY [D0|D1|D2|D3,]<value>
:TRIGger:OUT:DUTY? [D0|D1|D2|D3]

Description

Set the duty cycle of the square waveform of the trigger output on the specified
data line.
Query the duty cycle of the square waveform of the trigger output on the specified
data line.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

<value>

Integer

10 to 90

50



Duty cycle is defined as the percentage that the high level takes up within a
whole square waveform period.



If [D0|D1|D2|D3] is omitted, the command sets the duty cycle of the square
waveform of the trigger output on the data line currently selected.

The query returns an integer from 10 to 90.
:TRIG:OUT:DUTY D1,60 /*Set the duty cycle of the square waveform of the
trigger output on D1 to 60%*/
:TRIG:OUT:DUTY? D1

Related
Command

2-152

/*Query the duty cycle of the square waveform of the
trigger output on D1 and the query returns 60*/

:TRIGger:OUT:SIGNal

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TRIGger:OUT[:ENABle]
Syntax

:TRIGger:OUT[:ENABle] [D0|D1|D2|D3,]{ON|OFF}
:TRIGger:OUT[:ENABle]? [D0|D1|D2|D3]

Description

Enable or disable the trigger output function of the specified data line.
Query the status of the trigger output function of the specified data line.

Parameter

Explanation

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{ON|OFF}

Bool

ON|OFF

OFF



If [D0|D1|D2|D3] is omitted, the command enables or disables the trigger
output function of the data line currently selected.



When the trigger output function is enabled, the specified data line outputs the
specified level or square waveform according to the setting of the output signal
(:TRIGger:OUT:SIGNal) when the output signal of the specified control source
(:TRIGger:OUT:SOURce) meets the trigger condition set
(:TRIGger:OUT:CONDition).

Return Format

The query returns Dn,ON or Dn,OFF; wherein, n=0, 1, 2 or 3.

Example

:TRIG:IN D1,ON /*Enable the trigger output function of D1*/
:TRIG:IN? D1

Related
Commands

/*Query the status of the trigger output function of D1 and the
query returns D1,ON*/

:TRIGger:OUT:SOURce
:TRIGger:OUT:CONDition
:TRIGger:OUT:SIGNal

DP800 Programming Guide

2-153

RIGOL

Chapter 2 Command System

:TRIGger:OUT:PERIod
Syntax

:TRIGger:OUT:PERIod [D0|D1|D2|D3,]<value>
:TRIGger:OUT:PERIod? [D0|D1|D2|D3]

Description

Set the period of the square waveform of the trigger output on the specified data
line.
Query the period of the square waveform of the trigger output on the specified data
line.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

<value>

Real

0.000100s to 2.500000s

1s



If [D0|D1|D2|D3] is omitted, the command sets the period of the square
waveform of the trigger output on the data line currently selected.



The units supported by <value> include s, ms and us. The default unit is s.

The query returns a value from 0.000100 to 2.500000.
:TRIG:OUT:PERI D1,0.005 /*Set the period of the square waveform of the trigger
output on D1 to 5ms*/
:TRIG:OUT:PERI? D1

Related
Command

2-154

/*Query the period of the square waveform of the
trigger output on D1 and the query returns 0.005000*/

:TRIGger:OUT:SIGNal

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TRIGger:OUT:POLArity
Syntax

:TRIGger:OUT:POLArity [D0|D1|D2|D3,]{POSItive|NEGAtive}
:TRIGger:OUT:POLArity? [D0|D1|D2|D3]

Description

Set the polarity of the trigger output signal of the specified data line.
Query the polarity of the trigger output signal of the specified data line.

Parameter

Explanation

Return Format
Example

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{POSItive|NEGAtive}

Discrete

POSItive|NEGAtive

POSItive



If [D0|D1|D2|D3] is omitted, the command sets the polarity of the trigger
output signal of the data line currently selected.



POSItive: output the currently specified output signal
(:TRIGger:OUT:SIGNal, :TRIGger:OUT:DUTY and :TRIGger:OUT:PERIod)
when the trigger condition is met.
NEGAtive: turn the currently specified output signal
(:TRIGger:OUT:SIGNal, :TRIGger:OUT:DUTY and :TRIGger:OUT:PERIod)
upside down and then output the signal when the trigger condition is met.

The query returns POSITIVE or NEGATIVE.
:TRIG:OUT:POLA D1,NEGAtive /* Set the polarity of the trigger output signal of
D1 to negative */
:TRIG:OUT:POLA? D1

Related
Commands

/* Query the polarity of the trigger output signal of
D1 and the query returns NEGATIVE*/

:TRIGger:OUT:SIGNal
:TRIGger:OUT:DUTY
:TRIGger:OUT:PERIod

DP800 Programming Guide

2-155

RIGOL

Chapter 2 Command System

:TRIGger:OUT:SIGNal
Syntax

:TRIGger:OUT:SIGNal [D0|D1|D2|D3,]{LEVEL|SQUARE}
:TRIGger:OUT:SIGNal? [D0|D1|D2|D3]

Description

Set the type of the trigger output signal of the specified data line.
Query the type of the trigger output signal of the specified data line.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{LEVEL|SQUARE}

Discrete

LEVEL|SQUARE

LEVEL



If [D0|D1|D2|D3] is omitted, the command sets the type of the trigger output
signal of the data line currently selected.



When LEVEL is selected, the specified data line outputs level signal (high level
is from 2.6V to 3.5 V, low level is from 0V to 0.4V) when the trigger condition is
met; when SQUARE is selected, the specified data line outputs the specified
square waveform (:TRIGger:OUT:DUTY and :TRIGger:OUT:PERIod) when the
trigger condition is met.

The query returns LEVEL or SQUARE.
:TRIG:OUT:SIGN D1,LEVEL

/* Set the type of the trigger output signal of D1 to
level */

:TRIG:OUT:SIGN? D1

/* Query the type of the trigger output signal of D1
and the query returns LEVEL*/

:TRIGger:OUT:DUTY
:TRIGger:OUT:PERIod

:TRIGger:OUT:SOURce
Syntax

:TRIGger:OUT:SOURce [D0|D1|D2|D3,]{CH1|CH2|CH3}
:TRIGger:OUT:SOURce? [D0|D1|D2|D3]

Description

Set the control source of the trigger output of the specified data line.
Query the control source of the trigger output of the specified data line.

Parameter

Explanation

Name

Type

Range

Default

[D0|D1|D2|D3]

Discrete

D0|D1|D2|D3

D0

{CH1|CH2|CH3}[1]

Discrete

CH1|CH2|CH3

CH1



If [D0|D1|D2|D3] is omitted, the command sets the control source of the
trigger output of the data line currently selected.



Any of CH1, CH2 and CH3 can be selected as the control source of the trigger
output.

Return Format

The query returns the name of the control source, for example, CH1.

Example

:TRIG:OUT:SOUR D1,CH1 /*Set the control source of D1 to CH1*/
:TRIG:OUT:SOUR? D1

/*Query the control source of D1 and the query returns
CH1*/

Note[1]: For this command, the channel ranges cannot be used as command parameters.

2-156

DP800 Programming Guide

RIGOL

Chapter 2 Command System

:TRIGger[:SEQuence]:DELay
Syntax

:TRIGger[:SEQuence]:DELay {<seconds>|MIN|MAX}
:TRIGger[:SEQuence]:DELay?

Description

Set the trigger delay.
Query the current trigger delay.

Parameter

Explanation

Return Format
Example
Related
Commands

Name

Type

Range

Default

<seconds>

Integer

0s to 3600s

0s



Trigger delay refers to the time from when the trigger is detected on the
specified trigger source to when the corresponding output changes
accordingly.



The trigger delay is only valid when the trigger source is set to "BUS" (bus
trigger, namely software trigger).



When the trigger source (:TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe) is set to "IMM" (immediate trigger), the system
executes a complete trigger operation (the voltage/current of the specified
channel changes to the trigger voltage/current currently set immediately)
immediately after executing the :INITiate or :TRIGger:IN:IMMEdiate
command and there is no delay.



When the trigger source (:TRIGger[:SEQuence]:SOURce
or :TRIGger:IN:CHTYpe) is set to "BUS" (bus trigger, namely software trigger),
the system generates a trigger by executing the *TRG command after
executing the :INITiate or :TRIGger:IN:IMMEdiate command to initialize the
trigger system. Then, the power supply executes a trigger operation (the
voltage/current of the specified channel change to the trigger voltage/current
currently set) after the specified delay time (if the delay time is
set, :TRIGger[:SEQuence]:DELay).



When trigger coupling is currently set, for all the coupling channels, the trigger
delay time is the same (the value set by this command).

The query returns an integer from 0 to 3600, for example, 3.
:TRIG:DEL 3

/*Set the trigger delay to 3s*/

:TRIG:DEL?

/*Query the current trigger delay and the query returns 3*/

:TRIGger[:SEQuence]:SOURce
:TRIGger:IN:CHTYpe
:INITiate
:TRIGger:IN:IMMEdiate
*TRG

DP800 Programming Guide

2-157

RIGOL

Chapter 2 Command System

:TRIGger[:SEQuence]:SOURce
Syntax

:TRIGger[:SEQuence]:SOURce {BUS|IMM}
:TRIGger[:SEQuence]:SOURce?

Description

Select the trigger source.
Query the trigger source currently selected.

Parameter

Explanation

Return Format
Example

Related
Commands

Name

Type

Range

Default

{BUS|IMM}

Discrete

BUS|IMM

BUS



The trigger sources include BUS (bus trigger) and IMM (immediate trigger). In
bus trigger, also called software trigger, the power supply receives trigger from
the bus, namely the power supply receives trigger via software. In immediate
trigger, the power supply receives immediate trigger via the remote interface.



When the trigger source is set to "IMM" (immediate trigger), the system
executes a complete trigger operation (the voltage/current of the specified
channel changes to the trigger voltage/current currently set immediately)
immediately after executing the :INITiate or :TRIGger:IN:IMMEdiate
command and there is no delay.



When the trigger source is set to "BUS" (bus trigger, namely software trigger),
the system generates a trigger by executing the *TRG command after
executing the :INITiate or :TRIGger:IN:IMMEdiate command to initialize the
trigger system. Then, the power supply executes a trigger operation (the
voltage/current of the specified channel change to the trigger voltage/current
currently set) after the specified delay time (if the delay time is
set, :TRIGger[:SEQuence]:DELay).



When the trigger source is set to "BUS" (bus trigger, namely software trigger),
the *WAI command can ensure the synchronization. After executing the *WAI
command, the power supply will only execute new command when all the
pending operations are completed.



When the trigger source is set to "BUS" (bus trigger, namely software trigger),
you can use the *OPC command to report that the operation is completed. The
*OPC? command will return "1" to the output buffer and the *OPC command
will set the bit0 (OPC bit, operation complete) in the standard event register
when the operation is finished.



You can also send the :TRIGger:IN:CHTYpe command to select the trigger
source type.

The query returns BUS or IMM.
:TRIG:SOUR BUS

/*Set the trigger source to BUS (bus trigger, namely software
trigger)*/

:TRIG:SOUR?

/*Query the trigger source currently selected and the query
returns BUS*/

:INITiate
:TRIGger:IN:IMMEdiate
*TRG
:TRIGger[:SEQuence]:DELay
*WAI
*OPC
:TRIGger:IN:CHTYpe

2-158

DP800 Programming Guide

Chapter 3 Application Examples

RIGOL

Chapter 3 Application Examples
This chapter provides some application examples of the SCPI commands. A series of SCPI commands are
combined to realize the main functions of the power supply.
Note:
1
The examples in this chapter are based on DP831A. For other models, the ranges of some parameters
might be different. When using the commands, please make proper adjustment according to the
model of your instrument.
2
Before using the examples in this chapter, please select the desired communication interface (USB,
LAN, RS232 or GPIB) and make correct connections (refer to the introductions in "To Build Remote
Communication"). Besides, you have to install Ultra Sigma or other PC software for sending
commands on your PC.
3
The content enclosed in "/*" and "*/" after each command in this chapter is annotation for easier
understanding and is not a part of the command.
Main topics of this chapter:


CV Output



Track Function



Timing Output



Delay Output



To Trigger the Power Supply



To Use the Recorder



To Use the Analyzer



To Use the Monitor



To Use the Trigger

DP800 Programming Guide

3-1

RIGOL

Chapter 3 Application Examples

CV Output
Requirement
Use the SCPI commands to realize the following functions:
CH1 CV output; set the output voltage to 5V, the output current to 5A and the overcurrent protection value
to 5.3A.
Method 1
1
*IDN?
2
3
4
5
6
7

/*Query the ID string of the power supply to check whether the remote
communication is normal*/
:INST CH1
/*Select CH1*/
:CURR 5
/*Set the current of CH1 to 5A*/
:CURR:PROT 5.3
/*Set the overcurrent protection value of CH1 to 5.3A*/
:CURR:PROT:STAT ON /*Enable the overcurrent protection function of CH1*/
:VOLT 5
/*Set the voltage of CH1to 5V*/
:OUTP CH1,ON
/*Enable the output of CH1*/

Method 2
1
*IDN?
2
3
4
5

/*Query the ID string of the power supply to check whether the remote
communication is normal*/
:CURR:PROT 5.3
/*Set the overcurrent protection value of CH1 to 5.3A*/
:CURR:PROT:STAT ON /*Enable the overcurrent protection function of CH1*/
:APPL CH1,5,5
/*Select CH1, set the voltage to 5V and current to 5A*/
:OUTP CH1,ON
/*Enable the output of CH1*/

Track Function
Some channels of DP800 support the track function, including CH2 and CH3 of DP831A/DP831 as well as
CH1 and CH2 of DP832A/DP832.
Requirement
Use the SCPI commands to realize the following functions by taking DP831A as an example:
Enable the track function of CH3; change the voltage setting value of CH3 from -5V to -30V; at this point,
the voltage setting value of CH2 changes accordingly.
Method
1
*IDN?
2
3
4
5
6

3-2

:OUTP:TRAC CH3,ON
:APPL CH3,-5,1
:APPL? CH2,VOLT
:APPL CH3,-30,1
:APPL? CH2,VOLT

/*Query the ID string of the power supply to check whether the remote
communication is normal*/
/*Enable the track function of CH3*/
/*Set the voltage of CH3 to -5V and the current to 1A*/
/*Query the voltage of CH2 and the query returns 5.000*/
/*Change the voltage of CH3 to -30V*/
/*Query the voltage of CH2 and the query returns 30.000*/

DP800 Programming Guide

Chapter 3 Application Examples

RIGOL

Timing Output
Requirement
Use the SCPI commands to realize the following functions:
 Set the timer parameters of CH1: set the number of groups to 25, the number of cycles to 20 and the
end state to last; use the Sine templet to create the timer parameters; set the editing object to voltage
and the current to 2A; set the templet maximum to 8V and the templet minimum to 0V; set the total
number of points to 25 and the time interval to 5s; enable the invert.
 Save the timer parameters edited.
 Enable the timing output.
Method
1
*IDN?
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

/*Query the ID string of the power supply to check whether the remote
communication is normal*/
:INST CH1
/*Select CH1*/
:TIME:GROUP 25
/*Set the number of groups to 25*/
:TIME:CYCLE N,20
/*Set the number of cycles to 20*/
:TIME:ENDS LAST
/*Set the end state to last*/
:TIME:TEMP:SEL SINE /*Select Sine templet*/
:TIME:TEMP:OBJ V,2
/*Set the editing object to voltage and set the current to 2A*/
:TIME:TEMP:MAXV 8
/*Set the maximum to 8V*/
:TIME:TEMP:MINV 0
/*Set the minimum to 0V*/
:TIME:TEMP:POINT 25 /*Set the total number of points to 25*/
:TIME:TEMP:INTE 5
/*Set the time interval to 5s*/
:TIME:TEMP:INVE ON /*Enable the invert*/
:TIME:TEMP:CONST
/*Create the timer parameters*/
:MEM:STOR RTF,1
/*Save the timer parameters edited in internal memory*/
:OUTP CH1,ON
/*Enable the output of CH1*/
:TIME ON
/*Enable the timing output*/

Delay Output
Requirement
Use the SCPI commands to realize the following functions:
 Set the delayer parameters of CH1: set the number of groups to 25, the number of cycles to 20 and the
end state to last; select 1 0 pattern to generate state; set the time generation method to monotonic
increase, the time base value to 2s and the step to 5s; set the stop condition to ">V" and the voltage
to 8V.
 Save the delayer parameters edited.
 Enable the delay output.
Method
1
*IDN?
2
3
4
5
6
7

:INST CH1
:DELAY:GROUP 25
:DELAY:CYCLE N,20
:DELAY:ENDS LAST
:DELAY:STAT:GEN 10P
:DELAY:TIME:GEN INC,2,5

8
9
10
11

:DELAY:STOP >V,8
:MEM:STOR RDF,1
:OUTP CH1,ON
:DELAY ON

/*Query the ID string of the power supply to check whether the remote
communication is normal*/
/*Select CH1*/
/*Set the number of groups to 25*/
/*Set the number of cycles to 20*/
/*Set the end state to last*/
/*Select 1 0 pattern to generate state*/
/*set the time generation method to monotonic increase, the time base
value to 2s and the step to 5s */
/*Set the stop condition to ">V" and the voltage to 8V*/
/*Save the delayer parameters edited in internal memory*/
/*Enable the output of CH1*/
/*Enable the delay output*/

DP800 Programming Guide

3-3

RIGOL

Chapter 3 Application Examples

To Trigger the Power Supply
Requirement
Use the SCPI commands to realize the following functions:
 Set the trigger source to "BUS" and the delay time to 3s.
 Set the trigger voltage and trigger current of CH1 to 3V and 1A.
 Trigger the power supply. The power supply executes the trigger operation after 3s (delay time) and
the voltage/current of CH1 changes to 3V/1A.
Method
1
*IDN?
2
3
4
5
6
7

:TRIG:SOUR BUS
:TRIG:DEL 3
:SOUR1:VOLT:TRIG 3
:SOUR1:CURR:TRIG 1
:INIT
*TRG

/*Query the ID string of the power supply to check whether the
remote communication is normal*/
/*Set the trigger source to "BUS" (bus trigger, namely software trigger)*/
/*Set the delay time to 3s*/
/*Set the trigger voltage of CH1 to 3V*/
/*Set the trigger current of CH1 to 1A*/
/*Initialize the trigger system*/
/*The power supply executes the trigger operation after 3s (delay time) and
the voltage/current of CH1 changes to 3V/1A*/

To Use the Recorder
Requirement
Use the SCPI commands to realize the following functions:
Set the record period to 2s and the storage directory of the record file to C:\REC 1:RIGOL.ROF; enable the
recorder, wait for about 2 minutes and disable the recorder.
Method
1
*IDN?

/*Query the ID string of the power supply to check whether the remote
communication is normal*/
2
:OUTP CH1,ON
/*Enable the output of CH1; otherwise, the recorded data of CH1 will be 0*/
3
:OUTP CH2,ON
/*Enable the output of CH2; otherwise, the recorded data of CH2 will be 0*/
4
:OUTP CH3,ON
/*Enable the output of CH3; otherwise, the recorded data of CH3 will be 0*/
5
:REC:PERI 2
/*Set the record period to 2s*/
6
:REC:MEM 1,RIGOL.ROF /*Set the storage directory of the record file to C:\REC 1:RIGOL.ROF*/
7
:REC ON
/*Enable the recorder*/
/*Wait for about 2 minutes…*/
8
:REC OFF
/*Disable the recorder*/

3-4

DP800 Programming Guide

RIGOL

Chapter 3 Application Examples

To Use the Analyzer
Requirement
Use the SCPI commands to realize the following functions:
 Open the C:\REC 1:RIGOL.ROF file; set the start time to 1s (it is assumed that the record period of
C:\REC 1:RIGOL.ROF is 1s. Note that the range of the start time is from the record period of the record
file opened to the end time) and the end time to 100s.
 Execute the analysis.
 Read the analysis results.
Method
1
*IDN?
2
3
4
5
6

:ANAL:MEM 1
:ANAL:STARTT 1
:ANAL:ENDT 100
:ANAL:ANAL
:ANAL:RES?

/*Query the ID string of the power supply to check whether the remote
communication is normal*/
/*Open the C:\REC 1:RIGOL.ROF file*/
/*Set the start time to 1s*/
/*Set the end time to 100s*/
/*Execute the analysis*/
/*Read the analysis results*/

To Use the Monitor
Requirement
Use the SCPI commands to realize the following functions:
 Monitor CH1.
 Set the monitor condition: >Voltage, >Current or >Power; set the voltage to 5V, the current to 3A and
the power to 15W; set the stop mode to OutpOff, Warning and Beeper.
 Enable the monitor.
Method
1
*IDN?
2
3

:INST CH1
:MONI:VOLT:COND >V,OR

4
5

:MONI:VOLT 5
:MONI:CURR:COND >C,OR

6
7
8
9
10
11
12

:MONI:CURR 3
:MONI:POWER:COND >P
:MONI:POWER 15
:MONI:STOP OUTOFF,ON
:MONI:STOP WARN,ON
:MONI:STOP BEEPER,ON
:MONI ON

DP800 Programming Guide

/*Query the ID string of the power supply to check whether the
remote communication is normal*/
/*Select CH1*/
/*Set the voltage monitor condition to ">V" and the logic relation to
"OR"*/
/*Set the voltage of the monitor condition to 5V*/
/*Set the current monitor condition to ">C" and the logic relation to
"OR"*/
/*Set the current of the monitor condition to 3A*/
/*Set the power monitor condition to ">P"*/
/*Set the power of the monitor condition to 15W*/
/*Enable the "OutpOff" stop mode*/
/*Enable the "Warning" stop mode*/
/*Enable the "Beeper" stop mode*/
/*Enable the monitor*/

3-5

RIGOL

Chapter 3 Application Examples

To Use the Trigger
Trigger Input
Requirement
Use the SCPI commands to realize the following functions:
 Set the trigger input parameters of D0: set the source under control to CH1, the trigger type to falling
edge, the output response to ON and the trigger sensitivity to low.
 Enable the trigger input function of D0.
Method
1
*IDN?
2
3
4
5
6

/*Query the ID string of the power supply to check whether the remote
communication is normal*/
:TRIG:IN:SOUR D0,CH1 /*Set the source under control of the trigger input of D0 to CH1*/
:TRIG:IN:TYPE D0,FALL
/*Set the trigger type of the trigger input of D0 to falling edge*/
:TRIG:IN:RESP D0,ON
/*Set the output response of the trigger input of D0 to ON*/
:TRIG:IN:SENS D0,LOW /*Set the trigger sensitivity of the trigger input of D0 to low*/
:TRIG:IN D0,ON
/*Enable the trigger input function of D0*/

Trigger Output
Requirement
Use the SCPI commands to realize the following functions:
 Set the trigger output parameters of D1: set the control source to CH2, the trigger condition to
"Voltage>5V", the output signal to square waveform (0.5s period and 60% duty cycle) and the polarity
of the signal to negative.
 Enable the trigger output function of D1.
Method
1
*IDN?
2
3

:TRIG:OUT:SOUR D1,CH2
:TRIG:OUT:COND D1,>V,5

4
5

:TRIG:OUT:SIGN D1,SQUARE
:TRIG:OUT:PERI D1,0.5

6

:TRIG:OUT:DUTY D1,60

7
8

:TRIG:OUT:POLA D1,NEGA
:TRIG:OUT D1,ON

3-6

/*Query the ID string of the power supply to check whether the
remote communication is normal*/
/*Set the control source of the trigger output of D1 to CH2*/
/*Set the trigger condition of the trigger output of D1 to
"Voltage>5V"*/
/*Set the trigger output signal of D1 to square waveform*/
/*Set the period of the square waveform of the trigger output on D1
to 0.5s*/
/*Set the duty cycle of the square waveform of the trigger output on
D1 to 60%*/
/*Set the polarity of the trigger output signal of D1 to negative*/
/*Enable the trigger output function of D1*/

DP800 Programming Guide

Chapter 4 Programming Demos

RIGOL

Chapter 4 Programming Demos
This chapter provides the demos for programming and controlling the power supply using SCPI commands
under Excel, MATLAB, LabVIEW, Visual Basic and Visual C++ environment on the basis of NI-VISA.
NI-VISA (National Instrument-Virtual Instrument Software Architecture) is an advanced application
programming interface developed by NI (National Instrument) for communicating with various instrument
buses. It can communicate with instrument in the same method regardless of the type of the instrument
interface (GPIB, USB, LAN/Ethernet or RS232).
The instruments communicate with NI-VISA via various interfaces are called "resources". The VISA
descriptor (namely the resource name) is used to describe the accurate name and location of the VISA
resource. If LAN interface is currently used for communicating with the instrument, the VISA descriptor
is :TCPIP0::172.16.2.13::INSTR. Before programming, please acquire the correct VISA descriptor.
Main topics of this chapter:


Programming Preparations



Excel Programming Demo



MATLAB Programming Demo



LabVIEW Programming Demo



Visual Basic Programming Demo



Visual C++ Programming Demo

DP800 Programming Guide

4-1

RIGOL

Chapter 4 Programming Demos

Programming Preparations
Before programming, you need to make the following preparations:
1

Install the Ultra Sigma common PC software. You can download Ultra Sigma from RIGOL official
website (www.rigol.com); then, install it according to the instructions. After installing the Ultra Sigma,
the NI-VISA library will be installed automatically. Here, the default installation path is C:\Program
Files\IVI Foundation\VISA.

2

Here, the USB interface of the power supply is used to communicate with the PC and please use USB
cable to connect the USB DEVICE interface on the rear panel of the power supply to the PC.
You can also use LAN, RS232 or GPIB (with the USB-GPIB interface converter provided by RIGOL) to
communicate with PC. Note that the end mark of the command sent through RS232 interface is "\r\n".

3

Turn on the instrument after connecting the power supply and PC.

4

At this point, the "Found New Hardware Wizard" dialog box appears on the PC. Please follow the
instructions to install the "USB Test and Measurement Device (IVI)".

5

Acquire the USB VISA descriptor of the power supply. Press Utility and the VISA descriptor is
displayed at the bottom of the interface. Here, the VISA descriptor of the power supply is
USB0::0x1AB1::0x0E11::DP8A000001::INSTR.

By now, the programming preparations are finished.

4-2

DP800 Programming Guide

Chapter 4 Programming Demos

RIGOL

Excel Programming Demo
The program used in this demo: Microsoft Excel 2010
The function realized in this demo: send the *IDN? Command to read the device information.
1

Create a new Excel file that enables the Macros. In this demo, the file is named as
DP800_Demo_Excel.xlsm.

2

Run the DP800_Demo_Excel.xlsm file. Click File→Options at the upper-left corner of the Excel file to
open the interface as shown in the figure below. Click Customize Ribbon at the left, check
Developer and click OK. At this point, the Excel menu bar displays the Developer menu.

3

Enter the VISA descriptor into a cell of the file as shown in the figure below. Click the Developer menu
and select the Visual Basic option to open the Microsoft Visual Basic.

DP800 Programming Guide

4-3

RIGOL

4

Chapter 4 Programming Demos

Select Tools(T) in the Microsoft Visual Basic menu bar and click References.

Select VISA Library in the pop-up dialog box and click OK to refer to the VISA Library.

Explanation:
If you cannot find VISA Library in the list at the left of the figure above, please follow the method
below to find it.
(1) Make sure that your PC has installed the NI-VISA library.
(2) Click Browse… at the right and set the search range to C:\WINDOWS\system32 and the
filename to visa32.dll, as shown in the figure below.

5
4-4

Click View Code in the Developer menu to enter the Microsoft Visual Basic interface. Add the
DP800 Programming Guide

Chapter 4 Programming Demos

RIGOL

following codes and save the file.
Note: If the Excel file created at step 2 does not enable the Macros, at this point, the prompt message
"The following features cannot be saved in macro-free workbooks" will be displayed. In this situation,
please save the Excel file as a file using the Macros.
Sub QueryIdn()
Dim viDefRm As Long
Dim viDevice As Long
Dim viErr As Long
Dim cmdStr As String
Dim idnStr As String * 128
Dim ret As Long
‘Turn on the device, the device resource descriptor is in CELLS(1,2) of SHEET1’
viErr = visa.viOpenDefaultRM(viDefRm)
viErr = visa.viOpen(viDefRm, Sheet1.Cells(1, 2), 0, 5000, viDevice)
‘Send request, read the data, the return value is in CELLS(2,2) of SHEET1’
cmdStr = "*IDN?"
viErr = visa.viWrite(viDevice, cmdStr, Len(cmdStr), ret)
viErr = visa.viRead(viDevice, idnStr, 128, ret)
Sheet1.Cells(2, 2) = idnStr
‘Turn off the device’
visa.viClose (viDevice)
visa.viClose (viDefRm)
End Sub
6

Add button control: click Insert in the Developer menu, select the desired button in Form Controls
and put it into the cell of the Excel. At this point, the Assign Macro interface is displayed, select
"Sheet1.QueryIdn" and click "OK".

By default, the button mane is "Button 1". Right-click the button and select Edit Text in the pop-up
menu to change the button name to "*IDN?".
7

Click *IDN? to run the program. The return value will be displayed in CELLS(2,2) of SHEET1.

DP800 Programming Guide

4-5

RIGOL

Chapter 4 Programming Demos

MATLAB Programming Demo
The program used in this demo: MATLAB R2009a
The function realized in this demo: read the output voltage, current and power measured internally on
CH1.
1

Run the MATLAB software and modify the current directory (namely modify the Current Directory at
the top of the software). In this demo, the current directory is modified to E:\DP800_Demo.

2

Click File  New  Blank M-File in the MATLAB interface to create an empty M file.

3

Add the following codes in the M file:
dp800 = visa( 'ni','USB0::0x1AB1::0x0E11::DP8A000001::INSTR' ); %Create VISA object
fopen( dp800 );

%Open the VISA object created

fprintf(dp800, ':MEAS:ALL? CH1' );
meas_CH1 = fscanf(dp800);
fclose(dp800);

%Send request

%Read data

%Close the VISA object

display(meas_CH1)

%Display the device information read

4

Save the M file under the current directory. In this demo, the M file is named as
DP800_Demo_MATLAB.m.

5

Run the M file and the following running result is displayed in the command window.

4-6

DP800 Programming Guide

Chapter 4 Programming Demos

RIGOL

LabVIEW Programming Demo
The program used in this demo: LabVIEW 2009
The functions realized in this demo: search for the instrument address, connect the instrument, send
command and read the return value.
1

Run LabVIEW 2009, create a VI file and name it as DP800_Demo_LABVIEW.

2

Add controls in the front panel interface, including the Address bar, Command bar and Return bar
as well as the Connect, Write, Read and Exit buttons.

3

Click Show Block Diagram in the Window menu to create event structure.

DP800 Programming Guide

4-7

RIGOL

4

Chapter 4 Programming Demos

Add events, including connecting instrument, write operation, read operation and exit.
(1) Connect the instrument (including error processing):

(2) Write operation (including error judgment):

4-8

DP800 Programming Guide

Chapter 4 Programming Demos

RIGOL

(3) Read operation (including error processing):

DP800 Programming Guide

4-9

RIGOL

Chapter 4 Programming Demos

(4) Exit:

5

4-10

Run the program and the interface as shown in the figure below is displayed. Click the Address
dropdown box and select the VISA resource name; click Connect to connect the instrument; enter the
command into the Command textbox and click Write to write the command into the instrument. If
the command is a query command, click Read and the return value is displayed in the Return
textbox.

DP800 Programming Guide

Chapter 4 Programming Demos

RIGOL

Visual Basic Programming Demo
The program used in this demo: Visual Basic 6.0
The function realized in this demo: enable the three channels of the power supply and show the colors
of the channels by taking DP831A as an example.
1

Build a standard application program project (Standard EXE) and name it as DP800_Demo_VB.

2

Click the Existing tab of ProjectAdd Module. Search for the visa32.bas file in the include folder
under the NI-VISA installation path and add the file.

3

Add three CommandButton controls to represent CH1, CH2 and CH3 respectively. Add three Text
controls (Label1(0), Label1(1) and Label1(2)) to represent the status of the three channels
respectively (by default, the Text control is gray; when the channel is enabled, it displays the color of
the channel). The layout of the controls is as shown in the figure below.

4

Open the General tab in Project→Project1 Properties and select Form1 in the Startup Object
dropdown box.

5

Double-click CH1 to enter the programming environment. Add the following codes to control CH1, CH2
and CH3. The codes of CH1 are as shown below; the codes of CH2 and CH3 are similar.
Dim defrm As Long
Dim vi As Long
Dim strRes As String * 200
Dim list As Long

DP800 Programming Guide

4-11

RIGOL

Chapter 4 Programming Demos

Dim nmatches As Long
Dim matches As String * 200
' Acquire the usb resource of visa
Call viOpenDefaultRM(defrm)
Call viFindRsrc(defrm, "USB?*", list, nmatches, matches)
' Turn on the device
Call viOpen(defrm, matches, 0, 0, vi)
' Send command to query the CH1 status
Call viVPrintf(vi, ":OUTP? CH1" + Chr$(10), 0)
' Acquire the status of CH1
Call viVScanf(vi, "%t", strRes)
If strRes = "ON" Then
' Send the setting command
Call viVPrintf(vi, ":OUTP CH1,OFF" + Chr$(10), 0)
Label1(0).ForeColor = &H808080 'Gray
Else
Call viVPrintf(vi, ":OUTP CH1,ON" + Chr$(10), 0)
Label1(0).ForeColor = &HFFFF& 'Yellow
End If
' Turn off the resource
Call viClose(vi)
Call viClose(defrm)
6

Running results
1) Click CH1 to enable CH1 and the control above CH1 turns yellow;
2) Click CH2 to enable CH2 and the control above CH2 turns blue;
3) Click CH3 to enable CH3 and the control above CH3 turns rosy.
The running results are as shown in the figure below.

4-12

DP800 Programming Guide

Chapter 4 Programming Demos

RIGOL

Visual C++ Programming Demo
The program used in this demo: Microsoft Visual C++ 6.0
The functions realized in this demo: search for the instrument address, connect the instrument, send
command and read the return value.
1

Run Microsoft Visual C++ 6.0, create a MFC project based on dialog box and name it as
DP800_Demo_VC。

2

Click ProjectSettings and add visa32.lib in the Link tab in the pop-up interface manually.

DP800 Programming Guide

4-13

RIGOL

3

Chapter 4 Programming Demos

Click ToolsOptions and add the Include and Lib paths in the Directories tab in the pop-up
interface.
Select Include files in Show directories for and double-click the blank in Directories to add the
path of Include: C:\Program Files\IVI Foundation\VISA\WinNT\include.
Select Library files in Show directories for and double-click the blank in Directories to add the
path of Lib: C:\Program Files\IVI Foundation\VISA\WinNT\lib\msc.
Note:
The two pathes added here are related to the NI-VISA installation path on your PC. Here, the NI-VISA
is installed under C:\Program Files\IVI Foundation\VISA.

4

4-14

Add the Text, Edit and Button controls and the layout is as shown in the figure below.

DP800 Programming Guide

Chapter 4 Programming Demos

RIGOL

5

Click ViewClassWizard and add the control variables in the Member Variables tab in the pop-up
interface.
Instrument address: CString m_strInstrAddr
Command: CString m_strCommand
Return value: CString m_strResult

6

Encapsulate the write and read operations of VISA.
1) Encapsulate the write operation of VISA for easier operation.
bool CDP800_DEMO_VCDlg::InstrWrite(CString strAddr, CString strContent) //write function
{
ViSession defaultRM,instr;
ViStatus status;
ViUInt32 retCount;
char * SendBuf = NULL;
char * SendAddr = NULL;
bool bWriteOK = false;
CString str;
//Change the address's data style from CString to char*
SendAddr = strAddr.GetBuffer(strAddr.GetLength());
strcpy(SendAddr,strAddr);
strAddr.ReleaseBuffer();
//Change the command's data style from CString to char*
SendBuf = strContent.GetBuffer(strContent.GetLength());
strcpy(SendBuf,strContent);
strContent.ReleaseBuffer();
//open the VISA instrument
status = viOpenDefaultRM(&defaultRM);
if (status < VI_SUCCESS)
{
AfxMessageBox("No VISA instrument was opened !");

DP800 Programming Guide

4-15

RIGOL

Chapter 4 Programming Demos

}

return false;

status = viOpen(defaultRM, SendAddr, VI_NULL, VI_NULL, &instr);
//write command to the instrument
status = viWrite(instr, (unsigned char *)SendBuf, strlen(SendBuf), &retCount);
//close the instrument
status = viClose(instr);
status = viClose(defaultRM);
}

return bWriteOK;

2) Encapsulate the read operation of VISA for easier operation.
bool CDP800_DEMO_VCDlg::InstrRead(CString strAddr, CString *pstrResult)
//Read from the instrument
{
ViSession defaultRM,instr;
ViStatus status;
ViUInt32 retCount;
char * SendAddr = NULL;
unsigned char RecBuf[MAX_REC_SIZE];
bool bReadOK = false;
CString str;
//Change the address's data style from CString to char*
SendAddr = strAddr.GetBuffer(strAddr.GetLength());
strcpy(SendAddr,strAddr);
strAddr.ReleaseBuffer();
memset(RecBuf,0,MAX_REC_SIZE);
//open the VISA instrument
status = viOpenDefaultRM(&defaultRM);
if (status < VI_SUCCESS)
{
// Error Initializing VISA...exiting
AfxMessageBox("No VISA instrument was opened !");
return false;
}
//open the instrument
status = viOpen(defaultRM, SendAddr, VI_NULL, VI_NULL, &instr);
//read from the instrument
status = viRead(instr, RecBuf, MAX_REC_SIZE, &retCount);
//close the instrument
status = viClose(instr);
status = viClose(defaultRM);
(*pstrResult).Format("%s",RecBuf);
}

4-16

return bReadOK;

DP800 Programming Guide

Chapter 4 Programming Demos

7

RIGOL

Add the control message response code.
1) Connect the instrument
void CDP800_DEMO_VCDlg::OnConnect()
{
// TODO: Add your control notification handler code here
ViStatus status;
ViSession defaultRM;
ViString expr = "?*";
ViPFindList findList = new unsigned long;
ViPUInt32 retcnt = new unsigned long;
ViChar instrDesc[1000];
CString strSrc = "";
CString strInstr = "";
unsigned long i = 0;
bool bFindDP = false;
status = viOpenDefaultRM(&defaultRM);
if (status < VI_SUCCESS)
{
// Error Initializing VISA...exiting
MessageBox("No VISA instrument was opened ! ");
return ;
}
memset(instrDesc,0,1000);
// Find resource
status = viFindRsrc(defaultRM,expr,findList, retcnt, instrDesc);
for (i = 0;i < (*retcnt);i++)
{
// Get instrument name
strSrc.Format("%s",instrDesc);
InstrWrite(strSrc,"*IDN?");
::Sleep(200);
InstrRead(strSrc,&strInstr);
// If the instrument(resource) belongs to the DP series then jump out from the loop
strInstr.MakeUpper();
if (strInstr.Find("DP") >= 0)
{
bFindDP = true;
m_strInstrAddr = strSrc;
break;
}

}

}

//Find next instrument
status = viFindNext(*findList,instrDesc);

if (bFindDP == false)
{
MessageBox("Didn't find any DP!");
}
UpdateData(false);

DP800 Programming Guide

4-17

RIGOL

Chapter 4 Programming Demos

2) Write operation
void CDP800_DEMO_VCDlg::OnSend()
{
// TODO: Add your control notification handler code here
UpdateData(true);
if (m_strInstrAddr.IsEmpty())
{
MessageBox("Please connect to the instrument first!");
}
InstrWrite(m_strInstrAddr,m_strCommand);
m_strResult.Empty();
UpdateData(false);
}
3) Read operation
void CDP800_DEMO_VCDlg::OnRead()
{
// TODO: Add your control notification handler code here
UpdateData(true);
InstrRead(m_strInstrAddr,&m_strResult);
UpdateData(false);
}
8

Running results.
1) Click Connect to search for the power supply and connect it;
2) Enter the command in to the Command textbox, for example, :APPLy? CH1;
3) Click Send to send the command;
4) Click Read to read the return value.
The running results are as shown in the figure below.

4-18

DP800 Programming Guide

Chapter 5 Appendix

RIGOL

Chapter 5 Appendix
Appendix A: Command List


:ANALyzer Commands
:ANALyzer:ANALyze
:ANALyzer:CURRTime
:ANALyzer:ENDTime
:ANALyzer:FILE?
:ANALyzer:MEMory
:ANALyzer:MMEMory
:ANALyzer:OBJect
:ANALyzer:RESult?
:ANALyzer:STARTTime
:ANALyzer:VALue?



:APPLy Command
:APPLy



:DELAY Commands
:DELAY:CYCLEs
:DELAY:ENDState
:DELAY:GROUPs
:DELAY:PARAmeter
:DELAY[:STATe]
:DELAY:STATe:GEN
:DELAY:STOP
:DELAY:TIME:GEN



:DISPlay Commands
:DISPlay:MODE
:DISPlay[:WINDow][:STATe]
:DISPlay[:WINDow]:TEXT:CLEar
:DISPlay[:WINDow]:TEXT[:DATA]



IEEE488.2 Common Commands
*CLS
*ESE
*ESR?
*IDN?
*OPC
*OPT?
*PSC

DP800 Programming Guide

5-1

RIGOL

Chapter 5 Appendix

*RCL
*RST
*SAV
*SRE
*STB?
*TRG
*TST?
*WAI


:INITiate Command
:INITiate



:INSTrument Commands
:INSTrument:COUPle[:TRIGger]
:INSTrument:NSELect
:INSTrument[:SELEct]
:INSTrument[:SELect]



:LIC Command
:LIC:SET



:MEASure Commands
:MEASure:ALL[:DC]?
:MEASure:CURRent[:DC]?
:MEASure:POWEr[:DC]?
:MEASure[:VOLTage][:DC]?



:MEMory Commands
:MEMory[:STATe]:DELete
:MEMory[:STATe]:LOAD
:MEMory[:STATe]:LOCK
:MEMory[:STATe]:STORe
:MEMory[:STATe]:VALid?



:MMEMory Commands
:MMEMory:CATalog?
:MMEMory:CDIRectory
:MMEMory:DELete
:MMEMory:DISK?
:MMEMory:LOAD
:MMEMory:MDIRectory
:MMEMory:STORe



:MONItor Commands
:MONItor:CURRent:CONDition
:MONItor:CURRent[:VALue]

5-2

DP800 Programming Guide

Chapter 5 Appendix

RIGOL

:MONItor:POWER:CONDition
:MONItor:POWER[:VALue]
:MONItor[:STATe]
:MONItor:STOPway
:MONItor:VOLTage:CONDition
:MONItor:VOLTage[:VALue]


:OUTPut Commands
:OUTPut:CVCC?
:OUTPut:MODE?
:OUTPut:OCP:ALAR?
:OUTPut:OCP:QUES?
:OUTPut:OCP:CLEAR
:OUTPut:OCP[:STATe]
:OUTPut:OCP:VALue
:OUTPut:OVP:ALAR?
:OUTPut:OVP:QUES?
:OUTPut:OVP:CLEAR
:OUTPut:OVP[:STATe]
:OUTPut:OVP:VALue
:OUTPut:RANGe
:OUTPut:SENSe
:OUTPut[:STATe]
:OUTPut:TIMEr
:OUTPut:TIMEr:STATe
:OUTPut:TRACk



:PRESet Commands
:PRESet[:APPLy]
:PRESet:KEY
:PRESet:USER[<n>]:SET:CURRent
:PRESet:USER[<n>]:SET:DEFault
:PRESet:USER[<n>]:SET:OCP
:PRESet:USER[<n>]:SET:OTP
:PRESet:USER[<n>]:SET:OVP
:PRESet:USER[<n>]:SET:SURE
:PRESet:USER[<n>]:SET:TRACk
:PRESet:USER[<n>]:SET:VOLTage



:RECAll Commands
:RECAll:LOCal
:RECAll:EXTErnal

DP800 Programming Guide

5-3

RIGOL



Chapter 5 Appendix

:RECorder Commands
:RECorder:DESTination?
:RECorder:MEMory
:RECorder:MMEMory
:RECorder:PERIod
:RECorder[:STATe]



:SOURce Commands
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate][:AMPLitude]
[:SOURce[<n>]]:CURRent[:LEVel][:IMMediate]:STEP[:INCRement]
[:SOURce[<n>]]:CURRent[:LEVel]:TRIGgered[:AMPLitude]
[:SOURce[<n>]]:CURRent:PROTection:CLEar
[:SOURce[<n>]]:CURRent:PROTection[:LEVel]
[:SOURce[<n>]]:CURRent:PROTection:STATe
[:SOURce[<n>]]:CURRent:PROTection:TRIPped?
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate][:AMPLitude]
[:SOURce[<n>]]:VOLTage[:LEVel][:IMMediate]:STEP[:INCRement]
[:SOURce[<n>]]:VOLTage[:LEVel]:TRIGgered[:AMPLitude]
[:SOURce[<n>]]:VOLTage:PROTection:CLEar
[:SOURce[<n>]]:VOLTage:PROTection[:LEVel]
[:SOURce[<n>]]:VOLTage:PROTection:STATe
[:SOURce[<n>]]:VOLTage:PROTection:TRIPped?
[:SOURce[<n>]]:VOLTage:RANGe



:STATus Commands
:STATus:QUEStionable:CONDition?
:STATus:QUEStionable:ENABle
:STATus:QUEStionable[:EVENt]?
:STATus:QUEStionable:INSTrument:ENABle
:STATus:QUEStionable:INSTrument[:EVENt]?
:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:COND?
:STATus:QUEStionable:INSTrument:ISUMmary[<n>]:ENABle
:STATus:QUEStionable:INSTrument:ISUMmary[<n>][:EVENt]?



:STORe Commands
:STORe:LOCal
:STORe:EXTErnal



:SYSTem Commands
:SYSTem:BEEPer:IMMediate
:SYSTem:BEEPer[:STATe]
:SYSTem:BRIGhtness
:SYSTem:COMMunicate:GPIB:ADDRess

5-4

DP800 Programming Guide

Chapter 5 Appendix

RIGOL

:SYSTem:COMMunicate:LAN:APPLy
:SYSTem:COMMunicate:LAN:AUTOip[:STATe]
:SYSTem:COMMunicate:LAN:DHCP[:STATe]
:SYSTem:COMMunicate:LAN:DNS
:SYSTem:COMMunicate:LAN:GATEway
:SYSTem:COMMunicate:LAN:IPADdress
:SYSTem:COMMunicate:LAN:MAC?
:SYSTem:COMMunicate:LAN:MANualip[:STATe]
:SYSTem:COMMunicate:LAN:SMASK
:SYSTem:COMMunicate:RS232:BAUD
:SYSTem:COMMunicate:RS232:DATABit
:SYSTem:COMMunicate:RS232:FLOWCrl
:SYSTem:COMMunicate:RS232:PARItybit
:SYSTem:COMMunicate:RS232:STOPBit
:SYSTem:CONTrast
:SYSTem:ERRor?
:SYSTem:KLOCk
:SYSTem:KLOCk:STATe
:SYSTem:LANGuage:TYPE
:SYSTem:LOCal
:SYSTem:LOCK
:SYSTem:ONOFFSync
:SYSTem:OTP
:SYSTem:POWEron
:SYSTem:REMote
:SYSTem:RGBBrightness
:SYSTem:RWLock
:SYSTem:SAVer
:SYSTem:SELF:TEST:BOARD?
:SYSTem:SELF:TEST:FAN?
:SYSTem:SELF:TEST:TEMP?
:SYSTem:TRACKMode
:SYSTem:VERSion?


:TIMEr Commands
:TIMEr:CYCLEs
:TIMEr:ENDState
:TIMEr:GROUPs
:TIMEr:PARAmeter
:TIMEr[:STATe]

DP800 Programming Guide

5-5

RIGOL

Chapter 5 Appendix

:TIMEr:TEMPlet:CONSTruct
:TIMEr:TEMPlet:FALLRate
:TIMEr:TEMPlet:INTErval
:TIMEr:TEMPlet:INVErt
:TIMEr:TEMPlet:MAXValue
:TIMEr:TEMPlet:MINValue
:TIMEr:TEMPlet:OBJect
:TIMEr:TEMPlet:PERIod
:TIMEr:TEMPlet:POINTs
:TIMEr:TEMPlet:RISERate
:TIMEr:TEMPlet:SELect
:TIMEr:TEMPlet:SYMMetry
:TIMEr:TEMPlet:WIDTh


:TRIGger Commands
:TRIGger:IN:CHTYpe
:TRIGger:IN:CURRent
:TRIGger:IN[:ENABle]
:TRIGger:IN:IMMEdiate
:TRIGger:IN:RESPonse
:TRIGger:IN:SENSitivity
:TRIGger:IN:SOURce
:TRIGger:IN:TYPE
:TRIGger:IN:VOLTage
:TRIGger:OUT:CONDition
:TRIGger:OUT:DUTY
:TRIGger:OUT[:ENABle]
:TRIGger:OUT:PERIod
:TRIGger:OUT:POLArity
:TRIGger:OUT:SIGNal
:TRIGger:OUT:SOURce
:TRIGger[:SEQuence]:DELay
:TRIGger[:SEQuence]:SOURce

5-6

DP800 Programming Guide

RIGOL

Chapter 5 Appendix

Appendix B: Factory Setting
Note: These parameters with * don’t change when the instrument is restored to its factory settings
(restarting the instrument when "Default" is selected in Utility  System PowerOn or sending the
*RST command can restore the instrument to its factory settings).
Channel Parameters
Voltage/Current Setting Values
Voltage/Current Limits
DP831A

OVP/OCP On/Off
Output On/Off
Track On/Off
Current Channel
Voltage/Current Setting Values
Voltage/Current Limits

DP832A

OVP/OCP On/Off
Output On/Off
Track On/Off
Current Channel
Voltage/Current Setting Values
Voltage/Current Limits

DP821A

OVP/OCP On/Off
Output On/Off
Sense On/Off
Current Channel
Voltage/Current Setting Values
Voltage/Current Limits

DP822A

OVP/OCP On/Off
Output On/Off
Sense On/Off

DP811A

DP800 Programming Guide

Current Channel
Voltage/Current Setting Values
Voltage/Current Limits
OVP/OCP On/Off
Output On/Off
Sense On/Off

CH1: 0.000V/5.0000A
CH2: 00.000V/2.0000A
CH3: -00.000V/2.0000A
CH1: 8.800V/5.5000A
CH2: 33.000V/2.2000A
CH3: -33.000V/2.2000A
CH1/CH2/CH3: Off/Off
CH1/CH2/CH3: Off
CH1: None
CH2/CH3: Off
CH1
CH1: 00.000V/3.000A
CH2: 00.000V/3.000A
CH3: 0.000V/3.000A
CH1: 33.000V/3.300A
CH2: 33.000V/3.300A
CH3: 5.500V/3.300A
CH1/CH2/CH3: Off/Off
CH1/CH2/CH3: Off
CH1/CH2: Off
CH3: None
CH1
CH1: 00.000V/1.0000A
CH2: 0.000V/10.000A
CH1: 66.000V/1.1000A
CH2: 8.800V/11.000A
CH1/CH2: Off/Off
CH1/CH2: Off
CH1: None
CH2: Off
CH1
CH1: 00.000V/5.000A
CH2: 0.000V/16.000A
CH1: 22.000V/5.500A
CH2: 5.500V/16.800A
CH1/CH2: Off/Off
CH1/CH2: Off
CH1: None
CH2: Off
CH1
00.000V/05.0000A
22.000V/11.0000A
Off/Off
Off
Off

5-7

RIGOL

Chapter 5 Appendix

DP813A

Current Range
Voltage/Current Setting Values
Voltage/Current Limits
OVP/OCP On/Off
Output On/Off
Sense On/Off
Current Range
Voltage/Current Setting Values
Voltage/Current Limits

DP831

[1]

OVP/OCP On/Off
Output On/Off
Track On/Off
Current Channel
Voltage/Current Setting Values
Voltage/Current Limits

DP832

[1]

OVP/OCP On/Off
Output On/Off
Track On/Off
Current Channel
Voltage/Current Setting Values
Voltage/Current Limits

DP822[1]

OVP/OCP On/Off
Output On/Off
Sense On/Off
Current Channel
Voltage/Current Setting Values
Voltage/Current Limits

DP821[1]

OVP/OCP On/Off
Output On/Off
Sense On/Off

DP811[1]

5-8

Current Channel
Voltage/Current Setting Values
Voltage/Current Limits
OVP/OCP On/Off
Output On/Off
Sense On/Off

Range1
00.000V/20.000A
8.800V/22.000A
Off/Off
Off
Off
Range1
CH1: 0.000V/5.000A
CH2: 00.00V/2.000A
CH3: -00.00V/2.000A
CH1: 8.800V/5.500A
CH2: 33.00V/2.200A
CH3: -33.00V/2.200A
CH1/CH2/CH3: Off/Off
CH1/CH2/CH3: Off
CH1: None
CH2/CH3: Off
CH1
CH1: 00.00V/3.000A
CH2: 00.00V/3.000A
CH3: 0.00V/3.000A
CH1: 33.00V/3.300A
CH2: 33.00V/3.300A
CH3: 5.50V/3.300A
CH1/CH2/CH3: Off/Off
CH1/CH2/CH3: Off
CH1/CH2: Off
CH3: None
CH1
CH1: 00.00V/5.000A
CH2: 0.00V/16.00A
CH1: 22.00V/5.500A
CH2: 5.50V/16.80A

CH1/CH2: Off/Off
CH1/CH2: Off
CH1: None
CH2: Off
CH1
CH1: 00.00V/1.000A
CH2: 0.00V/10.00A
CH1: 66.00V/1.100A
CH2: 8.80V/11.00A
CH1/CH2: Off/Off
CH1/CH2: Off
CH1: None
CH2: Off
CH1
00.00V/05.00A
22.00V/11.00A
Off/Off
Off
Off

DP800 Programming Guide

RIGOL

Chapter 5 Appendix

DP813[1]

Current Range
Voltage/Current Setting Values
Voltage/Current Limits
OVP/OCP On/Off
Output On/Off
Sense On/Off
Current Range

Display*
Luminance
Contrast
RGB Brightness
Display Mode
Display Theme[2]

50%
25%
50%
Normal
Green

System Setting
Language*
Power-on Setting*
Print Destination
Print Copies
Print Format
Print Invert
Print Color
OTP
Beeper
Screen Saver
Keyboard Lock Password*
Track Mode
On/Off Sync
Preset Key

Chinese
Default
USB Disk
1
BMP
Yes
Grayscale
On
On
Off
Off
Synchronous
Disable
Default

I/O Setting*
GPIB Address
RS232
Baud Rate
Data Bit
Stop Bit
Parity Bit
Hardware Flow Control
LAN
DHCP
Auto IP
Manual IP
Timer
Channel
Timer On/Off
Output Groups
DP800 Programming Guide

Range1
00.00V/20.00A
8.80V/22.00A

Off/Off
Off
Off
Range1

2
9600
8
1
None
Off
On
On
Off

CH1
Off
1
5-9

RIGOL

Timer Parameters
Cycles
End State
Templet
Sine
Object
Current
Max Value
Min Value
Points
Interval
Inverted

Chapter 5 Appendix

Volt: 1V; Curr: 1A; Set: 1s
1
Output Off
Sine
Voltage
0A
1V
0V
10
1s
Off

Delayer
Channel
Delayer On/off
Output Groups
Delayer Parameter
Cycles
End State
State Generation
Time Generation
FixTime
Increase/Decline
Stop Condition

CH1
Off
1
State: Off, On alternately
1
Output Off
0 1Patt
FixTime
On Delay: 1s; Off Delay: 1s
Base Value: 1s; Step: 1s
None

Recorder
Recorder Switch
Record Period
Destination

Off
1s
C:\REC 10:RIGOL.ROF

Analyzer
Channel Number
Analysis Object
Display
Current Time
Start Time
End Time
Group
Median
Mode
Average
Variance
Range
Min Value
Max Value
Mead Deviation

CH1
Voltage
Curve
1s
1s
2s
0
0V
0V
0V
0V
0V
0V
0V
0V

5-10

DP800 Programming Guide

RIGOL

Chapter 5 Appendix

Monitor
Channel
Monitor Switch
Monitor Condition
Voltage
Current
Power
Stop Mode
Trigger
Direction
Trigger Input
Data Line
Source under Control
Trigger Type
Output Response
Sensitivity
Enable
Trigger Output
Data Line
Control Source
Trigger Condition
Output Signal
Square
Polarity
Enable
Store
Browser
Directory
File
File Type

CH1
Off
>Volt
Half of the rated value of CH1 (for DP811A/DP811, it is half of the rated
value of Range 1)
Half of the rated value of CH1 (for DP811A/DP811, it is half of the rated
value of Range 1)
The product of voltage times current
Output Off, Warning, Beeper

In
D0
CH1
RiseEdge
Output Off
Low
No
D0
CH1
Output Off
Level
Period: 1s; Duty: 50%
Positive
No
Directory
C:/
The first file
*.rsf

Note[1]: When DP831 (DP832, DP821, DP822, DP813, or DP811) is installed with the high resolution option, its channel
parameters are the same with those of DP831A (DP832A, DP821A, DP822A, DP813A, or DP811A).
Note[2]: This parameter is applicable to DP831, DP832, DP822, DP821, DP813, and DP811.

DP800 Programming Guide

5-11

RIGOL

Chapter 5 Appendix

Appendix C: Warranty
RIGOL TECHNOLOGIES CO., LTD. (hereinafter referred to as RIGOL) warrants that the product will be
free from defects in materials and workmanship within the warranty period. If a product proves defective
within the warranty period, RIGOL guarantees free replacement or repair for the defective product.
To get repair service, please contact with your nearest RIGOL sales or service office.
There is no other warranty, expressed or implied, except such as is expressly set forth herein or other
applicable warranty card. There is no implied warranty of merchantability or fitness for a particular purpose.
Under no circumstances shall RIGOL be liable for any consequential, indirect, ensuing, or special damages
for any breach of warranty in any case.

5-12

DP800 Programming Guide

